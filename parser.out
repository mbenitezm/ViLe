Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> generate_main_goto functionloop fill_main_goto main
Rule 2     generate_main_goto -> <empty>
Rule 3     fill_main_goto -> <empty>
Rule 4     main -> MAIN block
Rule 5     functionloop -> function functionloop
Rule 6     functionloop -> <empty>
Rule 7     function -> FUNCTION function_head function_end
Rule 8     function_head -> VOID function_def
Rule 9     function_head -> BOOL function_with_return_def
Rule 10    function_head -> INT function_with_return_def
Rule 11    function_head -> FLOAT function_with_return_def
Rule 12    function_head -> STRING function_with_return_def
Rule 13    function_with_return_def -> ID add_function_to_global_variables O_PARENTHESIS parameters C_PARENTHESIS functionblock
Rule 14    add_function_to_global_variables -> <empty>
Rule 15    function_def -> ID O_PARENTHESIS parameters C_PARENTHESIS block
Rule 16    type -> BOOL
Rule 17    type -> INT
Rule 18    type -> FLOAT
Rule 19    type -> STRING
Rule 20    parametertype -> BOOL
Rule 21    parametertype -> INT
Rule 22    parametertype -> FLOAT
Rule 23    parametertype -> STRING
Rule 24    block -> O_BRACKET statutesloop C_BRACKET
Rule 25    functionblock -> O_BRACKET statutesloop functionreturn C_BRACKET
Rule 26    functionreturn -> RETURN p_add_function_var_to_stack O_BRACKET expression C_BRACKET SEMICOLON
Rule 27    functionreturn -> RETURN p_add_function_var_to_stack expression SEMICOLON
Rule 28    add_function_var_to_stack -> <empty>
Rule 29    function_end -> <empty>
Rule 30    statutesloop -> statute statutesloop
Rule 31    statutesloop -> <empty>
Rule 32    statute -> init
Rule 33    statute -> condition
Rule 34    statute -> writting
Rule 35    statute -> loop
Rule 36    statute -> assignation
Rule 37    statute -> functioncall
Rule 38    assignation -> var_assign EQUALS add_equals expression equals_quadruple SEMICOLON
Rule 39    writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON
Rule 40    start_printing -> <empty>
Rule 41    print_quadruple -> <empty>
Rule 42    writtingloop -> start_printing expression print_quadruple optionalwritting
Rule 43    optionalwritting -> COMMA writtingloop
Rule 44    optionalwritting -> <empty>
Rule 45    init -> listinit
Rule 46    init -> normalinit
Rule 47    normalinit -> type var EQUALS add_equals expression equals_quadruple SEMICOLON
Rule 48    equals_quadruple -> <empty>
Rule 49    add_equals -> <empty>
Rule 50    listinit -> LIST type var EQUALS list SEMICOLON
Rule 51    list -> O_S_BRACKET listelements C_S_BRACKET
Rule 52    listelements -> constants optionalconstants
Rule 53    listelements -> <empty>
Rule 54    optionalconstants -> COMMA constants optionalconstants
Rule 55    optionalconstants -> <empty>
Rule 56    condition -> IF O_PARENTHESIS expression C_PARENTHESIS start_condition block else end_condition
Rule 57    else -> ELSE else_condition block
Rule 58    else -> <empty>
Rule 59    start_condition -> <empty>
Rule 60    else_condition -> <empty>
Rule 61    end_condition -> <empty>
Rule 62    expression -> expression2 expressionoptional
Rule 63    expressionoptional -> logicop expression2 logic_op_quadruple
Rule 64    expressionoptional -> <empty>
Rule 65    expression2 -> exp expression2optional
Rule 66    expression2optional -> relop exp relop_quadruple
Rule 67    expression2optional -> <empty>
Rule 68    logicop -> AND
Rule 69    logicop -> OR
Rule 70    logic_op_quadruple -> <empty>
Rule 71    relop -> EQUALITY
Rule 72    relop -> GREATER
Rule 73    relop -> GREATER_EQUAL
Rule 74    relop -> LESS
Rule 75    relop -> LESS_EQUAL
Rule 76    relop -> DIFFERENT
Rule 77    relop_quadruple -> <empty>
Rule 78    exp -> term exp_quadruple exploop
Rule 79    exp_quadruple -> <empty>
Rule 80    exploop -> addsub exp
Rule 81    exploop -> <empty>
Rule 82    addsub -> SUM
Rule 83    addsub -> MINUS
Rule 84    term -> fact term_quadruple termloop
Rule 85    term_quadruple -> <empty>
Rule 86    termloop -> divmult term
Rule 87    termloop -> <empty>
Rule 88    divmult -> MULTIPLY
Rule 89    divmult -> DIVIDE
Rule 90    divmult -> MOD
Rule 91    fact -> varconst
Rule 92    fact -> O_PARENTHESIS add_o_parenthesis expression C_PARENTHESIS add_c_parenthesis
Rule 93    add_o_parenthesis -> <empty>
Rule 94    add_c_parenthesis -> <empty>
Rule 95    var_assign -> ID add_to_stack listaccess
Rule 96    var -> ID listaccess
Rule 97    listaccess -> O_S_BRACKET INTCONST C_S_BRACKET
Rule 98    listaccess -> <empty>
Rule 99    varconst -> varconstfunction
Rule 100   varconst -> constants
Rule 101   varconstfunction -> ID functionorlist
Rule 102   add_to_stack -> <empty>
Rule 103   functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET
Rule 104   functionorlist -> check_function_exists O_PARENTHESIS parametersinput C_PARENTHESIS generate_gosub
Rule 105   functionorlist -> add_to_stack
Rule 106   constants -> INTCONST add_int_constant_to_dict
Rule 107   constants -> FLOATCONST add_float_constant_to_dict
Rule 108   constants -> STRINGCONST add_string_constant_to_dict
Rule 109   constants -> booleanconst
Rule 110   booleanconst -> TRUE add_bool_constant_to_dict
Rule 111   booleanconst -> FALSE add_bool_constant_to_dict
Rule 112   add_int_constant_to_dict -> <empty>
Rule 113   add_float_constant_to_dict -> <empty>
Rule 114   add_string_constant_to_dict -> <empty>
Rule 115   add_bool_constant_to_dict -> <empty>
Rule 116   loop -> whileloop
Rule 117   loop -> timesloop
Rule 118   whileloop -> WHILE start_while O_PARENTHESIS expression C_PARENTHESIS condition_while block end_while
Rule 119   start_while -> <empty>
Rule 120   condition_while -> <empty>
Rule 121   end_while -> <empty>
Rule 122   timesloop -> TIMES O_PARENTHESIS expression C_PARENTHESIS start_times block end_times
Rule 123   start_times -> <empty>
Rule 124   end_times -> <empty>
Rule 125   functioncall -> ID check_function_exists O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON generate_gosub
Rule 126   check_function_exists -> <empty>
Rule 127   generate_gosub -> <empty>
Rule 128   parametersinput -> expression push_type_to_function_options generate_parameter_quadruple parametersinputloop check_params_order
Rule 129   parametersinput -> <empty>
Rule 130   parametersinputloop -> COMMA expression push_type_to_function_options generate_parameter_quadruple parametersinputloop
Rule 131   parametersinputloop -> <empty>
Rule 132   push_type_to_function_options -> <empty>
Rule 133   check_params_order -> <empty>
Rule 134   generate_parameter_quadruple -> <empty>
Rule 135   parameters -> parameterinit parametersloop
Rule 136   parameters -> <empty>
Rule 137   parameterinit -> parametertype ID
Rule 138   parametersloop -> COMMA parameterinit parametersloop
Rule 139   parametersloop -> <empty>

Terminals, with rules where they appear

AND                  : 68
BOOL                 : 9 16 20
COMMA                : 43 54 130 138
C_BRACKET            : 24 25 26
C_PARENTHESIS        : 13 15 39 56 92 104 118 122 125
C_S_BRACKET          : 51 97 103
DIFFERENT            : 76
DIVIDE               : 89
ELSE                 : 57
EQUALITY             : 71
EQUALS               : 38 47 50
FALSE                : 111
FLOAT                : 11 18 22
FLOATCONST           : 107
FUNCTION             : 7
GREATER              : 72
GREATER_EQUAL        : 73
ID                   : 13 15 95 96 101 125 137
IF                   : 56
INT                  : 10 17 21
INTCONST             : 97 103 106
LESS                 : 74
LESS_EQUAL           : 75
LIST                 : 50
MAIN                 : 4
MINUS                : 83
MOD                  : 90
MULTIPLY             : 88
OR                   : 69
O_BRACKET            : 24 25 26
O_PARENTHESIS        : 13 15 39 56 92 104 118 122 125
O_S_BRACKET          : 51 97 103
PRINT                : 39
RETURN               : 26 27
SEMICOLON            : 26 27 38 39 47 50 125
STRING               : 12 19 23
STRINGCONST          : 108
SUM                  : 82
TIMES                : 122
TRUE                 : 110
VOID                 : 8
WHILE                : 118
error                : 

Nonterminals, with rules where they appear

add_bool_constant_to_dict : 110 111
add_c_parenthesis    : 92
add_equals           : 38 47
add_float_constant_to_dict : 107
add_function_to_global_variables : 13
add_function_var_to_stack : 
add_int_constant_to_dict : 106
add_o_parenthesis    : 92
add_string_constant_to_dict : 108
add_to_stack         : 95 105
addsub               : 80
assignation          : 36
block                : 4 15 56 57 118 122
booleanconst         : 109
check_function_exists : 104 125
check_params_order   : 128
condition            : 33
condition_while      : 118
constants            : 52 54 100
divmult              : 86
else                 : 56
else_condition       : 57
end_condition        : 56
end_times            : 122
end_while            : 118
equals_quadruple     : 38 47
exp                  : 65 66 80
exp_quadruple        : 78
exploop              : 78
expression           : 26 27 38 42 47 56 92 118 122 128 130
expression2          : 62 63
expression2optional  : 65
expressionoptional   : 62
fact                 : 84
fill_main_goto       : 1
function             : 5
function_def         : 8
function_end         : 7
function_head        : 7
function_with_return_def : 9 10 11 12
functionblock        : 13
functioncall         : 37
functionloop         : 1 5
functionorlist       : 101
functionreturn       : 25
generate_gosub       : 104 125
generate_main_goto   : 1
generate_parameter_quadruple : 128 130
init                 : 32
list                 : 50
listaccess           : 95 96
listelements         : 51
listinit             : 45
logic_op_quadruple   : 63
logicop              : 63
loop                 : 35
main                 : 1
normalinit           : 46
optionalconstants    : 52 54
optionalwritting     : 42
p_add_function_var_to_stack : 26 27
parameterinit        : 135 138
parameters           : 13 15
parametersinput      : 104 125
parametersinputloop  : 128 130
parametersloop       : 135 138
parametertype        : 137
print_quadruple      : 42
program              : 0
push_type_to_function_options : 128 130
relop                : 66
relop_quadruple      : 66
start_condition      : 56
start_printing       : 42
start_times          : 122
start_while          : 118
statute              : 30
statutesloop         : 24 25 30
term                 : 78 86
term_quadruple       : 84
termloop             : 84
timesloop            : 117
type                 : 47 50
var                  : 47 50
var_assign           : 38
varconst             : 91
varconstfunction     : 99
whileloop            : 116
writting             : 34
writtingloop         : 39 43

