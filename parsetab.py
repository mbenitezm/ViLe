
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x97r\x95\xd8\xf9\xcb3\x04e\x80\xe7v\x7fIVg'
    
_lr_action_items = {'RETURN':([45,47,170,193,195,198,201,208,209,219,221,223,224,225,226,228,230,231,243,264,267,268,269,270,272,273,275,],[-61,-60,-54,-53,-149,-65,218,-62,-147,218,-137,-136,-47,-50,-49,-48,-51,-52,-31,-146,-76,-144,-142,-79,-139,-72,-75,]),'LESS':([83,85,86,87,88,89,91,92,93,94,95,96,98,115,117,118,127,133,135,136,137,139,160,164,182,186,187,189,203,204,232,],[-131,-133,-132,-117,123,-130,-120,-118,-97,-133,-109,-127,-103,-125,-128,-126,-124,-123,-119,-99,-129,-105,-96,-102,-112,-121,-98,-104,-110,-149,-122,]),'VOID':([4,],[8,]),'O_PARENTHESIS':([23,25,31,32,35,36,37,38,39,50,52,61,63,64,65,66,69,71,84,91,99,100,102,103,106,116,119,120,121,122,123,125,126,128,130,131,132,144,156,158,159,161,163,165,166,167,192,211,217,218,220,229,239,240,242,244,249,251,],[-21,-21,-18,-20,-20,62,63,-140,65,-148,71,75,84,99,-55,-64,106,84,-111,-148,84,84,84,-64,84,84,-94,-89,-90,-91,-92,-93,84,-86,84,-87,156,84,84,-100,-101,84,-107,-106,84,-108,-55,84,239,-34,-140,244,84,84,251,84,84,84,]),'ELSE':([73,197,243,267,],[-30,212,-31,271,]),'FLOATCONST':([63,65,66,71,84,99,100,102,103,106,116,119,120,121,122,123,125,126,128,130,131,144,156,158,159,161,163,165,166,167,178,192,211,216,218,239,240,244,249,251,],[83,-55,-64,83,-111,83,83,83,-64,83,83,-94,-89,-90,-91,-92,-93,83,-86,83,-87,83,83,-100,-101,83,-107,-106,83,-108,83,-55,83,83,-34,83,83,83,83,83,]),'WHILE':([33,40,41,45,47,48,49,51,53,54,59,60,73,170,188,193,195,197,198,201,205,206,208,209,213,219,221,223,224,225,226,228,230,231,233,237,243,246,264,267,268,269,270,272,273,275,],[38,-134,-41,-61,-60,-43,-135,-42,38,-45,-46,-44,-30,-54,-146,-53,-149,-74,-65,220,-143,-142,-62,-147,-79,220,-137,-136,-47,-50,-49,-48,-51,-52,-138,-71,-31,-73,-146,-76,-144,-142,-79,-139,-72,-75,]),'GREATER':([83,85,86,87,88,89,91,92,93,94,95,96,98,115,117,118,127,133,135,136,137,139,160,164,182,186,187,189,203,204,232,],[-131,-133,-132,-117,121,-130,-120,-118,-97,-133,-109,-127,-103,-125,-128,-126,-124,-123,-119,-99,-129,-105,-96,-102,-112,-121,-98,-104,-110,-149,-122,]),'C_BRACKET':([33,40,41,45,47,48,49,51,53,54,55,59,60,72,73,83,85,86,87,88,89,90,91,92,93,94,95,96,98,115,117,118,124,127,129,133,135,136,137,139,154,155,160,164,170,182,183,184,186,187,188,189,193,195,197,198,201,203,204,205,206,208,209,213,219,221,222,223,224,225,226,227,228,230,231,232,233,237,241,243,246,255,256,264,265,267,268,269,270,272,273,275,],[-37,-134,-41,-61,-60,-43,-135,-42,-37,-45,73,-46,-44,-36,-30,-131,-133,-132,-117,-85,-130,-82,-120,-118,-97,-133,-109,-127,-103,-125,-128,-126,-83,-124,-80,-123,-119,-99,-129,-105,-95,-88,-96,-102,-54,-112,-84,-81,-121,-98,-146,-104,-53,-149,-74,-65,-40,-110,-149,-143,-142,-62,-147,-79,-40,-137,243,-136,-47,-50,-49,-39,-48,-51,-52,-122,-138,-71,-38,-31,-73,261,-33,-146,-32,-76,-144,-142,-79,-139,-72,-75,]),'PRINT':([33,40,41,45,47,48,49,51,53,54,59,60,73,170,188,193,195,197,198,201,205,206,208,209,213,219,221,223,224,225,226,228,230,231,233,237,243,246,264,267,268,269,270,272,273,275,],[39,-134,-41,-61,-60,-43,-135,-42,39,-45,-46,-44,-30,-54,-146,-53,-149,-74,-65,39,-143,-142,-62,-147,-79,39,-137,-136,-47,-50,-49,-48,-51,-52,-138,-71,-31,-73,-146,-76,-144,-142,-79,-139,-72,-75,]),'C_PARENTHESIS':([62,75,79,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,106,108,110,111,113,115,117,118,124,127,129,133,135,136,137,139,140,141,146,147,152,153,154,155,156,160,164,169,175,181,182,183,184,185,186,187,189,191,196,203,204,207,210,232,234,235,245,248,252,253,257,259,],[-158,-158,112,-161,-131,-133,-132,-117,-85,-130,-82,-120,-118,-97,-133,-109,-127,138,-103,142,-151,148,150,-159,-157,-125,-128,-126,-83,-124,-80,-123,-119,-99,-129,-105,168,-56,174,-154,-161,182,-95,-88,-151,-96,-102,-59,-156,-160,-112,-84,-81,204,-121,-98,-104,-57,-153,-110,-149,-58,-155,-122,-150,-154,-156,254,258,-153,262,-152,]),'TRUE':([63,65,66,71,84,99,100,102,103,106,116,119,120,121,122,123,125,126,128,130,131,144,156,158,159,161,163,165,166,167,178,192,211,216,218,239,240,244,249,251,],[85,-55,-64,85,-111,85,85,85,-64,85,85,-94,-89,-90,-91,-92,-93,85,-86,85,-87,85,85,-100,-101,85,-107,-106,85,-108,85,-55,85,85,-34,85,85,85,85,85,]),'MINUS':([83,85,86,87,89,91,92,93,94,95,96,98,115,117,118,127,133,135,136,137,139,164,182,186,189,203,204,232,],[-131,-133,-132,-117,-130,-120,-118,-97,-133,-109,-127,-103,-125,-128,-126,-124,-123,-119,159,-129,-105,-102,-112,-121,-104,-110,-149,-122,]),'DIVIDE':([83,85,86,87,89,91,92,94,95,96,98,115,117,118,127,133,135,137,139,182,186,203,204,232,],[-131,-133,-132,-117,-130,-120,-118,-133,-109,-127,-103,-125,-128,-126,-124,-123,-119,-129,163,-112,-121,-110,-149,-122,]),'EQUALITY':([83,85,86,87,88,89,91,92,93,94,95,96,98,115,117,118,127,133,135,136,137,139,160,164,182,186,187,189,203,204,232,],[-131,-133,-132,-117,120,-130,-120,-118,-97,-133,-109,-127,-103,-125,-128,-126,-124,-123,-119,-99,-129,-105,-96,-102,-112,-121,-98,-104,-110,-149,-122,]),'SEMICOLON':([83,85,86,87,88,89,90,91,92,93,94,95,96,98,115,117,118,124,127,129,133,135,136,137,139,142,143,154,155,160,164,171,172,174,177,182,183,184,186,187,189,194,203,204,214,232,250,261,],[-131,-133,-132,-117,-85,-130,-82,-120,-118,-97,-133,-109,-127,-103,-125,-128,-126,-83,-124,-80,-123,-119,-99,-129,-105,170,-63,-95,-88,-96,-102,193,-63,195,198,-112,-84,-81,-121,-98,-104,208,-110,-149,-66,-122,256,265,]),'STRINGCONST':([63,65,66,71,84,99,100,102,103,106,116,119,120,121,122,123,125,126,128,130,131,144,156,158,159,161,163,165,166,167,178,192,211,216,218,239,240,244,249,251,],[86,-55,-64,86,-111,86,86,86,-64,86,86,-94,-89,-90,-91,-92,-93,86,-86,86,-87,86,86,-100,-101,86,-107,-106,86,-108,86,-55,86,86,-34,86,86,86,86,86,]),'COMMA':([82,83,85,86,87,88,89,90,91,92,93,94,95,96,98,111,115,117,118,124,127,129,133,135,136,137,139,141,147,152,154,155,160,164,169,175,182,183,184,186,187,189,196,200,203,204,232,235,238,245,253,],[114,-131,-133,-132,-117,-85,-130,-82,-120,-118,-97,-133,-109,-127,-103,-159,-125,-128,-126,-83,-124,-80,-123,-119,-99,-129,-105,-56,-154,114,-95,-88,-96,-102,192,-156,-112,-84,-81,-121,-98,-104,211,216,-110,-149,-122,-154,216,-156,211,]),'O_S_BRACKET':([50,68,70,91,149,],[-120,105,105,134,178,]),'$end':([2,21,30,34,73,],[0,-2,-1,-5,-30,]),'FUNCTION':([0,1,3,10,17,22,24,26,27,28,73,180,202,243,],[-3,4,4,-35,-9,-15,-11,-14,-12,-13,-30,-19,-17,-31,]),'DIFFERENT':([83,85,86,87,88,89,91,92,93,94,95,96,98,115,117,118,127,133,135,136,137,139,160,164,182,186,187,189,203,204,232,],[-131,-133,-132,-117,119,-130,-120,-118,-97,-133,-109,-127,-103,-125,-128,-126,-124,-123,-119,-99,-129,-105,-96,-102,-112,-121,-98,-104,-110,-149,-122,]),'STRING':([4,33,40,41,45,47,48,49,51,53,54,58,59,60,62,73,75,114,170,188,193,195,197,198,201,205,206,208,209,213,219,221,223,224,225,226,228,230,231,233,237,243,246,264,267,268,269,270,272,273,275,],[7,46,-134,-41,-61,-60,-43,-135,-42,46,-45,46,-46,-44,78,-30,78,78,-54,-146,-53,-149,-74,-65,46,-143,-142,-62,-147,-79,46,-137,-136,-47,-50,-49,-48,-51,-52,-138,-71,-31,-73,-146,-76,-144,-142,-79,-139,-72,-75,]),'EQUALS':([43,50,67,68,70,104,107,109,173,],[66,-120,103,-116,-116,-114,-113,149,-115,]),'TIMES':([33,40,41,45,47,48,49,51,53,54,59,60,73,170,188,193,195,197,198,201,205,206,208,209,213,219,221,223,224,225,226,228,230,231,233,237,243,246,264,267,268,269,270,272,273,275,],[37,-134,-41,-61,-60,-43,-135,-42,37,-45,-46,-44,-30,-54,-146,-53,-149,-74,-65,217,-143,-142,-62,-147,-79,217,-137,-136,-47,-50,-49,-48,-51,-52,-138,-71,-31,-73,-146,-76,-144,-142,-79,-139,-72,-75,]),'INTCONST':([63,65,66,71,84,99,100,102,103,105,106,116,119,120,121,122,123,125,126,128,130,131,134,144,156,158,159,161,163,165,166,167,178,192,211,216,218,239,240,244,249,251,],[89,-55,-64,89,-111,89,89,89,-64,145,89,89,-94,-89,-90,-91,-92,-93,89,-86,89,-87,157,89,89,-100,-101,89,-107,-106,89,-108,89,-55,89,89,-34,89,89,89,89,89,]),'O_BRACKET':([20,29,112,138,148,150,151,162,168,176,179,190,212,218,236,240,254,258,260,262,263,266,271,274,],[-6,33,-10,-145,-77,-10,33,33,-141,33,201,33,-78,-34,33,249,-145,-77,201,-141,201,201,-78,201,]),'ID':([7,8,9,11,12,14,15,16,18,19,33,40,41,42,44,45,46,47,48,49,51,53,54,56,57,59,60,63,65,66,71,73,74,76,77,78,80,81,84,99,100,102,103,106,116,119,120,121,122,123,125,126,128,130,131,144,156,158,159,161,163,165,166,167,170,188,192,193,195,197,198,201,205,206,208,209,211,213,218,219,221,223,224,225,226,228,230,231,233,237,239,240,243,244,246,249,251,264,267,268,269,270,272,273,275,],[-16,-16,-16,-16,-16,23,25,23,23,23,50,-134,-41,-22,68,-61,-25,-60,-43,-135,-42,50,-45,-23,-24,-46,-44,91,-55,-64,91,-30,68,111,-28,-29,-27,-26,-111,91,91,91,-64,91,91,-94,-89,-90,-91,-92,-93,91,-86,91,-87,91,91,-100,-101,91,-107,-106,91,-108,-54,-146,-55,-53,-149,-74,-65,50,-143,-142,-62,-147,91,-79,-34,50,-137,-136,-47,-50,-49,-48,-51,-52,-138,-71,91,91,-31,91,-73,91,91,-146,-76,-144,-142,-79,-139,-72,-75,]),'IF':([33,40,41,45,47,48,49,51,53,54,59,60,73,170,188,193,195,197,198,201,205,206,208,209,213,219,221,223,224,225,226,228,230,231,233,237,243,246,264,267,268,269,270,272,273,275,],[52,-134,-41,-61,-60,-43,-135,-42,52,-45,-46,-44,-30,-54,-146,-53,-149,-74,-65,229,-143,-142,-62,-147,-79,229,-137,-136,-47,-50,-49,-48,-51,-52,-138,-71,-31,-73,-146,-76,-144,-142,-79,-139,-72,-75,]),'AND':([83,85,86,87,88,89,90,91,92,93,94,95,96,98,115,117,118,124,127,133,135,136,137,139,154,160,164,182,183,186,187,189,203,204,232,],[-131,-133,-132,-117,-85,-130,128,-120,-118,-97,-133,-109,-127,-103,-125,-128,-126,-83,-124,-123,-119,-99,-129,-105,-95,-96,-102,-112,-84,-121,-98,-104,-110,-149,-122,]),'FALSE':([63,65,66,71,84,99,100,102,103,106,116,119,120,121,122,123,125,126,128,130,131,144,156,158,159,161,163,165,166,167,178,192,211,216,218,239,240,244,249,251,],[94,-55,-64,94,-111,94,94,94,-64,94,94,-94,-89,-90,-91,-92,-93,94,-86,94,-87,94,94,-100,-101,94,-107,-106,94,-108,94,-55,94,94,-34,94,94,94,94,94,]),'GREATER_EQUAL':([83,85,86,87,88,89,91,92,93,94,95,96,98,115,117,118,127,133,135,136,137,139,160,164,182,186,187,189,203,204,232,],[-131,-133,-132,-117,122,-130,-120,-118,-97,-133,-109,-127,-103,-125,-128,-126,-124,-123,-119,-99,-129,-105,-96,-102,-112,-121,-98,-104,-110,-149,-122,]),'MULTIPLY':([83,85,86,87,89,91,92,94,95,96,98,115,117,118,127,133,135,137,139,182,186,203,204,232,],[-131,-133,-132,-117,-130,-120,-118,-133,-109,-127,-103,-125,-128,-126,-124,-123,-119,-129,165,-112,-121,-110,-149,-122,]),'INT':([4,33,40,41,45,47,48,49,51,53,54,58,59,60,62,73,75,114,170,188,193,195,197,198,201,205,206,208,209,213,219,221,223,224,225,226,228,230,231,233,237,243,246,264,267,268,269,270,272,273,275,],[12,56,-134,-41,-61,-60,-43,-135,-42,56,-45,56,-46,-44,80,-30,80,80,-54,-146,-53,-149,-74,-65,56,-143,-142,-62,-147,-79,56,-137,-136,-47,-50,-49,-48,-51,-52,-138,-71,-31,-73,-146,-76,-144,-142,-79,-139,-72,-75,]),'SUM':([83,85,86,87,89,91,92,93,94,95,96,98,115,117,118,127,133,135,136,137,139,164,182,186,189,203,204,232,],[-131,-133,-132,-117,-130,-120,-118,-97,-133,-109,-127,-103,-125,-128,-126,-124,-123,-119,158,-129,-105,-102,-112,-121,-104,-110,-149,-122,]),'FLOAT':([4,33,40,41,45,47,48,49,51,53,54,58,59,60,62,73,75,114,170,188,193,195,197,198,201,205,206,208,209,213,219,221,223,224,225,226,228,230,231,233,237,243,246,264,267,268,269,270,272,273,275,],[9,57,-134,-41,-61,-60,-43,-135,-42,57,-45,57,-46,-44,77,-30,77,77,-54,-146,-53,-149,-74,-65,57,-143,-142,-62,-147,-79,57,-137,-136,-47,-50,-49,-48,-51,-52,-138,-71,-31,-73,-146,-76,-144,-142,-79,-139,-72,-75,]),'LIST':([33,40,41,45,47,48,49,51,53,54,59,60,73,170,188,193,195,197,198,201,205,206,208,209,213,219,221,223,224,225,226,228,230,231,233,237,243,246,264,267,268,269,270,272,273,275,],[58,-134,-41,-61,-60,-43,-135,-42,58,-45,-46,-44,-30,-54,-146,-53,-149,-74,-65,58,-143,-142,-62,-147,-79,58,-137,-136,-47,-50,-49,-48,-51,-52,-138,-71,-31,-73,-146,-76,-144,-142,-79,-139,-72,-75,]),'C_S_BRACKET':([83,85,86,89,94,96,115,117,118,127,137,145,157,178,199,200,215,238,247,],[-131,-133,-132,-130,-133,-127,-125,-128,-126,-124,-129,173,186,-68,214,-70,-67,-70,-69,]),'BOOL':([4,33,40,41,45,47,48,49,51,53,54,58,59,60,62,73,75,114,170,188,193,195,197,198,201,205,206,208,209,213,219,221,223,224,225,226,228,230,231,233,237,243,246,264,267,268,269,270,272,273,275,],[11,42,-134,-41,-61,-60,-43,-135,-42,42,-45,42,-46,-44,81,-30,81,81,-54,-146,-53,-149,-74,-65,42,-143,-142,-62,-147,-79,42,-137,-136,-47,-50,-49,-48,-51,-52,-138,-71,-31,-73,-146,-76,-144,-142,-79,-139,-72,-75,]),'LESS_EQUAL':([83,85,86,87,88,89,91,92,93,94,95,96,98,115,117,118,127,133,135,136,137,139,160,164,182,186,187,189,203,204,232,],[-131,-133,-132,-117,125,-130,-120,-118,-97,-133,-109,-127,-103,-125,-128,-126,-124,-123,-119,-99,-129,-105,-96,-102,-112,-121,-98,-104,-110,-149,-122,]),'MAIN':([0,1,3,5,6,10,13,17,22,24,26,27,28,73,180,202,243,],[-3,-8,-8,-4,-7,-35,20,-9,-15,-11,-14,-12,-13,-30,-19,-17,-31,]),'OR':([83,85,86,87,88,89,90,91,92,93,94,95,96,98,115,117,118,124,127,133,135,136,137,139,154,160,164,182,183,186,187,189,203,204,232,],[-131,-133,-132,-117,-85,-130,131,-120,-118,-97,-133,-109,-127,-103,-125,-128,-126,-83,-124,-123,-119,-99,-129,-105,-95,-96,-102,-112,-84,-121,-98,-104,-110,-149,-122,]),'MOD':([83,85,86,87,89,91,92,94,95,96,98,115,117,118,127,133,135,137,139,182,186,203,204,232,],[-131,-133,-132,-117,-130,-120,-118,-133,-109,-127,-103,-125,-128,-126,-124,-123,-119,-129,167,-112,-121,-110,-149,-122,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersinputloop':([196,253,],[210,259,]),'optionalconstants':([200,238,],[215,247,]),'function_end':([10,],[17,]),'functionstatutesloop':([201,219,],[222,241,]),'whileloop':([33,53,],[40,40,]),'parameters':([62,75,],[79,110,]),'check_function_exists':([50,91,],[69,132,]),'add_string_constant_to_dict':([86,],[118,]),'program':([0,],[2,]),'functioncondition':([201,219,],[228,228,]),'add_function_var_to_stack':([218,],[240,]),'main':([13,],[21,]),'start_condition':([148,258,],[176,263,]),'listinit':([33,53,201,219,],[47,47,47,47,]),'functionloops':([201,219,],[225,225,]),'varconstfunction':([63,71,99,100,102,106,116,126,130,144,156,161,166,211,239,240,244,249,251,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'add_float_constant_to_dict':([83,],[115,]),'expression2':([63,71,99,100,102,106,116,130,144,156,211,239,240,244,249,251,],[90,90,90,90,90,90,90,155,90,90,90,90,90,90,90,90,]),'condition':([33,53,],[51,51,]),'term':([63,71,99,100,102,106,116,126,130,144,156,161,166,211,239,240,244,249,251,],[93,93,93,93,93,93,93,93,93,93,93,93,189,93,93,93,93,93,93,]),'end_condition':([213,270,],[237,273,]),'assignation':([33,53,201,219,],[54,54,230,230,]),'list':([149,],[177,]),'functionblock':([179,260,263,266,274,],[202,264,267,269,275,]),'normalinit':([33,53,201,219,],[45,45,45,45,]),'term_quadruple':([98,],[139,]),'add_function_id_to_options':([23,25,],[31,32,]),'add_function_to_global_variables':([31,],[35,]),'functionloop':([1,3,],[5,6,]),'termloop':([139,],[164,]),'start_times':([138,254,],[162,260,]),'parametersinput':([106,156,],[146,185,]),'generate_gosub':([195,204,],[209,232,]),'end_times':([188,264,],[205,268,]),'generate_main_goto':([0,],[1,]),'add_c_parenthesis':([182,],[203,]),'check_current_quadruple':([32,35,],[36,61,]),'end_while':([206,269,],[233,272,]),'functionelse':([267,],[270,]),'check_params_order':([210,],[234,]),'statutesloop':([33,53,],[55,72,]),'function_with_return_def':([14,16,18,19,],[22,26,27,28,]),'add_int_constant_to_dict':([89,],[127,]),'exp_quadruple':([93,],[136,]),'fill_main_goto':([5,],[13,]),'writtingloop':([65,192,],[101,207,]),'expression':([63,71,99,100,102,106,116,144,156,211,239,240,244,249,251,],[97,108,140,141,143,147,153,172,147,235,248,250,252,255,257,]),'block':([29,151,162,176,190,236,],[34,180,188,197,206,246,]),'expressionoptional':([90,],[129,]),'start_main':([20,],[29,]),'functionstatute':([201,219,],[219,219,]),'functiontimesloop':([201,219,],[221,221,]),'relop_quadruple':([154,],[183,]),'print_quadruple':([141,],[169,]),'add_function_init_to_dict':([112,150,],[151,179,]),'add_bool_constant_to_dict':([85,94,],[117,137,]),'init':([33,53,201,219,],[41,41,224,224,]),'add_to_stack':([50,91,],[70,133,]),'functionwhileloop':([201,219,],[223,223,]),'listaccess':([68,70,],[104,107,]),'var':([44,74,],[67,109,]),'type':([33,53,58,201,219,],[44,44,74,44,44,]),'start_while':([38,220,],[64,242,]),'function':([1,3,],[3,3,]),'writting':([33,53,201,219,],[48,48,226,226,]),'condition_while':([168,262,],[190,266,]),'else':([197,],[213,]),'start_printing':([65,192,],[100,100,]),'functionreturn':([201,219,],[227,227,]),'generate_parameter_quadruple':([175,245,],[196,253,]),'add_equals':([66,103,],[102,144,]),'varconst':([63,71,99,100,102,106,116,126,130,144,156,161,166,211,239,240,244,249,251,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'logic_op_quadruple':([155,],[184,]),'listelements':([178,],[199,]),'push_type_to_function_options':([147,235,],[175,245,]),'functionorlist':([91,],[135,]),'booleanconst':([63,71,99,100,102,106,116,126,130,144,156,161,166,178,211,216,239,240,244,249,251,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'loop':([33,53,],[60,60,]),'parametersloop':([82,152,],[113,181,]),'equals_quadruple':([143,172,],[171,194,]),'add_o_parenthesis':([84,],[116,]),'exploop':([136,],[160,]),'addsub':([136,],[161,]),'logicop':([90,],[130,]),'parameterinit':([62,75,114,],[82,82,152,]),'function_head':([4,],[10,]),'expression2optional':([88,],[124,]),'divmult':([139,],[166,]),'var_assign':([33,53,201,219,],[43,43,43,43,]),'function_def':([15,],[24,]),'generate_end_all':([21,],[30,]),'timesloop':([33,53,],[49,49,]),'add_function_type_to_options':([7,8,9,11,12,],[14,15,16,18,19,]),'constants':([63,71,99,100,102,106,116,126,130,144,156,161,166,178,211,216,239,240,244,249,251,],[92,92,92,92,92,92,92,92,92,92,92,92,92,200,92,238,92,92,92,92,92,]),'parametertype':([62,75,114,],[76,76,76,]),'statute':([33,53,],[53,53,]),'relop':([88,],[126,]),'optionalwritting':([169,],[191,]),'functioncall':([33,53,201,219,],[59,59,231,231,]),'exp':([63,71,99,100,102,106,116,126,130,144,156,161,211,239,240,244,249,251,],[88,88,88,88,88,88,88,154,88,88,88,187,88,88,88,88,88,88,]),'else_condition':([212,271,],[236,274,]),'fact':([63,71,99,100,102,106,116,126,130,144,156,161,166,211,239,240,244,249,251,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> generate_main_goto functionloop fill_main_goto main generate_end_all','program',5,'p_program','parser.py',14),
  ('generate_end_all -> <empty>','generate_end_all',0,'p_generate_end_all','parser.py',18),
  ('generate_main_goto -> <empty>','generate_main_goto',0,'p_generate_main_goto','parser.py',22),
  ('fill_main_goto -> <empty>','fill_main_goto',0,'p_fill_main_goto','parser.py',26),
  ('main -> MAIN start_main block','main',3,'p_main','parser.py',31),
  ('start_main -> <empty>','start_main',0,'p_start_main','parser.py',35),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',40),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',41),
  ('function -> FUNCTION function_head function_end','function',3,'p_function','parser.py',45),
  ('add_function_init_to_dict -> <empty>','add_function_init_to_dict',0,'p_add_function_init_to_dict','parser.py',58),
  ('function_head -> VOID add_function_type_to_options function_def','function_head',3,'p_function_head','parser.py',64),
  ('function_head -> BOOL add_function_type_to_options function_with_return_def','function_head',3,'p_function_head','parser.py',65),
  ('function_head -> INT add_function_type_to_options function_with_return_def','function_head',3,'p_function_head','parser.py',66),
  ('function_head -> FLOAT add_function_type_to_options function_with_return_def','function_head',3,'p_function_head','parser.py',67),
  ('function_head -> STRING add_function_type_to_options function_with_return_def','function_head',3,'p_function_head','parser.py',68),
  ('add_function_type_to_options -> <empty>','add_function_type_to_options',0,'p_add_function_type_to_options','parser.py',72),
  ('function_with_return_def -> ID add_function_id_to_options add_function_to_global_variables check_current_quadruple O_PARENTHESIS parameters C_PARENTHESIS add_function_init_to_dict functionblock','function_with_return_def',9,'p_function_with_return_def','parser.py',77),
  ('add_function_to_global_variables -> <empty>','add_function_to_global_variables',0,'p_add_function_to_global_variables','parser.py',81),
  ('function_def -> ID add_function_id_to_options check_current_quadruple O_PARENTHESIS parameters C_PARENTHESIS add_function_init_to_dict block','function_def',8,'p_function_def','parser.py',85),
  ('check_current_quadruple -> <empty>','check_current_quadruple',0,'p_check_current_quadruple','parser.py',89),
  ('add_function_id_to_options -> <empty>','add_function_id_to_options',0,'p_add_function_id_to_options','parser.py',93),
  ('type -> BOOL','type',1,'p_type','parser.py',98),
  ('type -> INT','type',1,'p_type','parser.py',99),
  ('type -> FLOAT','type',1,'p_type','parser.py',100),
  ('type -> STRING','type',1,'p_type','parser.py',101),
  ('parametertype -> BOOL','parametertype',1,'p_parametertype','parser.py',107),
  ('parametertype -> INT','parametertype',1,'p_parametertype','parser.py',108),
  ('parametertype -> FLOAT','parametertype',1,'p_parametertype','parser.py',109),
  ('parametertype -> STRING','parametertype',1,'p_parametertype','parser.py',110),
  ('block -> O_BRACKET statutesloop C_BRACKET','block',3,'p_block','parser.py',116),
  ('functionblock -> O_BRACKET functionstatutesloop C_BRACKET','functionblock',3,'p_functionblock','parser.py',120),
  ('functionreturn -> RETURN add_function_var_to_stack O_BRACKET expression C_BRACKET SEMICOLON','functionreturn',6,'p_functionreturn','parser.py',124),
  ('functionreturn -> RETURN add_function_var_to_stack expression SEMICOLON','functionreturn',4,'p_functionreturn','parser.py',125),
  ('add_function_var_to_stack -> <empty>','add_function_var_to_stack',0,'p_add_function_var_to_stack','parser.py',131),
  ('function_end -> <empty>','function_end',0,'p_function_end','parser.py',135),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',141),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',142),
  ('functionstatutesloop -> functionstatute functionstatutesloop','functionstatutesloop',2,'p_functionstatutesloopp','parser.py',145),
  ('functionstatutesloop -> functionreturn','functionstatutesloop',1,'p_functionstatutesloopp','parser.py',146),
  ('functionstatutesloop -> <empty>','functionstatutesloop',0,'p_functionstatutesloopp','parser.py',147),
  ('statute -> init','statute',1,'p_statute','parser.py',151),
  ('statute -> condition','statute',1,'p_statute','parser.py',152),
  ('statute -> writting','statute',1,'p_statute','parser.py',153),
  ('statute -> loop','statute',1,'p_statute','parser.py',154),
  ('statute -> assignation','statute',1,'p_statute','parser.py',155),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',156),
  ('functionstatute -> init','functionstatute',1,'p_functionstatute','parser.py',159),
  ('functionstatute -> functioncondition','functionstatute',1,'p_functionstatute','parser.py',160),
  ('functionstatute -> writting','functionstatute',1,'p_functionstatute','parser.py',161),
  ('functionstatute -> functionloops','functionstatute',1,'p_functionstatute','parser.py',162),
  ('functionstatute -> assignation','functionstatute',1,'p_functionstatute','parser.py',163),
  ('functionstatute -> functioncall','functionstatute',1,'p_functionstatute','parser.py',164),
  ('assignation -> var_assign EQUALS add_equals expression equals_quadruple SEMICOLON','assignation',6,'p_assignation','parser.py',168),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',175),
  ('start_printing -> <empty>','start_printing',0,'p_start_printing','parser.py',180),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',184),
  ('writtingloop -> start_printing expression print_quadruple optionalwritting','writtingloop',4,'p_writtingloop','parser.py',193),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',197),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',198),
  ('init -> listinit','init',1,'p_init','parser.py',201),
  ('init -> normalinit','init',1,'p_init','parser.py',202),
  ('normalinit -> type var EQUALS add_equals expression equals_quadruple SEMICOLON','normalinit',7,'p_normalinit','parser.py',208),
  ('equals_quadruple -> <empty>','equals_quadruple',0,'p_equals_quadruple','parser.py',211),
  ('add_equals -> <empty>','add_equals',0,'p_add_equals','parser.py',220),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',225),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',229),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',233),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',234),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',237),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',238),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS start_condition block else end_condition','condition',8,'p_condition','parser.py',242),
  ('functioncondition -> IF O_PARENTHESIS expression C_PARENTHESIS start_condition functionblock functionelse end_condition','functioncondition',8,'p_functioncondition','parser.py',245),
  ('else -> ELSE else_condition block','else',3,'p_else','parser.py',249),
  ('else -> <empty>','else',0,'p_else','parser.py',250),
  ('functionelse -> ELSE else_condition functionblock','functionelse',3,'p_functionelse','parser.py',253),
  ('functionelse -> <empty>','functionelse',0,'p_functionelse','parser.py',254),
  ('start_condition -> <empty>','start_condition',0,'p_start_condition','parser.py',258),
  ('else_condition -> <empty>','else_condition',0,'p_else_condition','parser.py',262),
  ('end_condition -> <empty>','end_condition',0,'p_end_condition','parser.py',266),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',271),
  ('expressionoptional -> logicop expression2 logic_op_quadruple','expressionoptional',3,'p_expressionoptional','parser.py',274),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',275),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',278),
  ('expression2optional -> relop exp relop_quadruple','expression2optional',3,'p_expression2optional','parser.py',281),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',282),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',286),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',287),
  ('logic_op_quadruple -> <empty>','logic_op_quadruple',0,'p_logic_op_quadruple','parser.py',291),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',298),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',299),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',300),
  ('relop -> LESS','relop',1,'p_relop','parser.py',301),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',302),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',303),
  ('relop_quadruple -> <empty>','relop_quadruple',0,'p_relop_quadruple','parser.py',307),
  ('exp -> term exp_quadruple exploop','exp',3,'p_exp','parser.py',314),
  ('exp_quadruple -> <empty>','exp_quadruple',0,'p_exp_quadruple','parser.py',317),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',324),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',325),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',328),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',329),
  ('term -> fact term_quadruple termloop','term',3,'p_term','parser.py',334),
  ('term_quadruple -> <empty>','term_quadruple',0,'p_term_quadruple','parser.py',337),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',344),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',345),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',349),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',350),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',351),
  ('fact -> varconst','fact',1,'p_fact','parser.py',356),
  ('fact -> O_PARENTHESIS add_o_parenthesis expression C_PARENTHESIS add_c_parenthesis','fact',5,'p_fact','parser.py',357),
  ('add_o_parenthesis -> <empty>','add_o_parenthesis',0,'p_add_o_parenthesis','parser.py',360),
  ('add_c_parenthesis -> <empty>','add_c_parenthesis',0,'p_add_c_parenthesis','parser.py',364),
  ('var_assign -> ID add_to_stack listaccess','var_assign',3,'p_var_assign','parser.py',368),
  ('var -> ID listaccess','var',2,'p_var','parser.py',380),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',396),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',397),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',401),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',402),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',405),
  ('add_to_stack -> <empty>','add_to_stack',0,'p_add_to_stack','parser.py',408),
  ('functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET','functionorlist',3,'p_functionorlist','parser.py',412),
  ('functionorlist -> check_function_exists O_PARENTHESIS parametersinput C_PARENTHESIS generate_gosub','functionorlist',5,'p_functionorlist','parser.py',413),
  ('functionorlist -> add_to_stack','functionorlist',1,'p_functionorlist','parser.py',414),
  ('constants -> INTCONST add_int_constant_to_dict','constants',2,'p_constants','parser.py',418),
  ('constants -> FLOATCONST add_float_constant_to_dict','constants',2,'p_constants','parser.py',419),
  ('constants -> STRINGCONST add_string_constant_to_dict','constants',2,'p_constants','parser.py',420),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',421),
  ('booleanconst -> TRUE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',425),
  ('booleanconst -> FALSE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',426),
  ('add_int_constant_to_dict -> <empty>','add_int_constant_to_dict',0,'p_add_int_constant_to_dict','parser.py',429),
  ('add_float_constant_to_dict -> <empty>','add_float_constant_to_dict',0,'p_add_float_constant_to_dict','parser.py',433),
  ('add_string_constant_to_dict -> <empty>','add_string_constant_to_dict',0,'p_add_string_constant_to_dict','parser.py',437),
  ('add_bool_constant_to_dict -> <empty>','add_bool_constant_to_dict',0,'p_add_bool_constant_to_dict','parser.py',441),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',446),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',447),
  ('functionloops -> functionwhileloop','functionloops',1,'p_functionloops','parser.py',450),
  ('functionloops -> functiontimesloop','functionloops',1,'p_functionloops','parser.py',451),
  ('whileloop -> WHILE start_while O_PARENTHESIS expression C_PARENTHESIS condition_while block end_while','whileloop',8,'p_whileloop','parser.py',455),
  ('functionwhileloop -> WHILE start_while O_PARENTHESIS expression C_PARENTHESIS condition_while functionblock end_while','functionwhileloop',8,'p_functionwhileloop','parser.py',458),
  ('start_while -> <empty>','start_while',0,'p_start_while','parser.py',461),
  ('condition_while -> <empty>','condition_while',0,'p_condition_while','parser.py',465),
  ('end_while -> <empty>','end_while',0,'p_end_while','parser.py',469),
  ('timesloop -> TIMES O_PARENTHESIS expression C_PARENTHESIS start_times block end_times','timesloop',7,'p_timesloop','parser.py',474),
  ('functiontimesloop -> TIMES O_PARENTHESIS expression C_PARENTHESIS start_times functionblock end_times','functiontimesloop',7,'p_functiontimesloop','parser.py',478),
  ('start_times -> <empty>','start_times',0,'p_start_times','parser.py',481),
  ('end_times -> <empty>','end_times',0,'p_end_times','parser.py',485),
  ('functioncall -> ID check_function_exists O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON generate_gosub','functioncall',7,'p_functioncall','parser.py',490),
  ('check_function_exists -> <empty>','check_function_exists',0,'p_check_function_exists','parser.py',495),
  ('generate_gosub -> <empty>','generate_gosub',0,'p_generate_gosub','parser.py',500),
  ('parametersinput -> expression push_type_to_function_options generate_parameter_quadruple parametersinputloop check_params_order','parametersinput',5,'p_parametersinput','parser.py',505),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',506),
  ('parametersinputloop -> COMMA expression push_type_to_function_options generate_parameter_quadruple parametersinputloop','parametersinputloop',5,'p_parametersinputloop','parser.py',510),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',511),
  ('push_type_to_function_options -> <empty>','push_type_to_function_options',0,'p_push_type_to_function_options','parser.py',514),
  ('check_params_order -> <empty>','check_params_order',0,'p_check_params_order','parser.py',518),
  ('generate_parameter_quadruple -> <empty>','generate_parameter_quadruple',0,'p_generate_parameter_quadruple','parser.py',522),
  ('parameters -> parameterinit parametersloop','parameters',2,'p_parameters','parser.py',527),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',528),
  ('parameterinit -> parametertype ID','parameterinit',2,'p_parameterinit','parser.py',531),
  ('parametersloop -> COMMA parameterinit parametersloop','parametersloop',3,'p_parametersloop','parser.py',542),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',543),
]
