
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x00H/\x17bf4\xe2\x94Pd;\xb8H\xe5&'
    
_lr_action_items = {'RETURN':([39,40,44,46,47,48,50,52,53,58,59,74,75,107,145,163,180,185,187,189,190,197,198,200,201,205,212,216,221,],[-116,-32,-46,-45,-34,-117,-33,-31,-36,-37,-35,-30,-24,-31,172,-39,-124,-38,-127,-58,-50,-122,-121,-47,-125,-61,-118,-56,-57,]),'LESS':([80,82,83,84,85,86,88,89,90,91,92,93,95,110,112,113,122,128,130,131,132,134,153,157,174,178,179,181,195,196,211,],[-113,-115,-114,-99,118,-112,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-106,-105,-101,-81,-111,-87,-78,-84,-94,-103,-80,-86,-92,-127,-104,]),'VOID':([4,],[8,]),'O_PARENTHESIS':([15,17,24,36,37,38,49,51,65,66,67,68,71,73,81,88,96,97,99,100,103,111,114,115,116,117,118,120,121,123,125,126,127,139,149,151,152,154,156,158,159,160,172,184,193,203,209,],[-14,25,28,65,-119,67,-126,73,81,96,-40,-49,103,81,-93,-126,81,81,81,-49,81,81,-76,-71,-72,-73,-74,-75,81,-68,81,-69,149,81,81,-82,-83,81,-89,-88,81,-90,-28,-40,81,81,81,]),'ELSE':([75,189,],[-24,204,]),'FLOATCONST':([65,67,68,73,81,96,97,99,100,103,111,114,115,116,117,118,120,121,123,125,126,139,149,151,152,154,156,158,159,160,171,172,184,193,203,208,209,],[80,-40,-49,80,-93,80,80,80,-49,80,80,-76,-71,-72,-73,-74,-75,80,-68,80,-69,80,80,-82,-83,80,-89,-88,80,-90,80,-28,-40,80,80,80,80,]),'WHILE':([26,39,40,44,46,47,48,50,52,53,58,59,75,107,163,180,185,187,189,190,197,198,200,201,205,212,216,221,],[37,-116,-32,-46,-45,-34,-117,-33,37,-36,-37,-35,-24,37,-39,-124,-38,-127,-58,-50,-122,-121,-47,-125,-61,-118,-56,-57,]),'GREATER':([80,82,83,84,85,86,88,89,90,91,92,93,95,110,112,113,122,128,130,131,132,134,153,157,174,178,179,181,195,196,211,],[-113,-115,-114,-99,116,-112,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-106,-105,-101,-81,-111,-87,-78,-84,-94,-103,-80,-86,-92,-127,-104,]),'C_BRACKET':([26,39,40,44,46,47,48,50,52,53,54,58,59,74,75,80,82,83,84,85,86,87,88,89,90,91,92,93,95,110,112,113,119,122,124,128,130,131,132,134,147,148,153,157,163,173,174,175,176,178,179,180,181,185,187,189,190,195,196,197,198,200,201,205,211,212,216,218,219,221,225,],[-31,-116,-32,-46,-45,-34,-117,-33,-31,-36,75,-37,-35,-30,-24,-113,-115,-114,-99,-67,-112,-64,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-65,-106,-62,-105,-101,-81,-111,-87,-77,-70,-78,-84,-39,194,-94,-66,-63,-103,-80,-124,-86,-38,-127,-58,-50,-92,-127,-122,-121,-47,-125,-61,-104,-118,-56,223,-27,-57,-26,]),'PRINT':([26,39,40,44,46,47,48,50,52,53,58,59,75,107,163,180,185,187,189,190,197,198,200,201,205,212,216,221,],[38,-116,-32,-46,-45,-34,-117,-33,38,-36,-37,-35,-24,38,-39,-124,-38,-127,-58,-50,-122,-121,-47,-125,-61,-118,-56,-57,]),'C_PARENTHESIS':([25,28,31,35,60,61,63,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,103,105,109,110,112,113,119,122,124,128,130,131,132,134,135,136,141,142,146,147,148,149,153,157,162,168,174,175,176,177,178,179,181,183,188,195,196,199,202,211,213,214,220,224,226,],[-136,-136,62,-139,77,-137,-135,-139,-113,-115,-114,-99,-67,-112,-64,-102,-100,-79,-115,-91,-109,133,-85,137,-129,143,-138,-107,-110,-108,-65,-106,-62,-105,-101,-81,-111,-87,161,-41,167,-132,174,-77,-70,-129,-78,-84,-44,-134,-94,-66,-63,196,-103,-80,-86,-42,-131,-92,-127,-43,-133,-104,-128,-132,-134,-131,-130,]),'TRUE':([65,67,68,73,81,96,97,99,100,103,111,114,115,116,117,118,120,121,123,125,126,139,149,151,152,154,156,158,159,160,171,172,184,193,203,208,209,],[82,-40,-49,82,-93,82,82,82,-49,82,82,-76,-71,-72,-73,-74,-75,82,-68,82,-69,82,82,-82,-83,82,-89,-88,82,-90,82,-28,-40,82,82,82,82,]),'MINUS':([80,82,83,84,86,88,89,90,91,92,93,95,110,112,113,122,128,130,131,132,134,157,174,178,181,195,196,211,],[-113,-115,-114,-99,-112,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-106,-105,-101,152,-111,-87,-84,-94,-103,-86,-92,-127,-104,]),'DIVIDE':([80,82,83,84,86,88,89,91,92,93,95,110,112,113,122,128,130,132,134,174,178,195,196,211,],[-113,-115,-114,-99,-112,-102,-100,-115,-91,-109,-85,-107,-110,-108,-106,-105,-101,-111,156,-94,-103,-92,-127,-104,]),'EQUALITY':([80,82,83,84,85,86,88,89,90,91,92,93,95,110,112,113,122,128,130,131,132,134,153,157,174,178,179,181,195,196,211,],[-113,-115,-114,-99,115,-112,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-106,-105,-101,-81,-111,-87,-78,-84,-94,-103,-80,-86,-92,-127,-104,]),'SEMICOLON':([80,82,83,84,85,86,87,88,89,90,91,92,93,95,110,112,113,119,122,124,128,130,131,132,134,137,138,147,148,153,157,164,165,167,170,174,175,176,178,179,181,186,195,196,206,210,211,223,],[-113,-115,-114,-99,-67,-112,-64,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-65,-106,-62,-105,-101,-81,-111,-87,163,-48,-77,-70,-78,-84,185,-48,187,190,-94,-66,-63,-103,-80,-86,200,-92,-127,-51,219,-104,225,]),'STRINGCONST':([65,67,68,73,81,96,97,99,100,103,111,114,115,116,117,118,120,121,123,125,126,139,149,151,152,154,156,158,159,160,171,172,184,193,203,208,209,],[83,-40,-49,83,-93,83,83,83,-49,83,83,-76,-71,-72,-73,-74,-75,83,-68,83,-69,83,83,-82,-83,83,-89,-88,83,-90,83,-28,-40,83,83,83,83,]),'COMMA':([35,61,79,80,82,83,84,85,86,87,88,89,90,91,92,93,95,110,112,113,119,122,124,128,130,131,132,134,136,142,147,148,153,157,162,168,174,175,176,178,179,181,188,192,195,196,211,214,217,220,224,],[64,-137,64,-113,-115,-114,-99,-67,-112,-64,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-65,-106,-62,-105,-101,-81,-111,-87,-41,-132,-77,-70,-78,-84,184,-134,-94,-66,-63,-103,-80,-86,203,208,-92,-127,-104,-132,208,-134,203,]),'O_S_BRACKET':([49,70,72,88,144,],[-102,102,102,129,171,]),'$end':([1,23,27,75,],[0,-1,-4,-24,]),'FUNCTION':([0,2,3,10,14,16,18,19,20,21,75,78,108,194,],[-2,4,4,-29,-12,-8,-11,-7,-9,-10,-24,-15,-13,-25,]),'DIFFERENT':([80,82,83,84,85,86,88,89,90,91,92,93,95,110,112,113,122,128,130,131,132,134,153,157,174,178,179,181,195,196,211,],[-113,-115,-114,-99,114,-112,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-106,-105,-101,-81,-111,-87,-78,-84,-94,-103,-80,-86,-92,-127,-104,]),'STRING':([4,25,26,28,39,40,44,46,47,48,50,52,53,57,58,59,64,75,107,163,180,185,187,189,190,197,198,200,201,205,212,216,221,],[7,30,45,30,-116,-32,-46,-45,-34,-117,-33,45,-36,45,-37,-35,30,-24,45,-39,-124,-38,-127,-58,-50,-122,-121,-47,-125,-61,-118,-56,-57,]),'EQUALS':([42,49,69,70,72,101,104,106,166,],[68,-102,100,-98,-98,-96,-95,144,-97,]),'TIMES':([26,39,40,44,46,47,48,50,52,53,58,59,75,107,163,180,185,187,189,190,197,198,200,201,205,212,216,221,],[36,-116,-32,-46,-45,-34,-117,-33,36,-36,-37,-35,-24,36,-39,-124,-38,-127,-58,-50,-122,-121,-47,-125,-61,-118,-56,-57,]),'INTCONST':([65,67,68,73,81,96,97,99,100,102,103,111,114,115,116,117,118,120,121,123,125,126,129,139,149,151,152,154,156,158,159,160,171,172,184,193,203,208,209,],[86,-40,-49,86,-93,86,86,86,-49,140,86,86,-76,-71,-72,-73,-74,-75,86,-68,86,-69,150,86,86,-82,-83,86,-89,-88,86,-90,86,-28,-40,86,86,86,86,]),'O_BRACKET':([22,62,77,133,143,155,161,169,172,182,193,204,215,],[26,26,107,-123,-59,26,-120,26,-28,26,209,-60,26,]),'ID':([7,8,9,11,12,26,29,30,32,33,34,39,40,41,43,44,45,46,47,48,50,52,53,55,56,58,59,65,67,68,73,75,76,81,96,97,99,100,103,107,111,114,115,116,117,118,120,121,123,125,126,139,149,151,152,154,156,158,159,160,163,172,180,184,185,187,189,190,193,197,198,200,201,203,205,209,212,216,221,],[15,17,15,15,15,49,61,-23,-21,-22,-20,-116,-32,-16,70,-46,-19,-45,-34,-117,-33,49,-36,-17,-18,-37,-35,88,-40,-49,88,-24,70,-93,88,88,88,-49,88,49,88,-76,-71,-72,-73,-74,-75,88,-68,88,-69,88,88,-82,-83,88,-89,-88,88,-90,-39,-28,-124,-40,-38,-127,-58,-50,88,-122,-121,-47,-125,88,-61,88,-118,-56,-57,]),'IF':([26,39,40,44,46,47,48,50,52,53,58,59,75,107,163,180,185,187,189,190,197,198,200,201,205,212,216,221,],[51,-116,-32,-46,-45,-34,-117,-33,51,-36,-37,-35,-24,51,-39,-124,-38,-127,-58,-50,-122,-121,-47,-125,-61,-118,-56,-57,]),'AND':([80,82,83,84,85,86,87,88,89,90,91,92,93,95,110,112,113,119,122,128,130,131,132,134,147,153,157,174,175,178,179,181,195,196,211,],[-113,-115,-114,-99,-67,-112,123,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-65,-106,-105,-101,-81,-111,-87,-77,-78,-84,-94,-66,-103,-80,-86,-92,-127,-104,]),'FALSE':([65,67,68,73,81,96,97,99,100,103,111,114,115,116,117,118,120,121,123,125,126,139,149,151,152,154,156,158,159,160,171,172,184,193,203,208,209,],[91,-40,-49,91,-93,91,91,91,-49,91,91,-76,-71,-72,-73,-74,-75,91,-68,91,-69,91,91,-82,-83,91,-89,-88,91,-90,91,-28,-40,91,91,91,91,]),'GREATER_EQUAL':([80,82,83,84,85,86,88,89,90,91,92,93,95,110,112,113,122,128,130,131,132,134,153,157,174,178,179,181,195,196,211,],[-113,-115,-114,-99,117,-112,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-106,-105,-101,-81,-111,-87,-78,-84,-94,-103,-80,-86,-92,-127,-104,]),'MULTIPLY':([80,82,83,84,86,88,89,91,92,93,95,110,112,113,122,128,130,132,134,174,178,195,196,211,],[-113,-115,-114,-99,-112,-102,-100,-115,-91,-109,-85,-107,-110,-108,-106,-105,-101,-111,158,-94,-103,-92,-127,-104,]),'INT':([4,25,26,28,39,40,44,46,47,48,50,52,53,57,58,59,64,75,107,163,180,185,187,189,190,197,198,200,201,205,212,216,221,],[12,32,55,32,-116,-32,-46,-45,-34,-117,-33,55,-36,55,-37,-35,32,-24,55,-39,-124,-38,-127,-58,-50,-122,-121,-47,-125,-61,-118,-56,-57,]),'SUM':([80,82,83,84,86,88,89,90,91,92,93,95,110,112,113,122,128,130,131,132,134,157,174,178,181,195,196,211,],[-113,-115,-114,-99,-112,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-106,-105,-101,151,-111,-87,-84,-94,-103,-86,-92,-127,-104,]),'FLOAT':([4,25,26,28,39,40,44,46,47,48,50,52,53,57,58,59,64,75,107,163,180,185,187,189,190,197,198,200,201,205,212,216,221,],[9,33,56,33,-116,-32,-46,-45,-34,-117,-33,56,-36,56,-37,-35,33,-24,56,-39,-124,-38,-127,-58,-50,-122,-121,-47,-125,-61,-118,-56,-57,]),'LIST':([26,39,40,44,46,47,48,50,52,53,58,59,75,107,163,180,185,187,189,190,197,198,200,201,205,212,216,221,],[57,-116,-32,-46,-45,-34,-117,-33,57,-36,-37,-35,-24,57,-39,-124,-38,-127,-58,-50,-122,-121,-47,-125,-61,-118,-56,-57,]),'C_S_BRACKET':([80,82,83,86,91,93,110,112,113,122,132,140,150,171,191,192,207,217,222,],[-113,-115,-114,-112,-115,-109,-107,-110,-108,-106,-111,166,178,-53,206,-55,-52,-55,-54,]),'BOOL':([4,25,26,28,39,40,44,46,47,48,50,52,53,57,58,59,64,75,107,163,180,185,187,189,190,197,198,200,201,205,212,216,221,],[11,34,41,34,-116,-32,-46,-45,-34,-117,-33,41,-36,41,-37,-35,34,-24,41,-39,-124,-38,-127,-58,-50,-122,-121,-47,-125,-61,-118,-56,-57,]),'LESS_EQUAL':([80,82,83,84,85,86,88,89,90,91,92,93,95,110,112,113,122,128,130,131,132,134,153,157,174,178,179,181,195,196,211,],[-113,-115,-114,-99,120,-112,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-106,-105,-101,-81,-111,-87,-78,-84,-94,-103,-80,-86,-92,-127,-104,]),'MAIN':([0,2,3,5,6,10,13,14,16,18,19,20,21,75,78,108,194,],[-2,-6,-6,-3,-5,-29,22,-12,-8,-11,-7,-9,-10,-24,-15,-13,-25,]),'OR':([80,82,83,84,85,86,87,88,89,90,91,92,93,95,110,112,113,119,122,128,130,131,132,134,147,153,157,174,175,178,179,181,195,196,211,],[-113,-115,-114,-99,-67,-112,126,-102,-100,-79,-115,-91,-109,-85,-107,-110,-108,-65,-106,-105,-101,-81,-111,-87,-77,-78,-84,-94,-66,-103,-80,-86,-92,-127,-104,]),'MOD':([80,82,83,84,86,88,89,91,92,93,95,110,112,113,122,128,130,132,134,174,178,195,196,211,],[-113,-115,-114,-99,-112,-102,-100,-115,-91,-109,-85,-107,-110,-108,-106,-105,-101,-111,160,-94,-103,-92,-127,-104,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersinputloop':([188,224,],[202,226,]),'optionalconstants':([192,217,],[207,222,]),'function_end':([10,],[19,]),'whileloop':([26,52,107,],[39,39,39,]),'parameters':([25,28,],[31,60,]),'check_function_exists':([49,88,],[71,127,]),'add_string_constant_to_dict':([83,],[113,]),'program':([0,],[1,]),'add_function_var_to_stack':([172,],[193,]),'main':([13,],[23,]),'start_condition':([143,],[169,]),'listinit':([26,52,107,],[46,46,46,]),'varconstfunction':([65,73,96,97,99,103,111,121,125,139,149,154,159,193,203,209,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'add_float_constant_to_dict':([80,],[110,]),'expression2':([65,73,96,97,99,103,111,125,139,149,193,203,209,],[87,87,87,87,87,87,87,148,87,87,87,87,87,]),'condition':([26,52,107,],[50,50,50,]),'term':([65,73,96,97,99,103,111,121,125,139,149,154,159,193,203,209,],[90,90,90,90,90,90,90,90,90,90,90,90,181,90,90,90,]),'end_condition':([205,],[216,]),'assignation':([26,52,107,],[53,53,53,]),'list':([144,],[170,]),'functionblock':([77,],[108,]),'normalinit':([26,52,107,],[44,44,44,]),'term_quadruple':([95,],[134,]),'add_function_to_global_variables':([15,],[24,]),'functionloop':([2,3,],[5,6,]),'termloop':([134,],[157,]),'start_times':([133,],[155,]),'parametersinput':([103,149,],[141,177,]),'generate_gosub':([187,196,],[201,211,]),'generate_main_goto':([0,],[2,]),'end_times':([180,],[197,]),'end_while':([198,],[212,]),'check_params_order':([202,],[213,]),'statutesloop':([26,52,107,],[54,74,145,]),'function_with_return_def':([7,9,11,12,],[14,18,20,21,]),'add_int_constant_to_dict':([86,],[122,]),'exp_quadruple':([90,],[131,]),'fill_main_goto':([5,],[13,]),'writtingloop':([67,184,],[98,199,]),'expression':([65,73,96,97,99,103,111,139,149,193,203,209,],[94,105,135,136,138,142,146,165,142,210,214,218,]),'block':([22,62,155,169,182,215,],[27,78,180,189,198,221,]),'expressionoptional':([87,],[124,]),'relop_quadruple':([147,],[175,]),'print_quadruple':([136,],[162,]),'add_c_parenthesis':([174,],[195,]),'add_bool_constant_to_dict':([82,91,],[112,132,]),'init':([26,52,107,],[40,40,40,]),'add_to_stack':([49,88,],[72,128,]),'listaccess':([70,72,],[101,104,]),'var':([43,76,],[69,106,]),'type':([26,52,57,107,],[43,43,76,43,]),'start_while':([37,],[66,]),'function':([2,3,],[3,3,]),'writting':([26,52,107,],[47,47,47,]),'condition_while':([161,],[182,]),'else':([189,],[205,]),'start_printing':([67,184,],[97,97,]),'functionreturn':([145,],[173,]),'generate_parameter_quadruple':([168,220,],[188,224,]),'add_equals':([68,100,],[99,139,]),'varconst':([65,73,96,97,99,103,111,121,125,139,149,154,159,193,203,209,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'logic_op_quadruple':([148,],[176,]),'listelements':([171,],[191,]),'push_type_to_function_options':([142,214,],[168,220,]),'functionorlist':([88,],[130,]),'booleanconst':([65,73,96,97,99,103,111,121,125,139,149,154,159,171,193,203,208,209,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'loop':([26,52,107,],[59,59,59,]),'parametersloop':([35,79,],[63,109,]),'equals_quadruple':([138,165,],[164,186,]),'add_o_parenthesis':([81,],[111,]),'exploop':([131,],[153,]),'addsub':([131,],[154,]),'logicop':([87,],[125,]),'parameterinit':([25,28,64,],[35,35,79,]),'function_head':([4,],[10,]),'expression2optional':([85,],[119,]),'divmult':([134,],[159,]),'var_assign':([26,52,107,],[42,42,42,]),'function_def':([8,],[16,]),'timesloop':([26,52,107,],[48,48,48,]),'constants':([65,73,96,97,99,103,111,121,125,139,149,154,159,171,193,203,208,209,],[89,89,89,89,89,89,89,89,89,89,89,89,89,192,89,89,217,89,]),'parametertype':([25,28,64,],[29,29,29,]),'statute':([26,52,107,],[52,52,52,]),'relop':([85,],[121,]),'optionalwritting':([162,],[183,]),'functioncall':([26,52,107,],[58,58,58,]),'exp':([65,73,96,97,99,103,111,121,125,139,149,154,193,203,209,],[85,85,85,85,85,85,85,147,85,85,85,179,85,85,85,]),'else_condition':([204,],[215,]),'fact':([65,73,96,97,99,103,111,121,125,139,149,154,159,193,203,209,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> generate_main_goto functionloop fill_main_goto main','program',4,'p_program','parser.py',13),
  ('generate_main_goto -> <empty>','generate_main_goto',0,'p_generate_main_goto','parser.py',17),
  ('fill_main_goto -> <empty>','fill_main_goto',0,'p_fill_main_goto','parser.py',21),
  ('main -> MAIN block','main',2,'p_main','parser.py',26),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',32),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',33),
  ('function -> FUNCTION function_head function_end','function',3,'p_function','parser.py',37),
  ('function_head -> VOID function_def','function_head',2,'p_function_head','parser.py',47),
  ('function_head -> BOOL function_with_return_def','function_head',2,'p_function_head','parser.py',48),
  ('function_head -> INT function_with_return_def','function_head',2,'p_function_head','parser.py',49),
  ('function_head -> FLOAT function_with_return_def','function_head',2,'p_function_head','parser.py',50),
  ('function_head -> STRING function_with_return_def','function_head',2,'p_function_head','parser.py',51),
  ('function_with_return_def -> ID add_function_to_global_variables O_PARENTHESIS parameters C_PARENTHESIS functionblock','function_with_return_def',6,'p_function_with_return_def','parser.py',57),
  ('add_function_to_global_variables -> <empty>','add_function_to_global_variables',0,'p_add_function_to_global_variables','parser.py',61),
  ('function_def -> ID O_PARENTHESIS parameters C_PARENTHESIS block','function_def',5,'p_function_def','parser.py',65),
  ('type -> BOOL','type',1,'p_type','parser.py',70),
  ('type -> INT','type',1,'p_type','parser.py',71),
  ('type -> FLOAT','type',1,'p_type','parser.py',72),
  ('type -> STRING','type',1,'p_type','parser.py',73),
  ('parametertype -> BOOL','parametertype',1,'p_parametertype','parser.py',79),
  ('parametertype -> INT','parametertype',1,'p_parametertype','parser.py',80),
  ('parametertype -> FLOAT','parametertype',1,'p_parametertype','parser.py',81),
  ('parametertype -> STRING','parametertype',1,'p_parametertype','parser.py',82),
  ('block -> O_BRACKET statutesloop C_BRACKET','block',3,'p_block','parser.py',88),
  ('functionblock -> O_BRACKET statutesloop functionreturn C_BRACKET','functionblock',4,'p_functionblock','parser.py',92),
  ('functionreturn -> RETURN add_function_var_to_stack O_BRACKET expression C_BRACKET SEMICOLON','functionreturn',6,'p_functionreturn','parser.py',96),
  ('functionreturn -> RETURN add_function_var_to_stack expression SEMICOLON','functionreturn',4,'p_functionreturn','parser.py',97),
  ('add_function_var_to_stack -> <empty>','add_function_var_to_stack',0,'p_add_function_var_to_stack','parser.py',101),
  ('function_end -> <empty>','function_end',0,'p_function_end','parser.py',105),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',112),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',113),
  ('statute -> init','statute',1,'p_statute','parser.py',117),
  ('statute -> condition','statute',1,'p_statute','parser.py',118),
  ('statute -> writting','statute',1,'p_statute','parser.py',119),
  ('statute -> loop','statute',1,'p_statute','parser.py',120),
  ('statute -> assignation','statute',1,'p_statute','parser.py',121),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',122),
  ('assignation -> var_assign EQUALS add_equals expression equals_quadruple SEMICOLON','assignation',6,'p_assignation','parser.py',126),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',131),
  ('start_printing -> <empty>','start_printing',0,'p_start_printing','parser.py',134),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',138),
  ('writtingloop -> start_printing expression print_quadruple optionalwritting','writtingloop',4,'p_writtingloop','parser.py',147),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',151),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',152),
  ('init -> listinit','init',1,'p_init','parser.py',155),
  ('init -> normalinit','init',1,'p_init','parser.py',156),
  ('normalinit -> type var EQUALS add_equals expression equals_quadruple SEMICOLON','normalinit',7,'p_normalinit','parser.py',160),
  ('equals_quadruple -> <empty>','equals_quadruple',0,'p_equals_quadruple','parser.py',163),
  ('add_equals -> <empty>','add_equals',0,'p_add_equals','parser.py',172),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',177),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',181),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',185),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',186),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',189),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',190),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS start_condition block else end_condition','condition',8,'p_condition','parser.py',194),
  ('else -> ELSE else_condition block','else',3,'p_else','parser.py',198),
  ('else -> <empty>','else',0,'p_else','parser.py',199),
  ('start_condition -> <empty>','start_condition',0,'p_start_condition','parser.py',202),
  ('else_condition -> <empty>','else_condition',0,'p_else_condition','parser.py',206),
  ('end_condition -> <empty>','end_condition',0,'p_end_condition','parser.py',210),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',215),
  ('expressionoptional -> logicop expression2 logic_op_quadruple','expressionoptional',3,'p_expressionoptional','parser.py',218),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',219),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',222),
  ('expression2optional -> relop exp relop_quadruple','expression2optional',3,'p_expression2optional','parser.py',225),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',226),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',230),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',231),
  ('logic_op_quadruple -> <empty>','logic_op_quadruple',0,'p_logic_op_quadruple','parser.py',235),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',242),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',243),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',244),
  ('relop -> LESS','relop',1,'p_relop','parser.py',245),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',246),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',247),
  ('relop_quadruple -> <empty>','relop_quadruple',0,'p_relop_quadruple','parser.py',251),
  ('exp -> term exp_quadruple exploop','exp',3,'p_exp','parser.py',258),
  ('exp_quadruple -> <empty>','exp_quadruple',0,'p_exp_quadruple','parser.py',261),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',268),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',269),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',272),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',273),
  ('term -> fact term_quadruple termloop','term',3,'p_term','parser.py',278),
  ('term_quadruple -> <empty>','term_quadruple',0,'p_term_quadruple','parser.py',281),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',288),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',289),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',293),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',294),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',295),
  ('fact -> varconst','fact',1,'p_fact','parser.py',300),
  ('fact -> O_PARENTHESIS add_o_parenthesis expression C_PARENTHESIS add_c_parenthesis','fact',5,'p_fact','parser.py',301),
  ('add_o_parenthesis -> <empty>','add_o_parenthesis',0,'p_add_o_parenthesis','parser.py',304),
  ('add_c_parenthesis -> <empty>','add_c_parenthesis',0,'p_add_c_parenthesis','parser.py',308),
  ('var_assign -> ID add_to_stack listaccess','var_assign',3,'p_var_assign','parser.py',312),
  ('var -> ID listaccess','var',2,'p_var','parser.py',324),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',340),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',341),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',345),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',346),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',349),
  ('add_to_stack -> <empty>','add_to_stack',0,'p_add_to_stack','parser.py',352),
  ('functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET','functionorlist',3,'p_functionorlist','parser.py',356),
  ('functionorlist -> check_function_exists O_PARENTHESIS parametersinput C_PARENTHESIS generate_gosub','functionorlist',5,'p_functionorlist','parser.py',357),
  ('functionorlist -> add_to_stack','functionorlist',1,'p_functionorlist','parser.py',358),
  ('constants -> INTCONST add_int_constant_to_dict','constants',2,'p_constants','parser.py',362),
  ('constants -> FLOATCONST add_float_constant_to_dict','constants',2,'p_constants','parser.py',363),
  ('constants -> STRINGCONST add_string_constant_to_dict','constants',2,'p_constants','parser.py',364),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',365),
  ('booleanconst -> TRUE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',369),
  ('booleanconst -> FALSE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',370),
  ('add_int_constant_to_dict -> <empty>','add_int_constant_to_dict',0,'p_add_int_constant_to_dict','parser.py',373),
  ('add_float_constant_to_dict -> <empty>','add_float_constant_to_dict',0,'p_add_float_constant_to_dict','parser.py',377),
  ('add_string_constant_to_dict -> <empty>','add_string_constant_to_dict',0,'p_add_string_constant_to_dict','parser.py',381),
  ('add_bool_constant_to_dict -> <empty>','add_bool_constant_to_dict',0,'p_add_bool_constant_to_dict','parser.py',385),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',390),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',391),
  ('whileloop -> WHILE start_while O_PARENTHESIS expression C_PARENTHESIS condition_while block end_while','whileloop',8,'p_whileloop','parser.py',395),
  ('start_while -> <empty>','start_while',0,'p_start_while','parser.py',398),
  ('condition_while -> <empty>','condition_while',0,'p_condition_while','parser.py',402),
  ('end_while -> <empty>','end_while',0,'p_end_while','parser.py',406),
  ('timesloop -> TIMES O_PARENTHESIS expression C_PARENTHESIS start_times block end_times','timesloop',7,'p_timesloop','parser.py',411),
  ('start_times -> <empty>','start_times',0,'p_start_times','parser.py',414),
  ('end_times -> <empty>','end_times',0,'p_end_times','parser.py',418),
  ('functioncall -> ID check_function_exists O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON generate_gosub','functioncall',7,'p_functioncall','parser.py',423),
  ('check_function_exists -> <empty>','check_function_exists',0,'p_check_function_exists','parser.py',426),
  ('generate_gosub -> <empty>','generate_gosub',0,'p_generate_gosub','parser.py',431),
  ('parametersinput -> expression push_type_to_function_options generate_parameter_quadruple parametersinputloop check_params_order','parametersinput',5,'p_parametersinput','parser.py',436),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',437),
  ('parametersinputloop -> COMMA expression push_type_to_function_options generate_parameter_quadruple parametersinputloop','parametersinputloop',5,'p_parametersinputloop','parser.py',441),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',442),
  ('push_type_to_function_options -> <empty>','push_type_to_function_options',0,'p_push_type_to_function_options','parser.py',445),
  ('check_params_order -> <empty>','check_params_order',0,'p_check_params_order','parser.py',449),
  ('generate_parameter_quadruple -> <empty>','generate_parameter_quadruple',0,'p_generate_parameter_quadruple','parser.py',453),
  ('parameters -> parameterinit parametersloop','parameters',2,'p_parameters','parser.py',458),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',459),
  ('parameterinit -> parametertype ID','parameterinit',2,'p_parameterinit','parser.py',462),
  ('parametersloop -> COMMA parameterinit parametersloop','parametersloop',3,'p_parametersloop','parser.py',473),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',474),
]
