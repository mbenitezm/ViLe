
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '+\xe5\xe3\xb3\xe8\xd4\xc2-B\xfa\xfa\x9a@3%,'
    
_lr_action_items = {'RETURN':([7,20,21,23,24,25,26,28,30,31,32,34,35,45,77,113,122,129,131,133,135,137,147,148,152,],[-16,-82,-17,-29,-28,-19,-83,-18,-16,-21,46,-22,-20,-15,-12,-23,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'LESS':([51,53,54,55,56,58,59,60,61,62,63,64,66,88,91,104,123,127,130,143,144,],[-77,-80,-78,-70,-76,-75,-71,-56,-81,-65,-79,98,-61,-72,-54,-59,-66,-55,-60,-73,-74,]),'VOID':([5,],[13,]),'O_PARENTHESIS':([17,18,19,27,29,36,38,39,42,43,44,46,52,58,69,83,84,86,89,90,92,93,94,95,96,97,98,100,101,103,105,106,107,110,116,],[37,38,39,43,44,49,52,52,52,52,52,52,52,89,52,-46,52,-47,52,-57,52,-58,-53,-48,-49,-50,-51,-52,52,-63,-62,52,-64,52,52,]),'ELSE':([77,137,],[-12,146,]),'FLOATCONST':([38,39,42,43,44,46,52,69,83,84,86,89,90,92,93,94,95,96,97,98,100,101,103,105,106,107,110,116,139,155,],[51,51,51,51,51,51,51,51,-46,51,-47,51,-57,51,-58,-53,-48,-49,-50,-51,-52,51,-63,-62,51,-64,51,51,51,51,]),'WHILE':([7,20,21,23,24,25,26,28,30,31,34,35,77,113,122,129,131,133,135,137,147,148,152,],[18,-82,-17,-29,-28,-19,-83,-18,18,-21,-22,-20,-12,-23,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'GREATER':([51,53,54,55,56,58,59,60,61,62,63,64,66,88,91,104,123,127,130,143,144,],[-77,-80,-78,-70,-76,-75,-71,-56,-81,-65,-79,96,-61,-72,-54,-59,-66,-55,-60,-73,-74,]),'C_BRACKET':([7,20,21,23,24,25,26,28,30,31,32,34,35,45,47,77,113,118,122,129,131,133,135,137,147,148,152,],[-16,-82,-17,-29,-28,-19,-83,-18,-16,-21,-14,-22,-20,-15,77,-12,-23,-13,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'PRINT':([7,20,21,23,24,25,26,28,30,31,34,35,77,113,122,129,131,133,135,137,147,148,152,],[19,-82,-17,-29,-28,-19,-83,-18,19,-21,-22,-20,-12,-23,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'C_PARENTHESIS':([43,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,75,79,82,85,88,89,91,99,104,109,115,121,123,124,126,127,128,130,132,136,141,143,144,145,156,158,],[-88,-92,81,-77,-80,-78,-70,-76,-42,-75,-71,-56,-81,-65,-79,-45,102,-61,108,-27,114,-90,117,120,123,-40,-72,-88,-54,-43,-59,-25,-87,-94,-66,-41,144,-55,-44,-60,-26,-90,-91,-73,-74,-89,-94,-93,]),'TRUE':([38,39,42,43,44,46,52,69,83,84,86,89,90,92,93,94,95,96,97,98,100,101,103,105,106,107,110,116,139,155,],[53,53,53,53,53,53,53,53,-46,53,-47,53,-57,53,-58,-53,-48,-49,-50,-51,-52,53,-63,-62,53,-64,53,53,53,53,]),'MINUS':([51,53,54,55,56,58,59,60,61,62,63,66,88,104,123,130,143,144,],[-77,-80,-78,-70,-76,-75,-71,93,-81,-65,-79,-61,-72,-59,-66,-60,-73,-74,]),'DIVIDE':([51,53,54,55,56,58,59,61,62,63,66,88,123,143,144,],[-77,-80,-78,-70,-76,-75,-71,-81,-65,-79,103,-72,-66,-73,-74,]),'EQUALITY':([51,53,54,55,56,58,59,60,61,62,63,64,66,88,91,104,123,127,130,143,144,],[-77,-80,-78,-70,-76,-75,-71,-56,-81,-65,-79,95,-61,-72,-54,-59,-66,-55,-60,-73,-74,]),'SEMICOLON':([51,53,54,55,56,57,58,59,60,61,62,63,64,66,72,76,85,88,91,99,104,108,111,114,123,124,127,128,130,138,143,144,153,],[-77,-80,-78,-70,-76,-42,-75,-71,-56,-81,-65,-79,-45,-61,113,118,-40,-72,-54,-43,-59,131,133,135,-66,-41,-55,-44,-60,148,-73,-74,-32,]),'STRINGCONST':([38,39,42,43,44,46,52,69,83,84,86,89,90,92,93,94,95,96,97,98,100,101,103,105,106,107,110,116,139,155,],[54,54,54,54,54,54,54,54,-46,54,-47,54,-57,54,-58,-53,-48,-49,-50,-51,-52,54,-63,-62,54,-64,54,54,54,54,]),'COMMA':([51,53,54,55,56,57,58,59,60,61,62,63,64,66,68,74,85,88,91,99,104,121,123,124,127,128,130,136,143,144,150,156,157,],[-77,-80,-78,-70,-76,-42,-75,-71,-56,-81,-65,-79,-45,-61,110,116,-40,-72,-54,-43,-59,142,-66,-41,-55,-44,-60,116,-73,-74,155,142,155,]),'O_S_BRACKET':([41,58,119,],[71,87,139,]),'$end':([1,2,4,6,8,9,77,140,],[-4,0,-4,-1,-2,-3,-12,-5,]),'FUNCTION':([1,4,8,77,140,],[5,5,-2,-12,-5,]),'DIFFERENT':([51,53,54,55,56,58,59,60,61,62,63,64,66,88,91,104,123,127,130,143,144,],[-77,-80,-78,-70,-76,-75,-71,-56,-81,-65,-79,94,-61,-72,-54,-59,-66,-55,-60,-73,-74,]),'STRING':([5,7,20,21,23,24,25,26,28,30,31,33,34,35,49,77,113,122,129,131,133,135,137,142,147,148,152,],[10,10,-82,-17,-29,-28,-19,-83,-18,10,-21,10,-22,-20,10,-12,-23,-85,-84,-24,-30,-86,-39,10,-37,-31,-38,]),'EQUALS':([27,40,41,70,78,134,],[42,69,-69,-67,119,-68,]),'TIMES':([7,20,21,23,24,25,26,28,30,31,34,35,77,113,122,129,131,133,135,137,147,148,152,],[17,-82,-17,-29,-28,-19,-83,-18,17,-21,-22,-20,-12,-23,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'INTCONST':([37,38,39,42,43,44,46,52,69,71,83,84,86,87,89,90,92,93,94,95,96,97,98,100,101,103,105,106,107,110,116,139,155,],[50,56,56,56,56,56,56,56,56,112,-46,56,-47,125,56,-57,56,-58,-53,-48,-49,-50,-51,-52,56,-63,-62,56,-64,56,56,56,56,]),'O_BRACKET':([3,81,102,117,120,146,],[7,7,7,7,7,7,]),'ID':([7,10,11,12,13,14,15,16,20,21,22,23,24,25,26,28,30,31,34,35,38,39,42,43,44,46,48,52,69,77,80,83,84,86,89,90,92,93,94,95,96,97,98,100,101,103,105,106,107,110,113,116,122,129,131,133,135,137,147,148,151,152,],[27,-11,-9,-7,-6,-10,-8,36,-82,-17,41,-29,-28,-19,-83,-18,27,-21,-22,-20,58,58,58,58,58,58,41,58,58,-12,121,-46,58,-47,58,-57,58,-58,-53,-48,-49,-50,-51,-52,58,-63,-62,58,-64,58,-23,58,-85,-84,-24,-30,-86,-39,-37,-31,156,-38,]),'IF':([7,20,21,23,24,25,26,28,30,31,34,35,77,113,122,129,131,133,135,137,147,148,152,],[29,-82,-17,-29,-28,-19,-83,-18,29,-21,-22,-20,-12,-23,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'AND':([51,53,54,55,56,57,58,59,60,61,62,63,64,66,88,91,99,104,123,127,128,130,143,144,],[-77,-80,-78,-70,-76,83,-75,-71,-56,-81,-65,-79,-45,-61,-72,-54,-43,-59,-66,-55,-44,-60,-73,-74,]),'FALSE':([38,39,42,43,44,46,52,69,83,84,86,89,90,92,93,94,95,96,97,98,100,101,103,105,106,107,110,116,139,155,],[61,61,61,61,61,61,61,61,-46,61,-47,61,-57,61,-58,-53,-48,-49,-50,-51,-52,61,-63,-62,61,-64,61,61,61,61,]),'GREATER_EQUAL':([51,53,54,55,56,58,59,60,61,62,63,64,66,88,91,104,123,127,130,143,144,],[-77,-80,-78,-70,-76,-75,-71,-56,-81,-65,-79,97,-61,-72,-54,-59,-66,-55,-60,-73,-74,]),'MULTIPLY':([51,53,54,55,56,58,59,61,62,63,66,88,123,143,144,],[-77,-80,-78,-70,-76,-75,-71,-81,-65,-79,105,-72,-66,-73,-74,]),'INT':([5,7,20,21,23,24,25,26,28,30,31,33,34,35,49,77,113,122,129,131,133,135,137,142,147,148,152,],[11,11,-82,-17,-29,-28,-19,-83,-18,11,-21,11,-22,-20,11,-12,-23,-85,-84,-24,-30,-86,-39,11,-37,-31,-38,]),'SUM':([51,53,54,55,56,58,59,60,61,62,63,66,88,104,123,130,143,144,],[-77,-80,-78,-70,-76,-75,-71,90,-81,-65,-79,-61,-72,-59,-66,-60,-73,-74,]),'FLOAT':([5,7,20,21,23,24,25,26,28,30,31,33,34,35,49,77,113,122,129,131,133,135,137,142,147,148,152,],[14,14,-82,-17,-29,-28,-19,-83,-18,14,-21,14,-22,-20,14,-12,-23,-85,-84,-24,-30,-86,-39,14,-37,-31,-38,]),'LIST':([7,20,21,23,24,25,26,28,30,31,34,35,77,113,122,129,131,133,135,137,147,148,152,],[33,-82,-17,-29,-28,-19,-83,-18,33,-21,-22,-20,-12,-23,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'C_S_BRACKET':([51,53,54,56,61,63,112,125,139,149,150,154,157,159,],[-77,-80,-78,-76,-81,-79,134,143,-34,153,-36,-33,-36,-35,]),'BOOL':([5,7,20,21,23,24,25,26,28,30,31,33,34,35,49,77,113,122,129,131,133,135,137,142,147,148,152,],[15,15,-82,-17,-29,-28,-19,-83,-18,15,-21,15,-22,-20,15,-12,-23,-85,-84,-24,-30,-86,-39,15,-37,-31,-38,]),'LESS_EQUAL':([51,53,54,55,56,58,59,60,61,62,63,64,66,88,91,104,123,127,130,143,144,],[-77,-80,-78,-70,-76,-75,-71,-56,-81,-65,-79,100,-61,-72,-54,-59,-66,-55,-60,-73,-74,]),'MAIN':([0,],[3,]),'OR':([51,53,54,55,56,57,58,59,60,61,62,63,64,66,88,91,99,104,123,127,128,130,143,144,],[-77,-80,-78,-70,-76,86,-75,-71,-56,-81,-65,-79,-45,-61,-72,-54,-43,-59,-66,-55,-44,-60,-73,-74,]),'MOD':([51,53,54,55,56,58,59,61,62,63,66,88,123,143,144,],[-77,-80,-78,-70,-76,-75,-71,-81,-65,-79,107,-72,-66,-73,-74,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersloop':([121,156,],[141,158,]),'block':([3,81,102,117,120,146,],[8,122,129,137,140,152,]),'parametersinputloop':([74,136,],[115,145,]),'optionalconstants':([150,157,],[154,159,]),'expressionoptional':([57,],[85,]),'exploop':([60,],[91,]),'divmult':([66,],[106,]),'addsub':([60,],[92,]),'logicop':([57,],[84,]),'functionloop':([1,4,],[6,9,]),'whileloop':([7,30,],[20,20,]),'parameters':([49,],[79,]),'termloop':([66,],[104,]),'fact':([38,39,42,43,44,46,52,69,84,89,92,101,106,110,116,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'init':([7,30,],[21,21,]),'program':([0,],[2,]),'listaccess':([41,],[70,]),'constants':([38,39,42,43,44,46,52,69,84,89,92,101,106,110,116,139,155,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,150,157,]),'expression2optional':([64,],[99,]),'var':([22,48,],[40,78,]),'main':([0,],[1,]),'type':([5,7,30,33,49,142,],[12,22,22,48,80,151,]),'functionorlist':([58,],[88,]),'function':([1,4,],[4,4,]),'listinit':([7,30,],[24,24,]),'parametersinput':([43,89,],[73,126,]),'writting':([7,30,],[25,25,]),'else':([137,],[147,]),'varconstfunction':([38,39,42,43,44,46,52,69,84,89,92,101,106,110,116,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'functionreturn':([32,],[47,]),'timesloop':([7,30,],[26,26,]),'expression2':([38,39,42,43,44,46,52,69,84,89,110,116,],[57,57,57,57,57,57,57,57,124,57,57,57,]),'condition':([7,30,],[28,28,]),'relop':([64,],[101,]),'statute':([7,30,],[30,30,]),'term':([38,39,42,43,44,46,52,69,84,89,92,101,106,110,116,],[60,60,60,60,60,60,60,60,60,60,60,60,130,60,60,]),'assignation':([7,30,],[31,31,]),'statutesloop':([7,30,],[32,45,]),'varconst':([38,39,42,43,44,46,52,69,84,89,92,101,106,110,116,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'booleanconst':([38,39,42,43,44,46,52,69,84,89,92,101,106,110,116,139,155,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'list':([119,],[138,]),'expression':([38,39,42,43,44,46,52,69,89,110,116,],[65,68,72,74,75,76,82,111,74,68,136,]),'listelements':([139,],[149,]),'optionalwritting':([68,],[109,]),'functioncall':([7,30,],[34,34,]),'normalinit':([7,30,],[23,23,]),'exp':([38,39,42,43,44,46,52,69,84,89,92,101,110,116,],[64,64,64,64,64,64,64,64,64,64,127,128,64,64,]),'writtingloop':([39,110,],[67,132,]),'functiontype':([5,],[16,]),'loop':([7,30,],[35,35,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> main functionloop','program',2,'p_program','parser.py',13),
  ('main -> MAIN block','main',2,'p_main','parser.py',18),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',22),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',23),
  ('function -> FUNCTION functiontype ID O_PARENTHESIS parameters C_PARENTHESIS block','function',7,'p_function','parser.py',27),
  ('functiontype -> VOID','functiontype',1,'p_functiontype','parser.py',31),
  ('functiontype -> type','functiontype',1,'p_functiontype','parser.py',32),
  ('type -> BOOL','type',1,'p_type','parser.py',37),
  ('type -> INT','type',1,'p_type','parser.py',38),
  ('type -> FLOAT','type',1,'p_type','parser.py',39),
  ('type -> STRING','type',1,'p_type','parser.py',40),
  ('block -> O_BRACKET statutesloop functionreturn C_BRACKET','block',4,'p_block','parser.py',45),
  ('functionreturn -> RETURN expression SEMICOLON','functionreturn',3,'p_functionreturn','parser.py',49),
  ('functionreturn -> <empty>','functionreturn',0,'p_functionreturn','parser.py',50),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',55),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',56),
  ('statute -> init','statute',1,'p_statute','parser.py',60),
  ('statute -> condition','statute',1,'p_statute','parser.py',61),
  ('statute -> writting','statute',1,'p_statute','parser.py',62),
  ('statute -> loop','statute',1,'p_statute','parser.py',63),
  ('statute -> assignation','statute',1,'p_statute','parser.py',64),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',65),
  ('assignation -> ID EQUALS expression SEMICOLON','assignation',4,'p_assignation','parser.py',70),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',74),
  ('writtingloop -> expression optionalwritting','writtingloop',2,'p_writtingloop','parser.py',78),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',82),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',83),
  ('init -> listinit','init',1,'p_init','parser.py',86),
  ('init -> normalinit','init',1,'p_init','parser.py',87),
  ('normalinit -> type var EQUALS expression SEMICOLON','normalinit',5,'p_normalinit','parser.py',92),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',97),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',102),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',106),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',107),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',110),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',111),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS block else','condition',6,'p_condition','parser.py',115),
  ('else -> ELSE block','else',2,'p_else','parser.py',119),
  ('else -> <empty>','else',0,'p_else','parser.py',120),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',124),
  ('expressionoptional -> logicop expression2','expressionoptional',2,'p_expressionoptional','parser.py',127),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',128),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',131),
  ('expression2optional -> relop exp','expression2optional',2,'p_expression2optional','parser.py',134),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',135),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',139),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',140),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',144),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',145),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',146),
  ('relop -> LESS','relop',1,'p_relop','parser.py',147),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',148),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',149),
  ('exp -> term exploop','exp',2,'p_exp','parser.py',153),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',157),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',158),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',161),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',162),
  ('term -> fact termloop','term',2,'p_term','parser.py',165),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',169),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',170),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',173),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',174),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',175),
  ('fact -> varconst','fact',1,'p_fact','parser.py',178),
  ('fact -> O_PARENTHESIS expression C_PARENTHESIS','fact',3,'p_fact','parser.py',179),
  ('var -> ID listaccess','var',2,'p_var','parser.py',183),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',196),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',197),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',200),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',201),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',204),
  ('functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET','functionorlist',3,'p_functionorlist','parser.py',207),
  ('functionorlist -> O_PARENTHESIS parametersinput C_PARENTHESIS','functionorlist',3,'p_functionorlist','parser.py',208),
  ('functionorlist -> <empty>','functionorlist',0,'p_functionorlist','parser.py',209),
  ('constants -> INTCONST','constants',1,'p_constants','parser.py',213),
  ('constants -> FLOATCONST','constants',1,'p_constants','parser.py',214),
  ('constants -> STRINGCONST','constants',1,'p_constants','parser.py',215),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',216),
  ('booleanconst -> TRUE','booleanconst',1,'p_booleanconst','parser.py',220),
  ('booleanconst -> FALSE','booleanconst',1,'p_booleanconst','parser.py',221),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',225),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',226),
  ('whileloop -> WHILE O_PARENTHESIS expression C_PARENTHESIS block','whileloop',5,'p_whileloop','parser.py',230),
  ('timesloop -> TIMES O_PARENTHESIS INTCONST C_PARENTHESIS block','timesloop',5,'p_timesloop','parser.py',234),
  ('functioncall -> ID O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON','functioncall',5,'p_functioncall','parser.py',238),
  ('parametersinput -> expression parametersinputloop','parametersinput',2,'p_parametersinput','parser.py',242),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',243),
  ('parametersinputloop -> COMMA expression parametersinputloop','parametersinputloop',3,'p_parametersinputloop','parser.py',246),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',247),
  ('parameters -> type ID parametersloop','parameters',3,'p_parameters','parser.py',250),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',251),
  ('parametersloop -> COMMA type ID parametersloop','parametersloop',4,'p_parametersloop','parser.py',261),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',262),
]
