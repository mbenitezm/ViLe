
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xbf\x14\x8es!xs:\xb2\xb7\x94s\x91B\xe8P'
    
_lr_action_items = {'RETURN':([7,20,21,24,25,26,27,29,31,32,33,35,36,48,79,110,120,125,127,129,130,132,140,141,145,],[-16,-79,-17,-29,-28,-19,-80,-18,-16,-21,49,-22,-20,-15,-12,-23,-82,-81,-24,-30,-83,-39,-37,-31,-38,]),'LESS':([45,54,56,57,58,59,61,62,63,64,65,66,67,68,70,90,103,112,121,123,126,130,],[-67,-74,-77,-75,-70,-73,-69,-71,-56,-78,-65,-76,-72,97,-61,-54,-59,-68,-66,-55,-60,-83,]),'VOID':([5,],[13,]),'O_PARENTHESIS':([17,18,19,28,30,37,39,40,41,46,47,55,61,74,85,86,88,89,91,92,93,94,95,96,97,99,100,102,104,105,106,109,115,],[38,39,40,46,47,52,55,55,55,55,55,55,46,55,-46,55,-47,-57,55,-58,-53,-48,-49,-50,-51,-52,55,-63,-62,55,-64,55,55,]),'ELSE':([79,132,],[-12,139,]),'FLOATCONST':([39,40,41,46,47,55,74,85,86,88,89,91,92,93,94,95,96,97,99,100,102,104,105,106,109,115,134,148,],[54,54,54,54,54,54,54,-46,54,-47,-57,54,-58,-53,-48,-49,-50,-51,-52,54,-63,-62,54,-64,54,54,54,54,]),'WHILE':([7,20,21,24,25,26,27,29,31,32,35,36,79,110,120,125,127,129,130,132,140,141,145,],[18,-79,-17,-29,-28,-19,-80,-18,18,-21,-22,-20,-12,-23,-82,-81,-24,-30,-83,-39,-37,-31,-38,]),'GREATER':([45,54,56,57,58,59,61,62,63,64,65,66,67,68,70,90,103,112,121,123,126,130,],[-67,-74,-77,-75,-70,-73,-69,-71,-56,-78,-65,-76,-72,95,-61,-54,-59,-68,-66,-55,-60,-83,]),'C_BRACKET':([7,20,21,24,25,26,27,29,31,32,33,35,36,48,49,50,79,110,120,125,127,129,130,132,140,141,145,],[-16,-79,-17,-29,-28,-19,-80,-18,-16,-21,-14,-22,-20,-15,-13,79,-12,-23,-82,-81,-24,-30,-83,-39,-37,-31,-38,]),'PRINT':([7,20,21,24,25,26,27,29,31,32,35,36,79,110,120,125,127,129,130,132,140,141,145,],[19,-79,-17,-29,-28,-19,-80,-18,19,-21,-22,-20,-12,-23,-82,-81,-24,-30,-83,-39,-37,-31,-38,]),'C_PARENTHESIS':([45,46,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,77,78,81,84,87,90,98,103,108,112,114,119,121,122,123,124,126,128,130,131,136,138,149,151,],[-67,-85,-89,83,-74,-77,-75,-70,-73,-42,-69,-71,-56,-78,-65,-76,-72,-45,101,-61,107,-27,113,-87,116,118,121,-40,-54,-43,-59,-25,-68,-84,-91,-66,-41,-55,-44,-60,-26,-83,-87,-88,-86,-91,-90,]),'TRUE':([39,40,41,46,47,55,74,85,86,88,89,91,92,93,94,95,96,97,99,100,102,104,105,106,109,115,134,148,],[56,56,56,56,56,56,56,-46,56,-47,-57,56,-58,-53,-48,-49,-50,-51,-52,56,-63,-62,56,-64,56,56,56,56,]),'MINUS':([45,54,56,57,58,59,61,62,63,64,65,66,67,70,103,112,121,126,130,],[-67,-74,-77,-75,-70,-73,-69,-71,92,-78,-65,-76,-72,-61,-59,-68,-66,-60,-83,]),'DIVIDE':([45,54,56,57,58,59,61,62,64,65,66,67,70,112,121,130,],[-67,-74,-77,-75,-70,-73,-69,-71,-78,-65,-76,-72,102,-68,-66,-83,]),'O_BRACKET':([3,83,101,116,118,139,],[7,7,7,7,7,7,]),'EQUALITY':([45,54,56,57,58,59,61,62,63,64,65,66,67,68,70,90,103,112,121,123,126,130,],[-67,-74,-77,-75,-70,-73,-69,-71,-56,-78,-65,-76,-72,94,-61,-54,-59,-68,-66,-55,-60,-83,]),'SEMICOLON':([45,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,73,87,90,98,103,107,111,112,113,121,122,123,124,126,130,133,146,],[-67,-74,-77,-75,-70,-73,-42,-69,-71,-56,-78,-65,-76,-72,-45,-61,110,-40,-54,-43,-59,127,129,-68,130,-66,-41,-55,-44,-60,-83,141,-32,]),'STRINGCONST':([39,40,41,46,47,55,74,85,86,88,89,91,92,93,94,95,96,97,99,100,102,104,105,106,109,115,134,148,],[57,57,57,57,57,57,57,-46,57,-47,-57,57,-58,-53,-48,-49,-50,-51,-52,57,-63,-62,57,-64,57,57,57,57,]),'COMMA':([45,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,72,77,87,90,98,103,112,119,121,122,123,124,126,130,131,143,149,150,],[-67,-74,-77,-75,-70,-73,-42,-69,-71,-56,-78,-65,-76,-72,-45,-61,109,115,-40,-54,-43,-59,-68,137,-66,-41,-55,-44,-60,-83,115,148,137,148,]),'SUM':([45,54,56,57,58,59,61,62,63,64,65,66,67,70,103,112,121,126,130,],[-67,-74,-77,-75,-70,-73,-69,-71,89,-78,-65,-76,-72,-61,-59,-68,-66,-60,-83,]),'$end':([1,2,4,6,8,9,79,135,],[-4,0,-4,-1,-2,-3,-12,-5,]),'FUNCTION':([1,4,8,79,135,],[5,5,-2,-12,-5,]),'DIFFERENT':([45,54,56,57,58,59,61,62,63,64,65,66,67,68,70,90,103,112,121,123,126,130,],[-67,-74,-77,-75,-70,-73,-69,-71,-56,-78,-65,-76,-72,93,-61,-54,-59,-68,-66,-55,-60,-83,]),'STRING':([5,7,20,21,24,25,26,27,29,31,32,34,35,36,52,79,110,120,125,127,129,130,132,137,140,141,145,],[10,10,-79,-17,-29,-28,-19,-80,-18,10,-21,10,-22,-20,10,-12,-23,-82,-81,-24,-30,-83,-39,10,-37,-31,-38,]),'EQUALS':([22,28,42,43,45,80,112,],[41,-69,74,-69,-67,117,-68,]),'TIMES':([7,20,21,24,25,26,27,29,31,32,35,36,79,110,120,125,127,129,130,132,140,141,145,],[17,-79,-17,-29,-28,-19,-80,-18,17,-21,-22,-20,-12,-23,-82,-81,-24,-30,-83,-39,-37,-31,-38,]),'INTCONST':([38,39,40,41,44,46,47,55,74,85,86,88,89,91,92,93,94,95,96,97,99,100,102,104,105,106,109,115,134,148,],[53,59,59,59,75,59,59,59,59,-46,59,-47,-57,59,-58,-53,-48,-49,-50,-51,-52,59,-63,-62,59,-64,59,59,59,59,]),'O_S_BRACKET':([28,43,61,117,],[44,44,44,134,]),'ID':([7,10,11,12,13,14,15,16,20,21,23,24,25,26,27,29,31,32,35,36,39,40,41,46,47,51,55,74,79,82,85,86,88,89,91,92,93,94,95,96,97,99,100,102,104,105,106,109,110,115,120,125,127,129,130,132,140,141,144,145,],[28,-11,-9,-7,-6,-10,-8,37,-79,-17,43,-29,-28,-19,-80,-18,28,-21,-22,-20,61,61,61,61,61,43,61,61,-12,119,-46,61,-47,-57,61,-58,-53,-48,-49,-50,-51,-52,61,-63,-62,61,-64,61,-23,61,-82,-81,-24,-30,-83,-39,-37,-31,149,-38,]),'IF':([7,20,21,24,25,26,27,29,31,32,35,36,79,110,120,125,127,129,130,132,140,141,145,],[30,-79,-17,-29,-28,-19,-80,-18,30,-21,-22,-20,-12,-23,-82,-81,-24,-30,-83,-39,-37,-31,-38,]),'AND':([45,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,90,98,103,112,121,123,124,126,130,],[-67,-74,-77,-75,-70,-73,85,-69,-71,-56,-78,-65,-76,-72,-45,-61,-54,-43,-59,-68,-66,-55,-44,-60,-83,]),'FALSE':([39,40,41,46,47,55,74,85,86,88,89,91,92,93,94,95,96,97,99,100,102,104,105,106,109,115,134,148,],[64,64,64,64,64,64,64,-46,64,-47,-57,64,-58,-53,-48,-49,-50,-51,-52,64,-63,-62,64,-64,64,64,64,64,]),'GREATER_EQUAL':([45,54,56,57,58,59,61,62,63,64,65,66,67,68,70,90,103,112,121,123,126,130,],[-67,-74,-77,-75,-70,-73,-69,-71,-56,-78,-65,-76,-72,96,-61,-54,-59,-68,-66,-55,-60,-83,]),'MULTIPLY':([45,54,56,57,58,59,61,62,64,65,66,67,70,112,121,130,],[-67,-74,-77,-75,-70,-73,-69,-71,-78,-65,-76,-72,104,-68,-66,-83,]),'INT':([5,7,20,21,24,25,26,27,29,31,32,34,35,36,52,79,110,120,125,127,129,130,132,137,140,141,145,],[11,11,-79,-17,-29,-28,-19,-80,-18,11,-21,11,-22,-20,11,-12,-23,-82,-81,-24,-30,-83,-39,11,-37,-31,-38,]),'FLOAT':([5,7,20,21,24,25,26,27,29,31,32,34,35,36,52,79,110,120,125,127,129,130,132,137,140,141,145,],[14,14,-79,-17,-29,-28,-19,-80,-18,14,-21,14,-22,-20,14,-12,-23,-82,-81,-24,-30,-83,-39,14,-37,-31,-38,]),'LIST':([7,20,21,24,25,26,27,29,31,32,35,36,79,110,120,125,127,129,130,132,140,141,145,],[34,-79,-17,-29,-28,-19,-80,-18,34,-21,-22,-20,-12,-23,-82,-81,-24,-30,-83,-39,-37,-31,-38,]),'C_S_BRACKET':([54,56,57,59,64,66,75,134,142,143,147,150,152,],[-74,-77,-75,-73,-78,-76,112,-34,146,-36,-33,-36,-35,]),'BOOL':([5,7,20,21,24,25,26,27,29,31,32,34,35,36,52,79,110,120,125,127,129,130,132,137,140,141,145,],[15,15,-79,-17,-29,-28,-19,-80,-18,15,-21,15,-22,-20,15,-12,-23,-82,-81,-24,-30,-83,-39,15,-37,-31,-38,]),'LESS_EQUAL':([45,54,56,57,58,59,61,62,63,64,65,66,67,68,70,90,103,112,121,123,126,130,],[-67,-74,-77,-75,-70,-73,-69,-71,-56,-78,-65,-76,-72,99,-61,-54,-59,-68,-66,-55,-60,-83,]),'MAIN':([0,],[3,]),'OR':([45,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,90,98,103,112,121,123,124,126,130,],[-67,-74,-77,-75,-70,-73,88,-69,-71,-56,-78,-65,-76,-72,-45,-61,-54,-43,-59,-68,-66,-55,-44,-60,-83,]),'MOD':([45,54,56,57,58,59,61,62,64,65,66,67,70,112,121,130,],[-67,-74,-77,-75,-70,-73,-69,-71,-78,-65,-76,-72,106,-68,-66,-83,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersloop':([119,149,],[136,151,]),'parametersinputloop':([77,131,],[114,138,]),'optionalconstants':([143,150,],[147,152,]),'expressionoptional':([60,],[87,]),'exploop':([63,],[90,]),'addsub':([63,],[91,]),'logicop':([60,],[86,]),'functionloop':([1,4,],[6,9,]),'whileloop':([7,31,],[20,20,]),'parameters':([52,],[81,]),'termloop':([70,],[103,]),'fact':([39,40,41,46,47,55,74,86,91,100,105,109,115,],[70,70,70,70,70,70,70,70,70,70,70,70,70,]),'init':([7,31,],[21,21,]),'program':([0,],[2,]),'listaccess':([28,43,61,],[45,45,45,]),'constants':([39,40,41,46,47,55,74,86,91,100,105,109,115,134,148,],[62,62,62,62,62,62,62,62,62,62,62,62,62,143,150,]),'expression2optional':([68,],[98,]),'var':([7,23,31,39,40,41,46,47,51,55,74,86,91,100,105,109,115,],[22,42,22,58,58,58,58,58,80,58,58,58,58,58,58,58,58,]),'main':([0,],[1,]),'type':([5,7,31,34,52,137,],[12,23,23,51,82,144,]),'normalinit':([7,31,],[24,24,]),'function':([1,4,],[4,4,]),'listinit':([7,31,],[25,25,]),'parametersinput':([46,],[76,]),'writting':([7,31,],[26,26,]),'else':([132,],[140,]),'divmult':([70,],[105,]),'functionreturn':([33,],[50,]),'timesloop':([7,31,],[27,27,]),'expression2':([39,40,41,46,47,55,74,86,109,115,],[60,60,60,60,60,60,60,122,60,60,]),'condition':([7,31,],[29,29,]),'relop':([68,],[100,]),'statute':([7,31,],[31,31,]),'term':([39,40,41,46,47,55,74,86,91,100,105,109,115,],[63,63,63,63,63,63,63,63,63,63,126,63,63,]),'assignation':([7,31,],[32,32,]),'statutesloop':([7,31,],[33,48,]),'varconst':([39,40,41,46,47,55,74,86,91,100,105,109,115,],[65,65,65,65,65,65,65,65,65,65,65,65,65,]),'booleanconst':([39,40,41,46,47,55,74,86,91,100,105,109,115,134,148,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'list':([117,],[133,]),'expression':([39,40,41,46,47,55,74,109,115,],[69,72,73,77,78,84,111,72,131,]),'listelements':([134,],[142,]),'optionalwritting':([72,],[108,]),'functioncall':([7,31,39,40,41,46,47,55,74,86,91,100,105,109,115,],[35,35,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'block':([3,83,101,116,118,139,],[8,120,125,132,135,145,]),'exp':([39,40,41,46,47,55,74,86,91,100,109,115,],[68,68,68,68,68,68,68,68,123,124,68,68,]),'writtingloop':([40,109,],[71,128,]),'functiontype':([5,],[16,]),'loop':([7,31,],[36,36,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> main functionloop','program',2,'p_program','parser.py',12),
  ('main -> MAIN block','main',2,'p_main','parser.py',17),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',21),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',22),
  ('function -> FUNCTION functiontype ID O_PARENTHESIS parameters C_PARENTHESIS block','function',7,'p_function','parser.py',25),
  ('functiontype -> VOID','functiontype',1,'p_functiontype','parser.py',29),
  ('functiontype -> type','functiontype',1,'p_functiontype','parser.py',30),
  ('type -> BOOL','type',1,'p_type','parser.py',33),
  ('type -> INT','type',1,'p_type','parser.py',34),
  ('type -> FLOAT','type',1,'p_type','parser.py',35),
  ('type -> STRING','type',1,'p_type','parser.py',36),
  ('block -> O_BRACKET statutesloop functionreturn C_BRACKET','block',4,'p_block','parser.py',40),
  ('functionreturn -> RETURN','functionreturn',1,'p_functionreturn','parser.py',44),
  ('functionreturn -> <empty>','functionreturn',0,'p_functionreturn','parser.py',45),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',49),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',50),
  ('statute -> init','statute',1,'p_statute','parser.py',53),
  ('statute -> condition','statute',1,'p_statute','parser.py',54),
  ('statute -> writting','statute',1,'p_statute','parser.py',55),
  ('statute -> loop','statute',1,'p_statute','parser.py',56),
  ('statute -> assignation','statute',1,'p_statute','parser.py',57),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',58),
  ('assignation -> var EQUALS expression SEMICOLON','assignation',4,'p_assignation','parser.py',62),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',66),
  ('writtingloop -> expression optionalwritting','writtingloop',2,'p_writtingloop','parser.py',70),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',74),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',75),
  ('init -> listinit','init',1,'p_init','parser.py',78),
  ('init -> normalinit','init',1,'p_init','parser.py',79),
  ('normalinit -> type var EQUALS expression SEMICOLON','normalinit',5,'p_normalinit','parser.py',83),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',87),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',91),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',95),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',96),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',99),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',100),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS block else','condition',6,'p_condition','parser.py',103),
  ('else -> ELSE block','else',2,'p_else','parser.py',107),
  ('else -> <empty>','else',0,'p_else','parser.py',108),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',111),
  ('expressionoptional -> logicop expression2','expressionoptional',2,'p_expressionoptional','parser.py',114),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',115),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',118),
  ('expression2optional -> relop exp','expression2optional',2,'p_expression2optional','parser.py',121),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',122),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',125),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',126),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',129),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',130),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',131),
  ('relop -> LESS','relop',1,'p_relop','parser.py',132),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',133),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',134),
  ('exp -> term exploop','exp',2,'p_exp','parser.py',138),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',142),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',143),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',146),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',147),
  ('term -> fact termloop','term',2,'p_term','parser.py',150),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',154),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',155),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',158),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',159),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',160),
  ('fact -> varconst','fact',1,'p_fact','parser.py',163),
  ('fact -> O_PARENTHESIS expression C_PARENTHESIS','fact',3,'p_fact','parser.py',164),
  ('var -> ID listaccess','var',2,'p_var','parser.py',168),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',172),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',173),
  ('varconst -> var','varconst',1,'p_varconst','parser.py',176),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',177),
  ('varconst -> functioncall','varconst',1,'p_varconst','parser.py',178),
  ('constants -> INTCONST','constants',1,'p_constants','parser.py',182),
  ('constants -> FLOATCONST','constants',1,'p_constants','parser.py',183),
  ('constants -> STRINGCONST','constants',1,'p_constants','parser.py',184),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',185),
  ('booleanconst -> TRUE','booleanconst',1,'p_booleanconst','parser.py',189),
  ('booleanconst -> FALSE','booleanconst',1,'p_booleanconst','parser.py',190),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',194),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',195),
  ('whileloop -> WHILE O_PARENTHESIS expression C_PARENTHESIS block','whileloop',5,'p_whileloop','parser.py',199),
  ('timesloop -> TIMES O_PARENTHESIS INTCONST C_PARENTHESIS block','timesloop',5,'p_timesloop','parser.py',203),
  ('functioncall -> ID O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON','functioncall',5,'p_functioncall','parser.py',207),
  ('parametersinput -> expression parametersinputloop','parametersinput',2,'p_parametersinput','parser.py',211),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',212),
  ('parametersinputloop -> COMMA expression parametersinputloop','parametersinputloop',3,'p_parametersinputloop','parser.py',215),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',216),
  ('parameters -> type ID parametersloop','parameters',3,'p_parameters','parser.py',219),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',220),
  ('parametersloop -> COMMA type ID parametersloop','parametersloop',4,'p_parametersloop','parser.py',224),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',225),
]
