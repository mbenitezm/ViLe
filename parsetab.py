
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xca\xc4\xab`\x1f\xf4k\xea\xf50\xbdZ\x89j\xee\xf6'
    
_lr_action_items = {'RETURN':([7,19,20,24,26,27,28,30,32,33,34,38,39,51,83,133,136,141,163,173,174,178,180,183,187,189,191,],[-23,-108,-24,-38,-37,-26,-109,-25,-23,-28,52,-29,-27,-22,-19,-114,-31,-115,-30,-50,-42,-113,-39,-53,-110,-48,-49,]),'LESS':([64,66,67,68,69,71,73,74,75,76,77,78,80,99,101,102,112,117,119,121,122,125,147,151,165,168,169,170,172,181,],[-105,-107,-106,-91,107,-104,-94,-92,-71,-107,-83,-101,-77,-99,-102,-100,-98,-97,-93,-73,-103,-79,-70,-76,-86,-95,-96,-72,-78,-84,]),'VOID':([5,],[12,]),'O_PARENTHESIS':([16,17,18,29,31,40,42,43,44,49,50,52,57,58,60,61,65,73,97,100,103,104,105,106,107,109,110,113,115,116,120,124,145,146,148,150,152,153,154,162,],[41,-111,43,49,50,55,57,-32,-41,65,65,65,65,65,65,-41,-85,120,65,65,-68,-63,-64,-65,-66,-67,65,-60,65,-61,65,65,-74,-75,65,-81,-80,65,-82,-32,]),'ELSE':([83,173,],[-19,182,]),'FLOATCONST':([43,44,49,50,52,57,58,60,61,65,97,100,103,104,105,106,107,109,110,113,115,116,120,124,145,146,148,150,152,153,154,157,162,186,],[-32,-41,64,64,64,64,64,64,-41,-85,64,64,-68,-63,-64,-65,-66,-67,64,-60,64,-61,64,64,-74,-75,64,-81,-80,64,-82,64,-32,64,]),'WHILE':([7,19,20,24,26,27,28,30,32,33,38,39,83,133,136,141,163,173,174,178,180,183,187,189,191,],[17,-108,-24,-38,-37,-26,-109,-25,17,-28,-29,-27,-19,-114,-31,-115,-30,-50,-42,-113,-39,-53,-110,-48,-49,]),'GREATER':([64,66,67,68,69,71,73,74,75,76,77,78,80,99,101,102,112,117,119,121,122,125,147,151,165,168,169,170,172,181,],[-105,-107,-106,-91,105,-104,-94,-92,-71,-107,-83,-101,-77,-99,-102,-100,-98,-97,-93,-73,-103,-79,-70,-76,-86,-95,-96,-72,-78,-84,]),'C_BRACKET':([7,19,20,24,26,27,28,30,32,33,34,38,39,51,53,83,127,133,136,141,163,173,174,178,180,183,187,189,191,],[-23,-108,-24,-38,-37,-26,-109,-25,-23,-28,-21,-29,-27,-22,83,-19,-20,-114,-31,-115,-30,-50,-42,-113,-39,-53,-110,-48,-49,]),'PRINT':([7,19,20,24,26,27,28,30,32,33,38,39,83,133,136,141,163,173,174,178,180,183,187,189,191,],[18,-108,-24,-38,-37,-26,-109,-25,18,-28,-29,-27,-19,-114,-31,-115,-30,-50,-42,-113,-39,-53,-110,-48,-49,]),'C_PARENTHESIS':([49,55,56,59,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,86,90,93,94,99,101,102,108,112,114,117,119,120,121,122,123,125,129,131,135,139,140,142,144,147,149,151,159,161,165,166,167,168,169,170,171,172,177,179,181,],[-117,-121,92,95,-105,-107,-106,-91,-59,111,-104,-56,-94,-92,-71,-107,-83,-101,-119,-77,126,130,-124,134,-33,-99,-102,-100,-57,-98,-54,-97,-93,-117,-73,-103,-116,-79,-122,-120,-36,165,-69,-62,169,-70,-119,-76,-124,-34,-86,-58,-55,-95,-96,-72,-118,-78,-123,-35,-84,]),'TRUE':([43,44,49,50,52,57,58,60,61,65,97,100,103,104,105,106,107,109,110,113,115,116,120,124,145,146,148,150,152,153,154,157,162,186,],[-32,-41,66,66,66,66,66,66,-41,-85,66,66,-68,-63,-64,-65,-66,-67,66,-60,66,-61,66,66,-74,-75,66,-81,-80,66,-82,66,-32,66,]),'MINUS':([64,66,67,68,71,73,74,75,76,77,78,80,99,101,102,112,117,119,121,122,125,151,165,168,169,172,181,],[-105,-107,-106,-91,-104,-94,-92,-71,-107,-83,-101,-77,-99,-102,-100,-98,-97,-93,146,-103,-79,-76,-86,-95,-96,-78,-84,]),'DIVIDE':([64,66,67,68,71,73,74,76,77,78,80,99,101,102,112,117,119,122,125,165,168,169,181,],[-105,-107,-106,-91,-104,-94,-92,-107,-83,-101,-77,-99,-102,-100,-98,-97,-93,-103,150,-86,-95,-96,-84,]),'O_BRACKET':([3,92,126,130,134,155,160,182,188,],[7,7,-51,7,-112,7,7,-52,7,]),'EQUALITY':([64,66,67,68,69,71,73,74,75,76,77,78,80,99,101,102,112,117,119,121,122,125,147,151,165,168,169,170,172,181,],[-105,-107,-106,-91,104,-104,-94,-92,-71,-107,-83,-101,-77,-99,-102,-100,-98,-97,-93,-73,-103,-79,-70,-76,-86,-95,-96,-72,-78,-84,]),'SEMICOLON':([64,66,67,68,69,71,72,73,74,75,76,77,78,80,82,95,96,99,101,102,108,111,112,114,117,119,121,122,125,137,138,140,142,147,151,156,164,165,166,167,168,169,170,172,181,184,],[-105,-107,-106,-91,-59,-104,-56,-94,-92,-71,-107,-83,-101,-77,127,136,-40,-99,-102,-100,-57,141,-98,-54,-97,-93,-73,-103,-79,163,-40,-69,-62,-70,-76,174,180,-86,-58,-55,-95,-96,-72,-78,-84,-43,]),'STRINGCONST':([43,44,49,50,52,57,58,60,61,65,97,100,103,104,105,106,107,109,110,113,115,116,120,124,145,146,148,150,152,153,154,157,162,186,],[-32,-41,67,67,67,67,67,67,-41,-85,67,67,-68,-63,-64,-65,-66,-67,67,-60,67,-61,67,67,-74,-75,67,-81,-80,67,-82,67,-32,67,]),'COMMA':([64,66,67,68,69,71,72,73,74,75,76,77,78,79,80,90,94,99,101,102,108,112,114,117,119,121,122,125,129,135,140,142,147,149,151,159,165,166,167,168,169,170,172,176,181,190,],[-105,-107,-106,-91,-59,-104,-56,-94,-92,-71,-107,-83,-101,124,-77,132,-33,-99,-102,-100,-57,-98,-54,-97,-93,-73,-103,-79,-122,162,-69,-62,-70,124,-76,132,-86,-58,-55,-95,-96,-72,-78,186,-84,186,]),'SUM':([64,66,67,68,71,73,74,75,76,77,78,80,99,101,102,112,117,119,121,122,125,151,165,168,169,172,181,],[-105,-107,-106,-91,-104,-94,-92,-71,-107,-83,-101,-77,-99,-102,-100,-98,-97,-93,145,-103,-79,-76,-86,-95,-96,-78,-84,]),'$end':([1,2,4,6,8,9,83,158,],[-4,0,-4,-1,-2,-3,-19,-5,]),'FUNCTION':([1,4,8,83,158,],[5,5,-2,-19,-5,]),'DIFFERENT':([64,66,67,68,69,71,73,74,75,76,77,78,80,99,101,102,112,117,119,121,122,125,147,151,165,168,169,170,172,181,],[-105,-107,-106,-91,103,-104,-94,-92,-71,-107,-83,-101,-77,-99,-102,-100,-98,-97,-93,-73,-103,-79,-70,-76,-86,-95,-96,-72,-78,-84,]),'STRING':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,55,83,132,133,136,141,163,173,174,178,180,183,187,189,191,],[10,25,-108,-24,-38,-37,-26,-109,-25,25,-28,25,-29,-27,91,-19,91,-114,-31,-115,-30,-50,-42,-113,-39,-53,-110,-48,-49,]),'EQUALS':([22,29,45,46,48,62,84,98,],[44,-90,61,-90,-87,-88,128,-89,]),'TIMES':([7,19,20,24,26,27,28,30,32,33,38,39,83,133,136,141,163,173,174,178,180,183,187,189,191,],[16,-108,-24,-38,-37,-26,-109,-25,16,-28,-29,-27,-19,-114,-31,-115,-30,-50,-42,-113,-39,-53,-110,-48,-49,]),'INTCONST':([41,43,44,47,49,50,52,57,58,60,61,65,97,100,103,104,105,106,107,109,110,113,115,116,118,120,124,145,146,148,150,152,153,154,157,162,186,],[56,-32,-41,63,71,71,71,71,71,71,-41,-85,71,71,-68,-63,-64,-65,-66,-67,71,-60,71,-61,143,71,71,-74,-75,71,-81,-80,71,-82,71,-32,71,]),'O_S_BRACKET':([29,46,73,128,],[47,47,118,157,]),'ID':([7,10,11,12,13,14,15,19,20,21,23,24,25,26,27,28,30,32,33,35,36,38,39,43,44,49,50,52,54,57,58,60,61,65,83,85,87,88,89,91,97,100,103,104,105,106,107,109,110,113,115,116,120,124,133,136,141,145,146,148,150,152,153,154,162,163,173,174,178,180,183,187,189,191,],[29,-10,-8,-6,-9,-7,40,-108,-24,-11,46,-38,-14,-37,-26,-109,-25,29,-28,-12,-13,-29,-27,-32,-41,73,73,73,46,73,73,73,-41,-85,-19,129,-16,-17,-15,-18,73,73,-68,-63,-64,-65,-66,-67,73,-60,73,-61,73,73,-114,-31,-115,-74,-75,73,-81,-80,73,-82,-32,-30,-50,-42,-113,-39,-53,-110,-48,-49,]),'IF':([7,19,20,24,26,27,28,30,32,33,38,39,83,133,136,141,163,173,174,178,180,183,187,189,191,],[31,-108,-24,-38,-37,-26,-109,-25,31,-28,-29,-27,-19,-114,-31,-115,-30,-50,-42,-113,-39,-53,-110,-48,-49,]),'AND':([64,66,67,68,69,71,72,73,74,75,76,77,78,80,99,101,102,108,112,117,119,121,122,125,140,147,151,165,166,168,169,170,172,181,],[-105,-107,-106,-91,-59,-104,113,-94,-92,-71,-107,-83,-101,-77,-99,-102,-100,-57,-98,-97,-93,-73,-103,-79,-69,-70,-76,-86,-58,-95,-96,-72,-78,-84,]),'FALSE':([43,44,49,50,52,57,58,60,61,65,97,100,103,104,105,106,107,109,110,113,115,116,120,124,145,146,148,150,152,153,154,157,162,186,],[-32,-41,76,76,76,76,76,76,-41,-85,76,76,-68,-63,-64,-65,-66,-67,76,-60,76,-61,76,76,-74,-75,76,-81,-80,76,-82,76,-32,76,]),'GREATER_EQUAL':([64,66,67,68,69,71,73,74,75,76,77,78,80,99,101,102,112,117,119,121,122,125,147,151,165,168,169,170,172,181,],[-105,-107,-106,-91,106,-104,-94,-92,-71,-107,-83,-101,-77,-99,-102,-100,-98,-97,-93,-73,-103,-79,-70,-76,-86,-95,-96,-72,-78,-84,]),'MULTIPLY':([64,66,67,68,71,73,74,76,77,78,80,99,101,102,112,117,119,122,125,165,168,169,181,],[-105,-107,-106,-91,-104,-94,-92,-107,-83,-101,-77,-99,-102,-100,-98,-97,-93,-103,152,-86,-95,-96,-84,]),'INT':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,55,83,132,133,136,141,163,173,174,178,180,183,187,189,191,],[11,35,-108,-24,-38,-37,-26,-109,-25,35,-28,35,-29,-27,87,-19,87,-114,-31,-115,-30,-50,-42,-113,-39,-53,-110,-48,-49,]),'FLOAT':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,55,83,132,133,136,141,163,173,174,178,180,183,187,189,191,],[13,36,-108,-24,-38,-37,-26,-109,-25,36,-28,36,-29,-27,88,-19,88,-114,-31,-115,-30,-50,-42,-113,-39,-53,-110,-48,-49,]),'LIST':([7,19,20,24,26,27,28,30,32,33,38,39,83,133,136,141,163,173,174,178,180,183,187,189,191,],[37,-108,-24,-38,-37,-26,-109,-25,37,-28,-29,-27,-19,-114,-31,-115,-30,-50,-42,-113,-39,-53,-110,-48,-49,]),'C_S_BRACKET':([63,64,66,67,71,76,78,99,101,102,112,122,143,157,175,176,185,190,192,],[98,-105,-107,-106,-104,-107,-101,-99,-102,-100,-98,-103,168,-45,184,-47,-44,-47,-46,]),'BOOL':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,55,83,132,133,136,141,163,173,174,178,180,183,187,189,191,],[14,21,-108,-24,-38,-37,-26,-109,-25,21,-28,21,-29,-27,89,-19,89,-114,-31,-115,-30,-50,-42,-113,-39,-53,-110,-48,-49,]),'LESS_EQUAL':([64,66,67,68,69,71,73,74,75,76,77,78,80,99,101,102,112,117,119,121,122,125,147,151,165,168,169,170,172,181,],[-105,-107,-106,-91,109,-104,-94,-92,-71,-107,-83,-101,-77,-99,-102,-100,-98,-97,-93,-73,-103,-79,-70,-76,-86,-95,-96,-72,-78,-84,]),'MAIN':([0,],[3,]),'OR':([64,66,67,68,69,71,72,73,74,75,76,77,78,80,99,101,102,108,112,117,119,121,122,125,140,147,151,165,166,168,169,170,172,181,],[-105,-107,-106,-91,-59,-104,116,-94,-92,-71,-107,-83,-101,-77,-99,-102,-100,-57,-98,-97,-93,-73,-103,-79,-69,-70,-76,-86,-58,-95,-96,-72,-78,-84,]),'MOD':([64,66,67,68,71,73,74,76,77,78,80,99,101,102,112,117,119,122,125,165,168,169,181,],[-105,-107,-106,-91,-104,-94,-92,-107,-83,-101,-77,-99,-102,-100,-98,-97,-93,-103,154,-86,-95,-96,-84,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersloop':([90,159,],[131,177,]),'parametersinputloop':([79,149,],[123,171,]),'functionorlist':([73,],[119,]),'logic_op_quadruple':([142,],[167,]),'optionalconstants':([176,190,],[185,192,]),'add_int_constant_to_dict':([71,],[112,]),'expressionoptional':([72,],[114,]),'equals_quadruple':([96,138,],[137,164,]),'add_o_parenthesis':([65,],[100,]),'exploop':([121,],[147,]),'end_while':([178,],[187,]),'divmult':([125,],[153,]),'addsub':([121,],[148,]),'logicop':([72,],[115,]),'relop_quadruple':([140,],[166,]),'functionloop':([1,4,],[6,9,]),'whileloop':([7,32,],[19,19,]),'add_c_parenthesis':([165,],[181,]),'parameters':([55,],[86,]),'termloop':([125,],[151,]),'fact':([49,50,52,57,58,60,97,100,110,115,120,124,148,153,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'add_string_constant_to_dict':([67,],[102,]),'add_to_stack':([73,],[117,]),'init':([7,32,],[20,20,]),'program':([0,],[2,]),'listaccess':([29,46,],[48,62,]),'constants':([49,50,52,57,58,60,97,100,110,115,120,124,148,153,157,186,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,176,190,]),'parameterinit':([55,132,],[90,159,]),'expression2optional':([69,],[108,]),'var':([23,54,],[45,84,]),'var_assign':([7,32,],[22,22,]),'type':([7,32,37,],[23,23,54,]),'start_while':([17,],[42,]),'normalinit':([7,32,],[24,24,]),'function':([1,4,],[4,4,]),'print_quadruple':([94,],[135,]),'term_quadruple':([80,],[125,]),'listinit':([7,32,],[26,26,]),'parametersinput':([49,120,],[70,144,]),'writting':([7,32,],[27,27,]),'condition_while':([134,],[160,]),'else':([173,],[183,]),'varconstfunction':([49,50,52,57,58,60,97,100,110,115,120,124,148,153,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'start_printing':([43,162,],[58,58,]),'start_condition':([126,],[155,]),'functionreturn':([34,],[53,]),'timesloop':([7,32,],[28,28,]),'add_float_constant_to_dict':([64,],[99,]),'expression2':([49,50,52,57,58,60,97,100,115,120,124,],[72,72,72,72,72,72,72,72,142,72,72,]),'condition':([7,32,],[30,30,]),'add_equals':([44,61,],[60,97,]),'parametertype':([55,132,],[85,85,]),'statute':([7,32,],[32,32,]),'term':([49,50,52,57,58,60,97,100,110,115,120,124,148,153,],[75,75,75,75,75,75,75,75,75,75,75,75,75,172,]),'main':([0,],[1,]),'end_condition':([183,],[189,]),'assignation':([7,32,],[33,33,]),'statutesloop':([7,32,],[34,51,]),'varconst':([49,50,52,57,58,60,97,100,110,115,120,124,148,153,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'booleanconst':([49,50,52,57,58,60,97,100,110,115,120,124,148,153,157,186,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'exp_quadruple':([75,],[121,]),'relop':([69,],[110,]),'list':([128,],[156,]),'expression':([49,50,52,57,58,60,97,100,120,124,],[79,81,82,93,94,96,138,139,79,149,]),'listelements':([157,],[175,]),'optionalwritting':([135,],[161,]),'functioncall':([7,32,],[38,38,]),'block':([3,92,130,155,160,188,],[8,133,158,173,178,191,]),'exp':([49,50,52,57,58,60,97,100,110,115,120,124,148,],[69,69,69,69,69,69,69,69,140,69,69,69,170,]),'add_bool_constant_to_dict':([66,76,],[101,122,]),'writtingloop':([43,162,],[59,179,]),'else_condition':([182,],[188,]),'functiontype':([5,],[15,]),'loop':([7,32,],[39,39,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> main functionloop','program',2,'p_program','parser.py',13),
  ('main -> MAIN block','main',2,'p_main','parser.py',18),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',24),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',25),
  ('function -> FUNCTION functiontype ID O_PARENTHESIS parameters C_PARENTHESIS block','function',7,'p_function','parser.py',29),
  ('functiontype -> VOID','functiontype',1,'p_functiontype','parser.py',40),
  ('functiontype -> BOOL','functiontype',1,'p_functiontype','parser.py',41),
  ('functiontype -> INT','functiontype',1,'p_functiontype','parser.py',42),
  ('functiontype -> FLOAT','functiontype',1,'p_functiontype','parser.py',43),
  ('functiontype -> STRING','functiontype',1,'p_functiontype','parser.py',44),
  ('type -> BOOL','type',1,'p_type','parser.py',50),
  ('type -> INT','type',1,'p_type','parser.py',51),
  ('type -> FLOAT','type',1,'p_type','parser.py',52),
  ('type -> STRING','type',1,'p_type','parser.py',53),
  ('parametertype -> BOOL','parametertype',1,'p_parametertype','parser.py',59),
  ('parametertype -> INT','parametertype',1,'p_parametertype','parser.py',60),
  ('parametertype -> FLOAT','parametertype',1,'p_parametertype','parser.py',61),
  ('parametertype -> STRING','parametertype',1,'p_parametertype','parser.py',62),
  ('block -> O_BRACKET statutesloop functionreturn C_BRACKET','block',4,'p_block','parser.py',68),
  ('functionreturn -> RETURN expression SEMICOLON','functionreturn',3,'p_functionreturn','parser.py',72),
  ('functionreturn -> <empty>','functionreturn',0,'p_functionreturn','parser.py',73),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',78),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',79),
  ('statute -> init','statute',1,'p_statute','parser.py',83),
  ('statute -> condition','statute',1,'p_statute','parser.py',84),
  ('statute -> writting','statute',1,'p_statute','parser.py',85),
  ('statute -> loop','statute',1,'p_statute','parser.py',86),
  ('statute -> assignation','statute',1,'p_statute','parser.py',87),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',88),
  ('assignation -> var_assign EQUALS add_equals expression equals_quadruple SEMICOLON','assignation',6,'p_assignation','parser.py',92),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',97),
  ('start_printing -> <empty>','start_printing',0,'p_start_printing','parser.py',100),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',104),
  ('writtingloop -> start_printing expression print_quadruple optionalwritting','writtingloop',4,'p_writtingloop','parser.py',113),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',117),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',118),
  ('init -> listinit','init',1,'p_init','parser.py',121),
  ('init -> normalinit','init',1,'p_init','parser.py',122),
  ('normalinit -> type var EQUALS add_equals expression equals_quadruple SEMICOLON','normalinit',7,'p_normalinit','parser.py',126),
  ('equals_quadruple -> <empty>','equals_quadruple',0,'p_equals_quadruple','parser.py',129),
  ('add_equals -> <empty>','add_equals',0,'p_add_equals','parser.py',138),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',143),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',147),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',151),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',152),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',155),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',156),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS start_condition block else end_condition','condition',8,'p_condition','parser.py',160),
  ('else -> ELSE else_condition block','else',3,'p_else','parser.py',164),
  ('else -> <empty>','else',0,'p_else','parser.py',165),
  ('start_condition -> <empty>','start_condition',0,'p_start_condition','parser.py',168),
  ('else_condition -> <empty>','else_condition',0,'p_else_condition','parser.py',172),
  ('end_condition -> <empty>','end_condition',0,'p_end_condition','parser.py',176),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',181),
  ('expressionoptional -> logicop expression2 logic_op_quadruple','expressionoptional',3,'p_expressionoptional','parser.py',184),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',185),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',188),
  ('expression2optional -> relop exp relop_quadruple','expression2optional',3,'p_expression2optional','parser.py',191),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',192),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',196),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',197),
  ('logic_op_quadruple -> <empty>','logic_op_quadruple',0,'p_logic_op_quadruple','parser.py',201),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',208),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',209),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',210),
  ('relop -> LESS','relop',1,'p_relop','parser.py',211),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',212),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',213),
  ('relop_quadruple -> <empty>','relop_quadruple',0,'p_relop_quadruple','parser.py',217),
  ('exp -> term exp_quadruple exploop','exp',3,'p_exp','parser.py',224),
  ('exp_quadruple -> <empty>','exp_quadruple',0,'p_exp_quadruple','parser.py',227),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',234),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',235),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',238),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',239),
  ('term -> fact term_quadruple termloop','term',3,'p_term','parser.py',244),
  ('term_quadruple -> <empty>','term_quadruple',0,'p_term_quadruple','parser.py',247),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',254),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',255),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',259),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',260),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',261),
  ('fact -> varconst','fact',1,'p_fact','parser.py',266),
  ('fact -> O_PARENTHESIS add_o_parenthesis expression C_PARENTHESIS add_c_parenthesis','fact',5,'p_fact','parser.py',267),
  ('add_o_parenthesis -> <empty>','add_o_parenthesis',0,'p_add_o_parenthesis','parser.py',270),
  ('add_c_parenthesis -> <empty>','add_c_parenthesis',0,'p_add_c_parenthesis','parser.py',274),
  ('var_assign -> ID listaccess','var_assign',2,'p_var_assign','parser.py',278),
  ('var -> ID listaccess','var',2,'p_var','parser.py',288),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',304),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',305),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',309),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',310),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',313),
  ('add_to_stack -> <empty>','add_to_stack',0,'p_add_to_stack','parser.py',316),
  ('functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET','functionorlist',3,'p_functionorlist','parser.py',320),
  ('functionorlist -> O_PARENTHESIS parametersinput C_PARENTHESIS','functionorlist',3,'p_functionorlist','parser.py',321),
  ('functionorlist -> add_to_stack','functionorlist',1,'p_functionorlist','parser.py',322),
  ('constants -> INTCONST add_int_constant_to_dict','constants',2,'p_constants','parser.py',326),
  ('constants -> FLOATCONST add_float_constant_to_dict','constants',2,'p_constants','parser.py',327),
  ('constants -> STRINGCONST add_string_constant_to_dict','constants',2,'p_constants','parser.py',328),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',329),
  ('booleanconst -> TRUE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',333),
  ('booleanconst -> FALSE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',334),
  ('add_int_constant_to_dict -> <empty>','add_int_constant_to_dict',0,'p_add_int_constant_to_dict','parser.py',337),
  ('add_float_constant_to_dict -> <empty>','add_float_constant_to_dict',0,'p_add_float_constant_to_dict','parser.py',341),
  ('add_string_constant_to_dict -> <empty>','add_string_constant_to_dict',0,'p_add_string_constant_to_dict','parser.py',345),
  ('add_bool_constant_to_dict -> <empty>','add_bool_constant_to_dict',0,'p_add_bool_constant_to_dict','parser.py',349),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',354),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',355),
  ('whileloop -> WHILE start_while O_PARENTHESIS expression C_PARENTHESIS condition_while block end_while','whileloop',8,'p_whileloop','parser.py',359),
  ('start_while -> <empty>','start_while',0,'p_start_while','parser.py',362),
  ('condition_while -> <empty>','condition_while',0,'p_condition_while','parser.py',366),
  ('end_while -> <empty>','end_while',0,'p_end_while','parser.py',370),
  ('timesloop -> TIMES O_PARENTHESIS INTCONST C_PARENTHESIS block','timesloop',5,'p_timesloop','parser.py',375),
  ('functioncall -> ID O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON','functioncall',5,'p_functioncall','parser.py',379),
  ('parametersinput -> expression parametersinputloop','parametersinput',2,'p_parametersinput','parser.py',383),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',384),
  ('parametersinputloop -> COMMA expression parametersinputloop','parametersinputloop',3,'p_parametersinputloop','parser.py',388),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',389),
  ('parameters -> parameterinit parametersloop','parameters',2,'p_parameters','parser.py',393),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',394),
  ('parameterinit -> parametertype ID','parameterinit',2,'p_parameterinit','parser.py',397),
  ('parametersloop -> COMMA parameterinit parametersloop','parametersloop',3,'p_parametersloop','parser.py',408),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',409),
]
