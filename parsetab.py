
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'd\xa2\xaa(>\xb7EM\xab\x1a\xc7Lr\x9dg\xf7'
    
_lr_action_items = {'RETURN':([7,20,21,24,25,26,27,29,31,32,33,35,36,48,79,113,124,131,133,135,136,138,148,149,153,],[-16,-82,-17,-29,-28,-19,-83,-18,-16,-21,49,-22,-20,-15,-12,-23,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'LESS':([54,56,57,58,59,61,62,63,64,65,66,67,69,90,93,106,125,129,132,144,145,],[-77,-80,-78,-70,-76,-75,-71,-56,-81,-65,-79,100,-61,-72,-54,-59,-66,-55,-60,-73,-74,]),'VOID':([5,],[13,]),'O_PARENTHESIS':([17,18,19,28,30,37,39,40,41,46,47,49,55,61,73,85,86,88,91,92,94,95,96,97,98,99,100,102,103,105,107,108,109,112,118,],[38,39,40,46,47,52,55,55,55,55,55,55,55,91,55,-46,55,-47,55,-57,55,-58,-53,-48,-49,-50,-51,-52,55,-63,-62,55,-64,55,55,]),'ELSE':([79,138,],[-12,147,]),'FLOATCONST':([39,40,41,46,47,49,55,73,85,86,88,91,92,94,95,96,97,98,99,100,102,103,105,107,108,109,112,118,140,156,],[54,54,54,54,54,54,54,54,-46,54,-47,54,-57,54,-58,-53,-48,-49,-50,-51,-52,54,-63,-62,54,-64,54,54,54,54,]),'WHILE':([7,20,21,24,25,26,27,29,31,32,35,36,79,113,124,131,133,135,136,138,148,149,153,],[18,-82,-17,-29,-28,-19,-83,-18,18,-21,-22,-20,-12,-23,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'GREATER':([54,56,57,58,59,61,62,63,64,65,66,67,69,90,93,106,125,129,132,144,145,],[-77,-80,-78,-70,-76,-75,-71,-56,-81,-65,-79,98,-61,-72,-54,-59,-66,-55,-60,-73,-74,]),'C_BRACKET':([7,20,21,24,25,26,27,29,31,32,33,35,36,48,50,79,113,120,124,131,133,135,136,138,148,149,153,],[-16,-82,-17,-29,-28,-19,-83,-18,-16,-21,-14,-22,-20,-15,79,-12,-23,-13,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'PRINT':([7,20,21,24,25,26,27,29,31,32,35,36,79,113,124,131,133,135,136,138,148,149,153,],[19,-82,-17,-29,-28,-19,-83,-18,19,-21,-22,-20,-12,-23,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'C_PARENTHESIS':([46,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,75,76,77,81,84,87,90,91,93,101,106,111,117,123,125,126,128,129,130,132,134,137,142,144,145,146,157,159,],[-88,-92,83,-77,-80,-78,-70,-76,-42,-75,-71,-56,-81,-65,-79,-45,104,-61,110,-27,116,-90,119,122,125,-40,-72,-88,-54,-43,-59,-25,-87,-94,-66,-41,145,-55,-44,-60,-26,-90,-91,-73,-74,-89,-94,-93,]),'TRUE':([39,40,41,46,47,49,55,73,85,86,88,91,92,94,95,96,97,98,99,100,102,103,105,107,108,109,112,118,140,156,],[56,56,56,56,56,56,56,56,-46,56,-47,56,-57,56,-58,-53,-48,-49,-50,-51,-52,56,-63,-62,56,-64,56,56,56,56,]),'MINUS':([54,56,57,58,59,61,62,63,64,65,66,69,90,106,125,132,144,145,],[-77,-80,-78,-70,-76,-75,-71,95,-81,-65,-79,-61,-72,-59,-66,-60,-73,-74,]),'DIVIDE':([54,56,57,58,59,61,62,64,65,66,69,90,125,144,145,],[-77,-80,-78,-70,-76,-75,-71,-81,-65,-79,105,-72,-66,-73,-74,]),'O_BRACKET':([3,83,104,119,122,147,],[7,7,7,7,7,7,]),'EQUALITY':([54,56,57,58,59,61,62,63,64,65,66,67,69,90,93,106,125,129,132,144,145,],[-77,-80,-78,-70,-76,-75,-71,-56,-81,-65,-79,97,-61,-72,-54,-59,-66,-55,-60,-73,-74,]),'SEMICOLON':([54,56,57,58,59,60,61,62,63,64,65,66,67,69,72,78,87,90,93,101,106,110,114,116,125,126,129,130,132,139,144,145,154,],[-77,-80,-78,-70,-76,-42,-75,-71,-56,-81,-65,-79,-45,-61,113,120,-40,-72,-54,-43,-59,133,135,136,-66,-41,-55,-44,-60,149,-73,-74,-32,]),'STRINGCONST':([39,40,41,46,47,49,55,73,85,86,88,91,92,94,95,96,97,98,99,100,102,103,105,107,108,109,112,118,140,156,],[57,57,57,57,57,57,57,57,-46,57,-47,57,-57,57,-58,-53,-48,-49,-50,-51,-52,57,-63,-62,57,-64,57,57,57,57,]),'COMMA':([54,56,57,58,59,60,61,62,63,64,65,66,67,69,71,76,87,90,93,101,106,123,125,126,129,130,132,137,144,145,151,157,158,],[-77,-80,-78,-70,-76,-42,-75,-71,-56,-81,-65,-79,-45,-61,112,118,-40,-72,-54,-43,-59,143,-66,-41,-55,-44,-60,118,-73,-74,156,143,156,]),'SUM':([54,56,57,58,59,61,62,63,64,65,66,69,90,106,125,132,144,145,],[-77,-80,-78,-70,-76,-75,-71,92,-81,-65,-79,-61,-72,-59,-66,-60,-73,-74,]),'$end':([1,2,4,6,8,9,79,141,],[-4,0,-4,-1,-2,-3,-12,-5,]),'FUNCTION':([1,4,8,79,141,],[5,5,-2,-12,-5,]),'DIFFERENT':([54,56,57,58,59,61,62,63,64,65,66,67,69,90,93,106,125,129,132,144,145,],[-77,-80,-78,-70,-76,-75,-71,-56,-81,-65,-79,96,-61,-72,-54,-59,-66,-55,-60,-73,-74,]),'STRING':([5,7,20,21,24,25,26,27,29,31,32,34,35,36,52,79,113,124,131,133,135,136,138,143,148,149,153,],[10,10,-82,-17,-29,-28,-19,-83,-18,10,-21,10,-22,-20,10,-12,-23,-85,-84,-24,-30,-86,-39,10,-37,-31,-38,]),'EQUALS':([22,28,42,43,45,80,115,],[41,-69,73,-69,-67,121,-68,]),'TIMES':([7,20,21,24,25,26,27,29,31,32,35,36,79,113,124,131,133,135,136,138,148,149,153,],[17,-82,-17,-29,-28,-19,-83,-18,17,-21,-22,-20,-12,-23,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'INTCONST':([38,39,40,41,44,46,47,49,55,73,85,86,88,89,91,92,94,95,96,97,98,99,100,102,103,105,107,108,109,112,118,140,156,],[53,59,59,59,74,59,59,59,59,59,-46,59,-47,127,59,-57,59,-58,-53,-48,-49,-50,-51,-52,59,-63,-62,59,-64,59,59,59,59,]),'O_S_BRACKET':([28,43,61,121,],[44,44,89,140,]),'ID':([7,10,11,12,13,14,15,16,20,21,23,24,25,26,27,29,31,32,35,36,39,40,41,46,47,49,51,55,73,79,82,85,86,88,91,92,94,95,96,97,98,99,100,102,103,105,107,108,109,112,113,118,124,131,133,135,136,138,148,149,152,153,],[28,-11,-9,-7,-6,-10,-8,37,-82,-17,43,-29,-28,-19,-83,-18,28,-21,-22,-20,61,61,61,61,61,61,43,61,61,-12,123,-46,61,-47,61,-57,61,-58,-53,-48,-49,-50,-51,-52,61,-63,-62,61,-64,61,-23,61,-85,-84,-24,-30,-86,-39,-37,-31,157,-38,]),'IF':([7,20,21,24,25,26,27,29,31,32,35,36,79,113,124,131,133,135,136,138,148,149,153,],[30,-82,-17,-29,-28,-19,-83,-18,30,-21,-22,-20,-12,-23,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'AND':([54,56,57,58,59,60,61,62,63,64,65,66,67,69,90,93,101,106,125,129,130,132,144,145,],[-77,-80,-78,-70,-76,85,-75,-71,-56,-81,-65,-79,-45,-61,-72,-54,-43,-59,-66,-55,-44,-60,-73,-74,]),'FALSE':([39,40,41,46,47,49,55,73,85,86,88,91,92,94,95,96,97,98,99,100,102,103,105,107,108,109,112,118,140,156,],[64,64,64,64,64,64,64,64,-46,64,-47,64,-57,64,-58,-53,-48,-49,-50,-51,-52,64,-63,-62,64,-64,64,64,64,64,]),'GREATER_EQUAL':([54,56,57,58,59,61,62,63,64,65,66,67,69,90,93,106,125,129,132,144,145,],[-77,-80,-78,-70,-76,-75,-71,-56,-81,-65,-79,99,-61,-72,-54,-59,-66,-55,-60,-73,-74,]),'MULTIPLY':([54,56,57,58,59,61,62,64,65,66,69,90,125,144,145,],[-77,-80,-78,-70,-76,-75,-71,-81,-65,-79,107,-72,-66,-73,-74,]),'INT':([5,7,20,21,24,25,26,27,29,31,32,34,35,36,52,79,113,124,131,133,135,136,138,143,148,149,153,],[11,11,-82,-17,-29,-28,-19,-83,-18,11,-21,11,-22,-20,11,-12,-23,-85,-84,-24,-30,-86,-39,11,-37,-31,-38,]),'FLOAT':([5,7,20,21,24,25,26,27,29,31,32,34,35,36,52,79,113,124,131,133,135,136,138,143,148,149,153,],[14,14,-82,-17,-29,-28,-19,-83,-18,14,-21,14,-22,-20,14,-12,-23,-85,-84,-24,-30,-86,-39,14,-37,-31,-38,]),'LIST':([7,20,21,24,25,26,27,29,31,32,35,36,79,113,124,131,133,135,136,138,148,149,153,],[34,-82,-17,-29,-28,-19,-83,-18,34,-21,-22,-20,-12,-23,-85,-84,-24,-30,-86,-39,-37,-31,-38,]),'C_S_BRACKET':([54,56,57,59,64,66,74,127,140,150,151,155,158,160,],[-77,-80,-78,-76,-81,-79,115,144,-34,154,-36,-33,-36,-35,]),'BOOL':([5,7,20,21,24,25,26,27,29,31,32,34,35,36,52,79,113,124,131,133,135,136,138,143,148,149,153,],[15,15,-82,-17,-29,-28,-19,-83,-18,15,-21,15,-22,-20,15,-12,-23,-85,-84,-24,-30,-86,-39,15,-37,-31,-38,]),'LESS_EQUAL':([54,56,57,58,59,61,62,63,64,65,66,67,69,90,93,106,125,129,132,144,145,],[-77,-80,-78,-70,-76,-75,-71,-56,-81,-65,-79,102,-61,-72,-54,-59,-66,-55,-60,-73,-74,]),'MAIN':([0,],[3,]),'OR':([54,56,57,58,59,60,61,62,63,64,65,66,67,69,90,93,101,106,125,129,130,132,144,145,],[-77,-80,-78,-70,-76,88,-75,-71,-56,-81,-65,-79,-45,-61,-72,-54,-43,-59,-66,-55,-44,-60,-73,-74,]),'MOD':([54,56,57,58,59,61,62,64,65,66,69,90,125,144,145,],[-77,-80,-78,-70,-76,-75,-71,-81,-65,-79,109,-72,-66,-73,-74,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersloop':([123,157,],[142,159,]),'parametersinputloop':([76,137,],[117,146,]),'functionorlist':([61,],[90,]),'optionalconstants':([151,158,],[155,160,]),'expressionoptional':([60,],[87,]),'exploop':([63,],[93,]),'divmult':([69,],[108,]),'addsub':([63,],[94,]),'logicop':([60,],[86,]),'functionloop':([1,4,],[6,9,]),'whileloop':([7,31,],[20,20,]),'parameters':([52,],[81,]),'termloop':([69,],[106,]),'fact':([39,40,41,46,47,49,55,73,86,91,94,103,108,112,118,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'init':([7,31,],[21,21,]),'program':([0,],[2,]),'listaccess':([28,43,],[45,45,]),'constants':([39,40,41,46,47,49,55,73,86,91,94,103,108,112,118,140,156,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,151,158,]),'expression2optional':([67,],[101,]),'var':([7,23,31,51,],[22,42,22,80,]),'main':([0,],[1,]),'type':([5,7,31,34,52,143,],[12,23,23,51,82,152,]),'normalinit':([7,31,],[24,24,]),'function':([1,4,],[4,4,]),'listinit':([7,31,],[25,25,]),'parametersinput':([46,91,],[75,128,]),'writting':([7,31,],[26,26,]),'else':([138,],[148,]),'varconstfunction':([39,40,41,46,47,49,55,73,86,91,94,103,108,112,118,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'functionreturn':([33,],[50,]),'timesloop':([7,31,],[27,27,]),'expression2':([39,40,41,46,47,49,55,73,86,91,112,118,],[60,60,60,60,60,60,60,60,126,60,60,60,]),'condition':([7,31,],[29,29,]),'relop':([67,],[103,]),'statute':([7,31,],[31,31,]),'term':([39,40,41,46,47,49,55,73,86,91,94,103,108,112,118,],[63,63,63,63,63,63,63,63,63,63,63,63,132,63,63,]),'assignation':([7,31,],[32,32,]),'statutesloop':([7,31,],[33,48,]),'varconst':([39,40,41,46,47,49,55,73,86,91,94,103,108,112,118,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'booleanconst':([39,40,41,46,47,49,55,73,86,91,94,103,108,112,118,140,156,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'list':([121,],[139,]),'expression':([39,40,41,46,47,49,55,73,91,112,118,],[68,71,72,76,77,78,84,114,76,71,137,]),'listelements':([140,],[150,]),'optionalwritting':([71,],[111,]),'functioncall':([7,31,],[35,35,]),'block':([3,83,104,119,122,147,],[8,124,131,138,141,153,]),'exp':([39,40,41,46,47,49,55,73,86,91,94,103,112,118,],[67,67,67,67,67,67,67,67,67,67,129,130,67,67,]),'writtingloop':([40,112,],[70,134,]),'functiontype':([5,],[16,]),'loop':([7,31,],[36,36,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> main functionloop','program',2,'p_program','parser.py',13),
  ('main -> MAIN block','main',2,'p_main','parser.py',18),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',22),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',23),
  ('function -> FUNCTION functiontype ID O_PARENTHESIS parameters C_PARENTHESIS block','function',7,'p_function','parser.py',26),
  ('functiontype -> VOID','functiontype',1,'p_functiontype','parser.py',31),
  ('functiontype -> type','functiontype',1,'p_functiontype','parser.py',32),
  ('type -> BOOL','type',1,'p_type','parser.py',35),
  ('type -> INT','type',1,'p_type','parser.py',36),
  ('type -> FLOAT','type',1,'p_type','parser.py',37),
  ('type -> STRING','type',1,'p_type','parser.py',38),
  ('block -> O_BRACKET statutesloop functionreturn C_BRACKET','block',4,'p_block','parser.py',43),
  ('functionreturn -> RETURN expression SEMICOLON','functionreturn',3,'p_functionreturn','parser.py',47),
  ('functionreturn -> <empty>','functionreturn',0,'p_functionreturn','parser.py',48),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',52),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',53),
  ('statute -> init','statute',1,'p_statute','parser.py',56),
  ('statute -> condition','statute',1,'p_statute','parser.py',57),
  ('statute -> writting','statute',1,'p_statute','parser.py',58),
  ('statute -> loop','statute',1,'p_statute','parser.py',59),
  ('statute -> assignation','statute',1,'p_statute','parser.py',60),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',61),
  ('assignation -> var EQUALS expression SEMICOLON','assignation',4,'p_assignation','parser.py',65),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',70),
  ('writtingloop -> expression optionalwritting','writtingloop',2,'p_writtingloop','parser.py',74),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',78),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',79),
  ('init -> listinit','init',1,'p_init','parser.py',82),
  ('init -> normalinit','init',1,'p_init','parser.py',83),
  ('normalinit -> type var EQUALS expression SEMICOLON','normalinit',5,'p_normalinit','parser.py',87),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',93),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',97),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',101),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',102),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',105),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',106),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS block else','condition',6,'p_condition','parser.py',110),
  ('else -> ELSE block','else',2,'p_else','parser.py',114),
  ('else -> <empty>','else',0,'p_else','parser.py',115),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',119),
  ('expressionoptional -> logicop expression2','expressionoptional',2,'p_expressionoptional','parser.py',122),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',123),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',126),
  ('expression2optional -> relop exp','expression2optional',2,'p_expression2optional','parser.py',129),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',130),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',134),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',135),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',139),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',140),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',141),
  ('relop -> LESS','relop',1,'p_relop','parser.py',142),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',143),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',144),
  ('exp -> term exploop','exp',2,'p_exp','parser.py',148),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',152),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',153),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',156),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',157),
  ('term -> fact termloop','term',2,'p_term','parser.py',160),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',164),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',165),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',168),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',169),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',170),
  ('fact -> varconst','fact',1,'p_fact','parser.py',173),
  ('fact -> O_PARENTHESIS expression C_PARENTHESIS','fact',3,'p_fact','parser.py',174),
  ('var -> ID listaccess','var',2,'p_var','parser.py',178),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',188),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',189),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',192),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',193),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',196),
  ('functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET','functionorlist',3,'p_functionorlist','parser.py',199),
  ('functionorlist -> O_PARENTHESIS parametersinput C_PARENTHESIS','functionorlist',3,'p_functionorlist','parser.py',200),
  ('functionorlist -> <empty>','functionorlist',0,'p_functionorlist','parser.py',201),
  ('constants -> INTCONST','constants',1,'p_constants','parser.py',205),
  ('constants -> FLOATCONST','constants',1,'p_constants','parser.py',206),
  ('constants -> STRINGCONST','constants',1,'p_constants','parser.py',207),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',208),
  ('booleanconst -> TRUE','booleanconst',1,'p_booleanconst','parser.py',212),
  ('booleanconst -> FALSE','booleanconst',1,'p_booleanconst','parser.py',213),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',217),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',218),
  ('whileloop -> WHILE O_PARENTHESIS expression C_PARENTHESIS block','whileloop',5,'p_whileloop','parser.py',222),
  ('timesloop -> TIMES O_PARENTHESIS INTCONST C_PARENTHESIS block','timesloop',5,'p_timesloop','parser.py',226),
  ('functioncall -> ID O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON','functioncall',5,'p_functioncall','parser.py',230),
  ('parametersinput -> expression parametersinputloop','parametersinput',2,'p_parametersinput','parser.py',234),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',235),
  ('parametersinputloop -> COMMA expression parametersinputloop','parametersinputloop',3,'p_parametersinputloop','parser.py',238),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',239),
  ('parameters -> type ID parametersloop','parameters',3,'p_parameters','parser.py',242),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',243),
  ('parametersloop -> COMMA type ID parametersloop','parametersloop',4,'p_parametersloop','parser.py',247),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',248),
]
