
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'N\xaa\xe7`\xe3/\x18rc*\xd9\xbe \x99\xca '
    
_lr_action_items = {'RETURN':([46,48,171,193,195,201,209,210,215,220,222,224,225,226,227,229,231,232,246,271,274,275,276,277,279,280,282,],[-62,-61,-55,-54,-154,219,-63,-152,-66,219,-142,-141,-48,-51,-50,-49,-52,-53,-32,-151,-79,-149,-147,-82,-144,-75,-78,]),'LESS':([86,88,89,90,91,92,94,95,96,97,98,99,101,116,118,119,128,134,135,137,138,140,161,165,182,187,189,203,204,205,233,234,],[-136,-138,-137,-121,124,-135,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-129,-127,-123,-102,-134,-108,-99,-105,-115,-101,-107,-113,-154,-120,-126,-125,]),'VOID':([4,],[8,]),'O_PARENTHESIS':([23,25,31,32,36,37,38,39,40,51,53,62,64,65,66,67,70,74,87,94,102,103,105,106,107,108,117,120,121,122,123,124,126,127,129,131,132,133,145,157,158,159,160,162,164,166,167,168,192,200,212,218,219,221,230,242,243,245,247,251,253,255,],[-22,-22,-19,-21,-21,63,64,-145,66,-153,74,78,87,102,-56,-65,107,87,-114,-153,87,87,87,-65,87,87,87,-97,-92,-93,-94,-95,-96,87,-89,87,-90,157,87,87,87,-103,-104,87,-110,-109,87,-111,-56,87,87,242,-35,-145,247,87,87,255,87,87,87,87,]),'ELSE':([76,198,246,274,],[-31,213,-32,278,]),'FLOATCONST':([64,66,67,74,87,102,103,105,106,107,108,117,120,121,122,123,124,126,127,129,131,132,145,157,158,159,160,162,164,166,167,168,192,200,212,219,242,243,247,251,253,255,],[86,-56,-65,86,-114,86,86,86,-65,86,86,86,-97,-92,-93,-94,-95,-96,86,-89,86,-90,86,86,86,-103,-104,86,-110,-109,86,-111,-56,86,86,-35,86,86,86,86,86,86,]),'WHILE':([33,41,42,46,48,49,50,52,54,55,60,61,76,171,188,193,195,198,201,206,207,209,210,214,215,220,222,224,225,226,227,229,231,232,235,239,246,249,271,274,275,276,277,279,280,282,],[39,-139,-42,-62,-61,-44,-140,-43,39,-46,-47,-45,-31,-55,-151,-54,-154,-77,221,-148,-147,-63,-152,-82,-66,221,-142,-141,-48,-51,-50,-49,-52,-53,-143,-74,-32,-76,-151,-79,-149,-147,-82,-144,-75,-78,]),'GREATER':([86,88,89,90,91,92,94,95,96,97,98,99,101,116,118,119,128,134,135,137,138,140,161,165,182,187,189,203,204,205,233,234,],[-136,-138,-137,-121,122,-135,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-129,-127,-123,-102,-134,-108,-99,-105,-115,-101,-107,-113,-154,-120,-126,-125,]),'C_BRACKET':([33,41,42,46,48,49,50,52,54,55,56,60,61,75,76,86,88,89,90,91,92,93,94,95,96,97,98,99,101,116,118,119,125,128,130,134,135,137,138,140,155,156,161,165,171,182,183,184,187,188,189,193,195,198,201,203,204,205,206,207,209,210,214,215,220,222,223,224,225,226,227,228,229,231,232,233,234,235,239,244,246,249,260,261,271,272,274,275,276,277,279,280,282,],[-38,-139,-42,-62,-61,-44,-140,-43,-38,-46,76,-47,-45,-37,-31,-136,-138,-137,-121,-88,-135,-85,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-86,-129,-83,-127,-123,-102,-134,-108,-98,-91,-99,-105,-55,-115,-87,-84,-101,-151,-107,-54,-154,-77,-41,-113,-154,-120,-148,-147,-63,-152,-82,-66,-41,-142,246,-141,-48,-51,-50,-40,-49,-52,-53,-126,-125,-143,-74,-39,-32,-76,267,-34,-151,-33,-79,-149,-147,-82,-144,-75,-78,]),'PRINT':([33,41,42,46,48,49,50,52,54,55,60,61,76,171,188,193,195,198,201,206,207,209,210,214,215,220,222,224,225,226,227,229,231,232,235,239,246,249,271,274,275,276,277,279,280,282,],[40,-139,-42,-62,-61,-44,-140,-43,40,-46,-47,-45,-31,-55,-151,-54,-154,-77,40,-148,-147,-63,-152,-82,-66,40,-142,-141,-48,-51,-50,-49,-52,-53,-143,-74,-32,-76,-151,-79,-149,-147,-82,-144,-75,-78,]),'C_PARENTHESIS':([63,78,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,107,109,111,112,114,116,118,119,125,128,130,134,135,137,138,140,141,142,146,147,153,154,155,156,157,161,165,170,175,181,182,183,184,185,187,189,191,196,203,204,205,208,211,233,234,236,237,248,252,256,257,262,264,],[-163,-163,113,-166,-136,-138,-137,-121,-88,-135,-85,-124,-122,-100,-138,-112,-132,139,-106,143,-156,149,151,-164,-162,-130,-133,-131,-86,-129,-83,-127,-123,-102,-134,-108,169,-57,174,-159,-166,182,-98,-91,-156,-99,-105,-60,-161,-165,-115,-87,-84,204,-101,-107,-58,-158,-113,-154,-120,-59,-160,-126,-125,-155,-159,-161,259,263,-158,268,-157,]),'TRUE':([64,66,67,74,87,102,103,105,106,107,108,117,120,121,122,123,124,126,127,129,131,132,145,157,158,159,160,162,164,166,167,168,192,200,212,219,242,243,247,251,253,255,],[88,-56,-65,88,-114,88,88,88,-65,88,88,88,-97,-92,-93,-94,-95,-96,88,-89,88,-90,88,88,88,-103,-104,88,-110,-109,88,-111,-56,88,88,-35,88,88,88,88,88,88,]),'MINUS':([86,88,89,90,92,94,95,96,97,98,99,101,116,118,119,128,134,135,137,138,140,165,182,189,203,204,205,233,234,],[-136,-138,-137,-121,-135,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-129,-127,-123,160,-134,-108,-105,-115,-107,-113,-154,-120,-126,-125,]),'DIVIDE':([86,88,89,90,92,94,95,97,98,99,101,116,118,119,128,134,135,138,140,182,203,204,205,233,234,],[-136,-138,-137,-121,-135,-124,-122,-138,-112,-132,-106,-130,-133,-131,-129,-127,-123,-134,164,-115,-113,-154,-120,-126,-125,]),'EQUALITY':([86,88,89,90,91,92,94,95,96,97,98,99,101,116,118,119,128,134,135,137,138,140,161,165,182,187,189,203,204,205,233,234,],[-136,-138,-137,-121,121,-135,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-129,-127,-123,-102,-134,-108,-99,-105,-115,-101,-107,-113,-154,-120,-126,-125,]),'SEMICOLON':([86,88,89,90,91,92,93,94,95,96,97,98,99,101,116,118,119,125,128,130,134,135,137,138,140,143,144,155,156,161,165,172,173,174,182,183,184,187,189,194,199,203,204,205,233,234,240,254,267,],[-136,-138,-137,-121,-88,-135,-85,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-86,-129,-83,-127,-123,-102,-134,-108,171,-64,-98,-91,-99,-105,193,-64,195,-115,-87,-84,-101,-107,209,215,-113,-154,-120,-126,-125,-67,261,272,]),'STRINGCONST':([64,66,67,74,87,102,103,105,106,107,108,117,120,121,122,123,124,126,127,129,131,132,145,157,158,159,160,162,164,166,167,168,192,200,212,219,242,243,247,251,253,255,],[89,-56,-65,89,-114,89,89,89,-65,89,89,89,-97,-92,-93,-94,-95,-96,89,-89,89,-90,89,89,89,-103,-104,89,-110,-109,89,-111,-56,89,89,-35,89,89,89,89,89,89,]),'COMMA':([85,86,88,89,90,91,92,93,94,95,96,97,98,99,101,112,116,118,119,125,128,130,134,135,137,138,140,142,147,153,155,156,161,165,170,175,182,183,184,187,189,196,203,204,205,217,233,234,237,241,248,257,258,265,],[115,-136,-138,-137,-121,-88,-135,-85,-124,-122,-100,-138,-112,-132,-106,-164,-130,-133,-131,-86,-129,-83,-127,-123,-102,-134,-108,-57,-159,115,-98,-91,-99,-105,192,-161,-115,-87,-84,-101,-107,212,-113,-154,-120,-73,-126,-125,-159,251,-161,212,-73,251,]),'O_S_BRACKET':([51,73,94,136,150,178,],[-128,108,-128,158,-68,200,]),'$end':([2,21,30,34,35,76,],[0,-3,-2,-6,-1,-31,]),'FUNCTION':([0,1,3,10,17,22,24,26,27,28,76,180,202,246,],[-4,4,4,-36,-10,-16,-12,-15,-13,-14,-31,-20,-18,-32,]),'DIFFERENT':([86,88,89,90,91,92,94,95,96,97,98,99,101,116,118,119,128,134,135,137,138,140,161,165,182,187,189,203,204,205,233,234,],[-136,-138,-137,-121,120,-135,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-129,-127,-123,-102,-134,-108,-99,-105,-115,-101,-107,-113,-154,-120,-126,-125,]),'STRING':([4,33,41,42,46,48,49,50,52,54,55,59,60,61,63,76,78,115,171,188,193,195,198,201,206,207,209,210,214,215,220,222,224,225,226,227,229,231,232,235,239,246,249,271,274,275,276,277,279,280,282,],[7,47,-139,-42,-62,-61,-44,-140,-43,47,-46,47,-47,-45,81,-31,81,81,-55,-151,-54,-154,-77,47,-148,-147,-63,-152,-82,-66,47,-142,-141,-48,-51,-50,-49,-52,-53,-143,-74,-32,-76,-151,-79,-149,-147,-82,-144,-75,-78,]),'EQUALS':([44,51,68,69,71,72,110,176,197,],[67,-124,106,-117,-119,-116,150,-120,-118,]),'TIMES':([33,41,42,46,48,49,50,52,54,55,60,61,76,171,188,193,195,198,201,206,207,209,210,214,215,220,222,224,225,226,227,229,231,232,235,239,246,249,271,274,275,276,277,279,280,282,],[38,-139,-42,-62,-61,-44,-140,-43,38,-46,-47,-45,-31,-55,-151,-54,-154,-77,218,-148,-147,-63,-152,-82,-66,218,-142,-141,-48,-51,-50,-49,-52,-53,-143,-74,-32,-76,-151,-79,-149,-147,-82,-144,-75,-78,]),'INTCONST':([64,66,67,74,87,102,103,105,106,107,108,117,120,121,122,123,124,126,127,129,131,132,145,157,158,159,160,162,164,166,167,168,192,200,212,219,242,243,247,251,253,255,],[92,-56,-65,92,-114,92,92,92,-65,92,92,92,-97,-92,-93,-94,-95,-96,92,-89,92,-90,92,92,92,-103,-104,92,-110,-109,92,-111,-56,92,92,-35,92,92,92,92,92,92,]),'O_BRACKET':([20,29,113,139,149,151,152,163,169,177,179,190,213,219,238,243,259,263,266,268,269,273,278,281,],[-7,33,-11,-150,-80,-11,33,33,-146,33,201,33,-81,-35,33,253,-150,-80,201,-146,201,201,-81,201,]),'ID':([7,8,9,11,12,14,15,16,18,19,33,41,42,43,45,46,47,48,49,50,52,54,55,57,58,60,61,64,66,67,74,76,77,79,80,81,83,84,87,102,103,105,106,107,108,117,120,121,122,123,124,126,127,129,131,132,145,157,158,159,160,162,164,166,167,168,171,188,192,193,195,198,200,201,206,207,209,210,212,214,215,219,220,222,224,225,226,227,229,231,232,235,239,242,243,246,247,249,251,253,255,271,274,275,276,277,279,280,282,],[-17,-17,-17,-17,-17,23,25,23,23,23,51,-139,-42,-23,69,-62,-26,-61,-44,-140,-43,51,-46,-24,-25,-47,-45,94,-56,-65,94,-31,110,112,-29,-30,-28,-27,-114,94,94,94,-65,94,94,94,-97,-92,-93,-94,-95,-96,94,-89,94,-90,94,94,94,-103,-104,94,-110,-109,94,-111,-55,-151,-56,-54,-154,-77,94,51,-148,-147,-63,-152,94,-82,-66,-35,51,-142,-141,-48,-51,-50,-49,-52,-53,-143,-74,94,94,-32,94,-76,94,94,94,-151,-79,-149,-147,-82,-144,-75,-78,]),'IF':([33,41,42,46,48,49,50,52,54,55,60,61,76,171,188,193,195,198,201,206,207,209,210,214,215,220,222,224,225,226,227,229,231,232,235,239,246,249,271,274,275,276,277,279,280,282,],[53,-139,-42,-62,-61,-44,-140,-43,53,-46,-47,-45,-31,-55,-151,-54,-154,-77,230,-148,-147,-63,-152,-82,-66,230,-142,-141,-48,-51,-50,-49,-52,-53,-143,-74,-32,-76,-151,-79,-149,-147,-82,-144,-75,-78,]),'AND':([86,88,89,90,91,92,93,94,95,96,97,98,99,101,116,118,119,125,128,134,135,137,138,140,155,161,165,182,183,187,189,203,204,205,233,234,],[-136,-138,-137,-121,-88,-135,129,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-86,-129,-127,-123,-102,-134,-108,-98,-99,-105,-115,-87,-101,-107,-113,-154,-120,-126,-125,]),'FALSE':([64,66,67,74,87,102,103,105,106,107,108,117,120,121,122,123,124,126,127,129,131,132,145,157,158,159,160,162,164,166,167,168,192,200,212,219,242,243,247,251,253,255,],[97,-56,-65,97,-114,97,97,97,-65,97,97,97,-97,-92,-93,-94,-95,-96,97,-89,97,-90,97,97,97,-103,-104,97,-110,-109,97,-111,-56,97,97,-35,97,97,97,97,97,97,]),'GREATER_EQUAL':([86,88,89,90,91,92,94,95,96,97,98,99,101,116,118,119,128,134,135,137,138,140,161,165,182,187,189,203,204,205,233,234,],[-136,-138,-137,-121,123,-135,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-129,-127,-123,-102,-134,-108,-99,-105,-115,-101,-107,-113,-154,-120,-126,-125,]),'MULTIPLY':([86,88,89,90,92,94,95,97,98,99,101,116,118,119,128,134,135,138,140,182,203,204,205,233,234,],[-136,-138,-137,-121,-135,-124,-122,-138,-112,-132,-106,-130,-133,-131,-129,-127,-123,-134,166,-115,-113,-154,-120,-126,-125,]),'INT':([4,33,41,42,46,48,49,50,52,54,55,59,60,61,63,76,78,115,171,188,193,195,198,201,206,207,209,210,214,215,220,222,224,225,226,227,229,231,232,235,239,246,249,271,274,275,276,277,279,280,282,],[12,57,-139,-42,-62,-61,-44,-140,-43,57,-46,57,-47,-45,83,-31,83,83,-55,-151,-54,-154,-77,57,-148,-147,-63,-152,-82,-66,57,-142,-141,-48,-51,-50,-49,-52,-53,-143,-74,-32,-76,-151,-79,-149,-147,-82,-144,-75,-78,]),'SUM':([86,88,89,90,92,94,95,96,97,98,99,101,116,118,119,128,134,135,137,138,140,165,182,189,203,204,205,233,234,],[-136,-138,-137,-121,-135,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-129,-127,-123,159,-134,-108,-105,-115,-107,-113,-154,-120,-126,-125,]),'FLOAT':([4,33,41,42,46,48,49,50,52,54,55,59,60,61,63,76,78,115,171,188,193,195,198,201,206,207,209,210,214,215,220,222,224,225,226,227,229,231,232,235,239,246,249,271,274,275,276,277,279,280,282,],[9,58,-139,-42,-62,-61,-44,-140,-43,58,-46,58,-47,-45,80,-31,80,80,-55,-151,-54,-154,-77,58,-148,-147,-63,-152,-82,-66,58,-142,-141,-48,-51,-50,-49,-52,-53,-143,-74,-32,-76,-151,-79,-149,-147,-82,-144,-75,-78,]),'LIST':([33,41,42,46,48,49,50,52,54,55,60,61,76,171,188,193,195,198,201,206,207,209,210,214,215,220,222,224,225,226,227,229,231,232,235,239,246,249,271,274,275,276,277,279,280,282,],[59,-139,-42,-62,-61,-44,-140,-43,59,-46,-47,-45,-31,-55,-151,-54,-154,-77,59,-148,-147,-63,-152,-82,-66,59,-142,-141,-48,-51,-50,-49,-52,-53,-143,-74,-32,-76,-151,-79,-149,-147,-82,-144,-75,-78,]),'C_S_BRACKET':([86,88,89,90,91,92,93,94,95,96,97,98,99,101,116,118,119,125,128,130,134,135,137,138,140,148,155,156,161,165,182,183,184,186,187,189,200,203,204,205,216,217,233,234,241,250,258,265,270,],[-136,-138,-137,-121,-88,-135,-85,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-86,-129,-83,-127,-123,-102,-134,-108,176,-98,-91,-99,-105,-115,-87,-84,205,-101,-107,-70,-113,-154,-120,240,-73,-126,-125,-72,-69,-73,-72,-71,]),'BOOL':([4,33,41,42,46,48,49,50,52,54,55,59,60,61,63,76,78,115,171,188,193,195,198,201,206,207,209,210,214,215,220,222,224,225,226,227,229,231,232,235,239,246,249,271,274,275,276,277,279,280,282,],[11,43,-139,-42,-62,-61,-44,-140,-43,43,-46,43,-47,-45,84,-31,84,84,-55,-151,-54,-154,-77,43,-148,-147,-63,-152,-82,-66,43,-142,-141,-48,-51,-50,-49,-52,-53,-143,-74,-32,-76,-151,-79,-149,-147,-82,-144,-75,-78,]),'LESS_EQUAL':([86,88,89,90,91,92,94,95,96,97,98,99,101,116,118,119,128,134,135,137,138,140,161,165,182,187,189,203,204,205,233,234,],[-136,-138,-137,-121,126,-135,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-129,-127,-123,-102,-134,-108,-99,-105,-115,-101,-107,-113,-154,-120,-126,-125,]),'MAIN':([0,1,3,5,6,10,13,17,22,24,26,27,28,76,180,202,246,],[-4,-9,-9,-5,-8,-36,20,-10,-16,-12,-15,-13,-14,-31,-20,-18,-32,]),'OR':([86,88,89,90,91,92,93,94,95,96,97,98,99,101,116,118,119,125,128,134,135,137,138,140,155,161,165,182,183,187,189,203,204,205,233,234,],[-136,-138,-137,-121,-88,-135,132,-124,-122,-100,-138,-112,-132,-106,-130,-133,-131,-86,-129,-127,-123,-102,-134,-108,-98,-99,-105,-115,-87,-101,-107,-113,-154,-120,-126,-125,]),'MOD':([86,88,89,90,92,94,95,97,98,99,101,116,118,119,128,134,135,138,140,182,203,204,205,233,234,],[-136,-138,-137,-121,-135,-124,-122,-138,-112,-132,-106,-130,-133,-131,-129,-127,-123,-134,168,-115,-113,-154,-120,-126,-125,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersinputloop':([196,257,],[211,264,]),'function_end':([10,],[17,]),'functionstatutesloop':([201,220,],[223,244,]),'whileloop':([33,54,],[41,41,]),'parameters':([63,78,],[82,111,]),'check_function_exists':([51,94,],[70,133,]),'add_string_constant_to_dict':([89,],[119,]),'program':([0,],[2,]),'functioncondition':([201,220,],[229,229,]),'add_function_var_to_stack':([219,],[243,]),'main':([13,],[21,]),'start_condition':([149,263,],[177,269,]),'listinit':([33,54,201,220,],[48,48,48,48,]),'functionloops':([201,220,],[226,226,]),'varconstfunction':([64,74,102,103,105,107,108,117,127,131,145,157,158,162,167,200,212,242,243,247,251,253,255,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'add_float_constant_to_dict':([86,],[116,]),'expression2':([64,74,102,103,105,107,108,117,131,145,157,158,200,212,242,243,247,251,253,255,],[93,93,93,93,93,93,93,93,156,93,93,93,93,93,93,93,93,93,93,93,]),'condition':([33,54,],[52,52,]),'term':([64,74,102,103,105,107,108,117,127,131,145,157,158,162,167,200,212,242,243,247,251,253,255,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,189,96,96,96,96,96,96,96,96,]),'end_condition':([214,277,],[239,280,]),'assignation':([33,54,201,220,],[55,55,231,231,]),'list':([178,],[199,]),'functionblock':([179,266,269,273,281,],[202,271,274,276,282,]),'normalinit':([33,54,201,220,],[46,46,46,46,]),'term_quadruple':([101,],[140,]),'add_function_id_to_options':([23,25,],[31,32,]),'add_list_index_to_stack':([176,205,],[197,234,]),'add_function_to_global_variables':([31,],[36,]),'start_list':([150,],[178,]),'functionloop':([1,3,],[5,6,]),'termloop':([140,],[165,]),'start_times':([139,259,],[163,266,]),'parametersinput':([107,157,],[146,185,]),'generate_gosub':([195,204,],[210,233,]),'generate_main_goto':([0,],[1,]),'end_times':([188,271,],[206,275,]),'optionallist':([241,265,],[250,270,]),'add_c_parenthesis':([182,],[203,]),'check_current_quadruple':([32,36,],[37,62,]),'end_while':([207,276,],[235,279,]),'functionelse':([274,],[277,]),'check_params_order':([211,],[236,]),'statutesloop':([33,54,],[56,75,]),'function_with_return_def':([14,16,18,19,],[22,26,27,28,]),'add_int_constant_to_dict':([92,],[128,]),'exp_quadruple':([96,],[137,]),'fill_main_goto':([5,],[13,]),'writtingloop':([66,192,],[104,208,]),'expression':([64,74,102,103,105,107,108,117,145,157,158,200,212,242,243,247,251,253,255,],[100,109,141,142,144,147,148,154,173,147,186,217,237,252,254,256,258,260,262,]),'block':([29,152,163,177,190,238,],[34,180,188,198,207,249,]),'expressionoptional':([93,],[130,]),'start_main':([20,],[29,]),'functionstatute':([201,220,],[220,220,]),'functiontimesloop':([201,220,],[222,222,]),'relop_quadruple':([155,],[183,]),'global_memory_needed':([30,],[35,]),'print_quadruple':([142,],[170,]),'add_function_init_to_dict':([113,151,],[152,179,]),'add_bool_constant_to_dict':([88,97,],[118,138,]),'init':([33,54,201,220,],[42,42,225,225,]),'add_to_stack':([51,94,],[71,134,]),'functionwhileloop':([201,220,],[224,224,]),'listaccess':([51,],[72,]),'var':([45,],[68,]),'type':([33,54,59,201,220,],[45,45,77,45,45,]),'start_while':([39,221,],[65,245,]),'function':([1,3,],[3,3,]),'writting':([33,54,201,220,],[49,49,227,227,]),'condition_while':([169,268,],[190,273,]),'else':([198,],[214,]),'start_printing':([66,192,],[103,103,]),'functionreturn':([201,220,],[228,228,]),'generate_list_assignation':([217,258,],[241,265,]),'generate_parameter_quadruple':([175,248,],[196,257,]),'add_equals':([67,106,],[105,145,]),'varconst':([64,74,102,103,105,107,108,117,127,131,145,157,158,162,167,200,212,242,243,247,251,253,255,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'logic_op_quadruple':([156,],[184,]),'listelements':([200,],[216,]),'push_type_to_function_options':([147,237,],[175,248,]),'functionorlist':([94,],[135,]),'booleanconst':([64,74,102,103,105,107,108,117,127,131,145,157,158,162,167,200,212,242,243,247,251,253,255,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'add_list_variable':([51,94,],[73,136,]),'loop':([33,54,],[61,61,]),'parametersloop':([85,153,],[114,181,]),'equals_quadruple':([144,173,],[172,194,]),'add_o_parenthesis':([87,],[117,]),'exploop':([137,],[161,]),'addsub':([137,],[162,]),'logicop':([93,],[131,]),'parameterinit':([63,78,115,],[85,85,153,]),'function_head':([4,],[10,]),'expression2optional':([91,],[125,]),'divmult':([140,],[167,]),'var_assign':([33,54,201,220,],[44,44,44,44,]),'function_def':([15,],[24,]),'generate_end_all':([21,],[30,]),'timesloop':([33,54,],[50,50,]),'add_function_type_to_options':([7,8,9,11,12,],[14,15,16,18,19,]),'constants':([64,74,102,103,105,107,108,117,127,131,145,157,158,162,167,200,212,242,243,247,251,253,255,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'parametertype':([63,78,115,],[79,79,79,]),'statute':([33,54,],[54,54,]),'relop':([91,],[127,]),'optionalwritting':([170,],[191,]),'functioncall':([33,54,201,220,],[60,60,232,232,]),'exp':([64,74,102,103,105,107,108,117,127,131,145,157,158,162,200,212,242,243,247,251,253,255,],[91,91,91,91,91,91,91,91,155,91,91,91,91,187,91,91,91,91,91,91,91,91,]),'else_condition':([213,278,],[238,281,]),'fact':([64,74,102,103,105,107,108,117,127,131,145,157,158,162,167,200,212,242,243,247,251,253,255,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> generate_main_goto functionloop fill_main_goto main generate_end_all global_memory_needed','program',6,'p_program','parser.py',14),
  ('global_memory_needed -> <empty>','global_memory_needed',0,'p_global_memory_needed','parser.py',18),
  ('generate_end_all -> <empty>','generate_end_all',0,'p_generate_end_all','parser.py',22),
  ('generate_main_goto -> <empty>','generate_main_goto',0,'p_generate_main_goto','parser.py',26),
  ('fill_main_goto -> <empty>','fill_main_goto',0,'p_fill_main_goto','parser.py',30),
  ('main -> MAIN start_main block','main',3,'p_main','parser.py',35),
  ('start_main -> <empty>','start_main',0,'p_start_main','parser.py',39),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',44),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',45),
  ('function -> FUNCTION function_head function_end','function',3,'p_function','parser.py',49),
  ('add_function_init_to_dict -> <empty>','add_function_init_to_dict',0,'p_add_function_init_to_dict','parser.py',62),
  ('function_head -> VOID add_function_type_to_options function_def','function_head',3,'p_function_head','parser.py',68),
  ('function_head -> BOOL add_function_type_to_options function_with_return_def','function_head',3,'p_function_head','parser.py',69),
  ('function_head -> INT add_function_type_to_options function_with_return_def','function_head',3,'p_function_head','parser.py',70),
  ('function_head -> FLOAT add_function_type_to_options function_with_return_def','function_head',3,'p_function_head','parser.py',71),
  ('function_head -> STRING add_function_type_to_options function_with_return_def','function_head',3,'p_function_head','parser.py',72),
  ('add_function_type_to_options -> <empty>','add_function_type_to_options',0,'p_add_function_type_to_options','parser.py',76),
  ('function_with_return_def -> ID add_function_id_to_options add_function_to_global_variables check_current_quadruple O_PARENTHESIS parameters C_PARENTHESIS add_function_init_to_dict functionblock','function_with_return_def',9,'p_function_with_return_def','parser.py',81),
  ('add_function_to_global_variables -> <empty>','add_function_to_global_variables',0,'p_add_function_to_global_variables','parser.py',85),
  ('function_def -> ID add_function_id_to_options check_current_quadruple O_PARENTHESIS parameters C_PARENTHESIS add_function_init_to_dict block','function_def',8,'p_function_def','parser.py',89),
  ('check_current_quadruple -> <empty>','check_current_quadruple',0,'p_check_current_quadruple','parser.py',93),
  ('add_function_id_to_options -> <empty>','add_function_id_to_options',0,'p_add_function_id_to_options','parser.py',97),
  ('type -> BOOL','type',1,'p_type','parser.py',102),
  ('type -> INT','type',1,'p_type','parser.py',103),
  ('type -> FLOAT','type',1,'p_type','parser.py',104),
  ('type -> STRING','type',1,'p_type','parser.py',105),
  ('parametertype -> BOOL','parametertype',1,'p_parametertype','parser.py',111),
  ('parametertype -> INT','parametertype',1,'p_parametertype','parser.py',112),
  ('parametertype -> FLOAT','parametertype',1,'p_parametertype','parser.py',113),
  ('parametertype -> STRING','parametertype',1,'p_parametertype','parser.py',114),
  ('block -> O_BRACKET statutesloop C_BRACKET','block',3,'p_block','parser.py',120),
  ('functionblock -> O_BRACKET functionstatutesloop C_BRACKET','functionblock',3,'p_functionblock','parser.py',124),
  ('functionreturn -> RETURN add_function_var_to_stack O_BRACKET expression C_BRACKET SEMICOLON','functionreturn',6,'p_functionreturn','parser.py',128),
  ('functionreturn -> RETURN add_function_var_to_stack expression SEMICOLON','functionreturn',4,'p_functionreturn','parser.py',129),
  ('add_function_var_to_stack -> <empty>','add_function_var_to_stack',0,'p_add_function_var_to_stack','parser.py',135),
  ('function_end -> <empty>','function_end',0,'p_function_end','parser.py',139),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',145),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',146),
  ('functionstatutesloop -> functionstatute functionstatutesloop','functionstatutesloop',2,'p_functionstatutesloopp','parser.py',149),
  ('functionstatutesloop -> functionreturn','functionstatutesloop',1,'p_functionstatutesloopp','parser.py',150),
  ('functionstatutesloop -> <empty>','functionstatutesloop',0,'p_functionstatutesloopp','parser.py',151),
  ('statute -> init','statute',1,'p_statute','parser.py',155),
  ('statute -> condition','statute',1,'p_statute','parser.py',156),
  ('statute -> writting','statute',1,'p_statute','parser.py',157),
  ('statute -> loop','statute',1,'p_statute','parser.py',158),
  ('statute -> assignation','statute',1,'p_statute','parser.py',159),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',160),
  ('functionstatute -> init','functionstatute',1,'p_functionstatute','parser.py',163),
  ('functionstatute -> functioncondition','functionstatute',1,'p_functionstatute','parser.py',164),
  ('functionstatute -> writting','functionstatute',1,'p_functionstatute','parser.py',165),
  ('functionstatute -> functionloops','functionstatute',1,'p_functionstatute','parser.py',166),
  ('functionstatute -> assignation','functionstatute',1,'p_functionstatute','parser.py',167),
  ('functionstatute -> functioncall','functionstatute',1,'p_functionstatute','parser.py',168),
  ('assignation -> var_assign EQUALS add_equals expression equals_quadruple SEMICOLON','assignation',6,'p_assignation','parser.py',172),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',179),
  ('start_printing -> <empty>','start_printing',0,'p_start_printing','parser.py',184),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',188),
  ('writtingloop -> start_printing expression print_quadruple optionalwritting','writtingloop',4,'p_writtingloop','parser.py',197),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',201),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',202),
  ('init -> listinit','init',1,'p_init','parser.py',205),
  ('init -> normalinit','init',1,'p_init','parser.py',206),
  ('normalinit -> type var EQUALS add_equals expression equals_quadruple SEMICOLON','normalinit',7,'p_normalinit','parser.py',212),
  ('equals_quadruple -> <empty>','equals_quadruple',0,'p_equals_quadruple','parser.py',215),
  ('add_equals -> <empty>','add_equals',0,'p_add_equals','parser.py',224),
  ('listinit -> LIST type ID EQUALS start_list list SEMICOLON','listinit',7,'p_listinit','parser.py',229),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',239),
  ('start_list -> <empty>','start_list',0,'p_start_list','parser.py',242),
  ('listelements -> expression generate_list_assignation optionallist','listelements',3,'p_listelements','parser.py',249),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',250),
  ('optionallist -> COMMA expression generate_list_assignation optionallist','optionallist',4,'p_optionallist','parser.py',254),
  ('optionallist -> <empty>','optionallist',0,'p_optionallist','parser.py',255),
  ('generate_list_assignation -> <empty>','generate_list_assignation',0,'p_generate_list_assignation','parser.py',258),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS start_condition block else end_condition','condition',8,'p_condition','parser.py',265),
  ('functioncondition -> IF O_PARENTHESIS expression C_PARENTHESIS start_condition functionblock functionelse end_condition','functioncondition',8,'p_functioncondition','parser.py',268),
  ('else -> ELSE else_condition block','else',3,'p_else','parser.py',272),
  ('else -> <empty>','else',0,'p_else','parser.py',273),
  ('functionelse -> ELSE else_condition functionblock','functionelse',3,'p_functionelse','parser.py',276),
  ('functionelse -> <empty>','functionelse',0,'p_functionelse','parser.py',277),
  ('start_condition -> <empty>','start_condition',0,'p_start_condition','parser.py',281),
  ('else_condition -> <empty>','else_condition',0,'p_else_condition','parser.py',285),
  ('end_condition -> <empty>','end_condition',0,'p_end_condition','parser.py',289),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',294),
  ('expressionoptional -> logicop expression2 logic_op_quadruple','expressionoptional',3,'p_expressionoptional','parser.py',297),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',298),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',301),
  ('expression2optional -> relop exp relop_quadruple','expression2optional',3,'p_expression2optional','parser.py',304),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',305),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',309),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',310),
  ('logic_op_quadruple -> <empty>','logic_op_quadruple',0,'p_logic_op_quadruple','parser.py',314),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',321),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',322),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',323),
  ('relop -> LESS','relop',1,'p_relop','parser.py',324),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',325),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',326),
  ('relop_quadruple -> <empty>','relop_quadruple',0,'p_relop_quadruple','parser.py',330),
  ('exp -> term exp_quadruple exploop','exp',3,'p_exp','parser.py',337),
  ('exp_quadruple -> <empty>','exp_quadruple',0,'p_exp_quadruple','parser.py',340),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',347),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',348),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',351),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',352),
  ('term -> fact term_quadruple termloop','term',3,'p_term','parser.py',357),
  ('term_quadruple -> <empty>','term_quadruple',0,'p_term_quadruple','parser.py',360),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',367),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',368),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',372),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',373),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',374),
  ('fact -> varconst','fact',1,'p_fact','parser.py',379),
  ('fact -> O_PARENTHESIS add_o_parenthesis expression C_PARENTHESIS add_c_parenthesis','fact',5,'p_fact','parser.py',380),
  ('add_o_parenthesis -> <empty>','add_o_parenthesis',0,'p_add_o_parenthesis','parser.py',383),
  ('add_c_parenthesis -> <empty>','add_c_parenthesis',0,'p_add_c_parenthesis','parser.py',387),
  ('var_assign -> ID listaccess','var_assign',2,'p_var_assign','parser.py',391),
  ('var -> ID','var',1,'p_var','parser.py',403),
  ('listaccess -> add_list_variable O_S_BRACKET expression C_S_BRACKET add_list_index_to_stack','listaccess',5,'p_listaccess','parser.py',419),
  ('listaccess -> add_to_stack','listaccess',1,'p_listaccess','parser.py',420),
  ('add_list_index_to_stack -> <empty>','add_list_index_to_stack',0,'p_add_list_index_to_stack','parser.py',423),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',428),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',429),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',432),
  ('add_to_stack -> <empty>','add_to_stack',0,'p_add_to_stack','parser.py',435),
  ('functionorlist -> add_list_variable O_S_BRACKET expression C_S_BRACKET add_list_index_to_stack','functionorlist',5,'p_functionorlist','parser.py',439),
  ('functionorlist -> check_function_exists O_PARENTHESIS parametersinput C_PARENTHESIS generate_gosub','functionorlist',5,'p_functionorlist','parser.py',440),
  ('functionorlist -> add_to_stack','functionorlist',1,'p_functionorlist','parser.py',441),
  ('add_list_variable -> <empty>','add_list_variable',0,'p_add_list_variable','parser.py',444),
  ('constants -> INTCONST add_int_constant_to_dict','constants',2,'p_constants','parser.py',449),
  ('constants -> FLOATCONST add_float_constant_to_dict','constants',2,'p_constants','parser.py',450),
  ('constants -> STRINGCONST add_string_constant_to_dict','constants',2,'p_constants','parser.py',451),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',452),
  ('booleanconst -> TRUE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',456),
  ('booleanconst -> FALSE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',457),
  ('add_int_constant_to_dict -> <empty>','add_int_constant_to_dict',0,'p_add_int_constant_to_dict','parser.py',460),
  ('add_float_constant_to_dict -> <empty>','add_float_constant_to_dict',0,'p_add_float_constant_to_dict','parser.py',464),
  ('add_string_constant_to_dict -> <empty>','add_string_constant_to_dict',0,'p_add_string_constant_to_dict','parser.py',468),
  ('add_bool_constant_to_dict -> <empty>','add_bool_constant_to_dict',0,'p_add_bool_constant_to_dict','parser.py',472),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',477),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',478),
  ('functionloops -> functionwhileloop','functionloops',1,'p_functionloops','parser.py',481),
  ('functionloops -> functiontimesloop','functionloops',1,'p_functionloops','parser.py',482),
  ('whileloop -> WHILE start_while O_PARENTHESIS expression C_PARENTHESIS condition_while block end_while','whileloop',8,'p_whileloop','parser.py',486),
  ('functionwhileloop -> WHILE start_while O_PARENTHESIS expression C_PARENTHESIS condition_while functionblock end_while','functionwhileloop',8,'p_functionwhileloop','parser.py',489),
  ('start_while -> <empty>','start_while',0,'p_start_while','parser.py',492),
  ('condition_while -> <empty>','condition_while',0,'p_condition_while','parser.py',496),
  ('end_while -> <empty>','end_while',0,'p_end_while','parser.py',500),
  ('timesloop -> TIMES O_PARENTHESIS expression C_PARENTHESIS start_times block end_times','timesloop',7,'p_timesloop','parser.py',505),
  ('functiontimesloop -> TIMES O_PARENTHESIS expression C_PARENTHESIS start_times functionblock end_times','functiontimesloop',7,'p_functiontimesloop','parser.py',509),
  ('start_times -> <empty>','start_times',0,'p_start_times','parser.py',512),
  ('end_times -> <empty>','end_times',0,'p_end_times','parser.py',516),
  ('functioncall -> ID check_function_exists O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON generate_gosub','functioncall',7,'p_functioncall','parser.py',521),
  ('check_function_exists -> <empty>','check_function_exists',0,'p_check_function_exists','parser.py',526),
  ('generate_gosub -> <empty>','generate_gosub',0,'p_generate_gosub','parser.py',531),
  ('parametersinput -> expression push_type_to_function_options generate_parameter_quadruple parametersinputloop check_params_order','parametersinput',5,'p_parametersinput','parser.py',536),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',537),
  ('parametersinputloop -> COMMA expression push_type_to_function_options generate_parameter_quadruple parametersinputloop','parametersinputloop',5,'p_parametersinputloop','parser.py',541),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',542),
  ('push_type_to_function_options -> <empty>','push_type_to_function_options',0,'p_push_type_to_function_options','parser.py',545),
  ('check_params_order -> <empty>','check_params_order',0,'p_check_params_order','parser.py',549),
  ('generate_parameter_quadruple -> <empty>','generate_parameter_quadruple',0,'p_generate_parameter_quadruple','parser.py',553),
  ('parameters -> parameterinit parametersloop','parameters',2,'p_parameters','parser.py',558),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',559),
  ('parameterinit -> parametertype ID','parameterinit',2,'p_parameterinit','parser.py',562),
  ('parametersloop -> COMMA parameterinit parametersloop','parametersloop',3,'p_parametersloop','parser.py',573),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',574),
]
