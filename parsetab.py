
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xfa\x9f\xc3\xc7\xae9\x86[\xf3\xa1$V\xec\x94\xfd\xa2'
    
_lr_action_items = {'RETURN':([7,19,20,24,26,27,28,30,32,33,34,38,39,51,83,118,131,138,140,142,143,145,155,156,161,],[-19,-88,-20,-32,-31,-22,-89,-21,-19,-24,52,-25,-23,-18,-15,-26,-91,-90,-27,-33,-92,-42,-40,-34,-41,]),'LESS':([57,59,60,61,62,64,65,66,67,68,69,70,72,95,98,111,136,139,150,151,152,160,],[-83,-86,-84,-76,-82,-81,-77,-59,-87,-68,-85,105,-64,-78,-57,-62,-58,-63,-71,-79,-80,-69,]),'VOID':([5,],[12,]),'O_PARENTHESIS':([16,17,18,29,31,40,42,43,44,49,50,52,58,64,76,89,90,91,93,96,97,99,100,101,102,103,104,105,107,108,110,112,113,114,117,123,],[41,42,43,49,50,55,58,58,58,58,58,58,-70,96,58,58,-49,58,-50,58,-60,58,-61,-56,-51,-52,-53,-54,-55,58,-66,-65,58,-67,58,58,]),'ELSE':([83,145,],[-15,154,]),'FLOATCONST':([42,43,44,49,50,52,58,76,89,90,91,93,96,97,99,100,101,102,103,104,105,107,108,110,112,113,114,117,123,147,164,],[57,57,57,57,57,57,-70,57,57,-49,57,-50,57,-60,57,-61,-56,-51,-52,-53,-54,-55,57,-66,-65,57,-67,57,57,57,57,]),'WHILE':([7,19,20,24,26,27,28,30,32,33,38,39,83,118,131,138,140,142,143,145,155,156,161,],[17,-88,-20,-32,-31,-22,-89,-21,17,-24,-25,-23,-15,-26,-91,-90,-27,-33,-92,-42,-40,-34,-41,]),'GREATER':([57,59,60,61,62,64,65,66,67,68,69,70,72,95,98,111,136,139,150,151,152,160,],[-83,-86,-84,-76,-82,-81,-77,-59,-87,-68,-85,103,-64,-78,-57,-62,-58,-63,-71,-79,-80,-69,]),'C_BRACKET':([7,19,20,24,26,27,28,30,32,33,34,38,39,51,53,83,118,125,131,138,140,142,143,145,155,156,161,],[-19,-88,-20,-32,-31,-22,-89,-21,-19,-24,-17,-25,-23,-18,83,-15,-26,-16,-91,-90,-27,-33,-92,-42,-40,-34,-41,]),'PRINT':([7,19,20,24,26,27,28,30,32,33,38,39,83,118,131,138,140,142,143,145,155,156,161,],[18,-88,-20,-32,-31,-22,-89,-21,18,-24,-25,-23,-15,-26,-91,-90,-27,-33,-92,-42,-40,-34,-41,]),'C_PARENTHESIS':([49,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,85,87,92,95,96,98,106,111,116,122,128,129,132,133,135,136,137,139,141,144,149,150,151,152,153,159,160,],[-94,-98,88,-83,-86,-84,-76,-82,-45,-81,-77,-59,-87,-68,-85,-48,109,-64,115,-30,121,-96,124,127,-101,-43,-78,-94,-57,-46,-62,-28,-93,-99,-97,150,-44,152,-58,-47,-63,-29,-96,-101,-71,-79,-80,-95,-100,-69,]),'TRUE':([42,43,44,49,50,52,58,76,89,90,91,93,96,97,99,100,101,102,103,104,105,107,108,110,112,113,114,117,123,147,164,],[59,59,59,59,59,59,-70,59,59,-49,59,-50,59,-60,59,-61,-56,-51,-52,-53,-54,-55,59,-66,-65,59,-67,59,59,59,59,]),'MINUS':([57,59,60,61,62,64,65,66,67,68,69,72,95,111,139,150,151,152,160,],[-83,-86,-84,-76,-82,-81,-77,100,-87,-68,-85,-64,-78,-62,-63,-71,-79,-80,-69,]),'DIVIDE':([57,59,60,61,62,64,65,67,68,69,72,95,150,151,152,160,],[-83,-86,-84,-76,-82,-81,-77,-87,-68,-85,110,-78,-71,-79,-80,-69,]),'O_BRACKET':([3,88,109,124,127,154,],[7,7,7,7,7,7,]),'EQUALITY':([57,59,60,61,62,64,65,66,67,68,69,70,72,95,98,111,136,139,150,151,152,160,],[-83,-86,-84,-76,-82,-81,-77,-59,-87,-68,-85,102,-64,-78,-57,-62,-58,-63,-71,-79,-80,-69,]),'SEMICOLON':([57,59,60,61,62,63,64,65,66,67,68,69,70,72,75,82,92,95,98,106,111,115,119,121,133,136,137,139,146,150,151,152,160,162,],[-83,-86,-84,-76,-82,-45,-81,-77,-59,-87,-68,-85,-48,-64,118,125,-43,-78,-57,-46,-62,140,142,143,-44,-58,-47,-63,156,-71,-79,-80,-69,-35,]),'STRINGCONST':([42,43,44,49,50,52,58,76,89,90,91,93,96,97,99,100,101,102,103,104,105,107,108,110,112,113,114,117,123,147,164,],[60,60,60,60,60,60,-70,60,60,-49,60,-50,60,-60,60,-61,-56,-51,-52,-53,-54,-55,60,-66,-65,60,-67,60,60,60,60,]),'COMMA':([57,59,60,61,62,63,64,65,66,67,68,69,70,72,74,80,87,92,95,98,106,111,128,133,136,137,139,144,149,150,151,152,158,160,165,],[-83,-86,-84,-76,-82,-45,-81,-77,-59,-87,-68,-85,-48,-64,117,123,130,-43,-78,-57,-46,-62,-99,-44,-58,-47,-63,123,130,-71,-79,-80,164,-69,164,]),'SUM':([57,59,60,61,62,64,65,66,67,68,69,72,95,111,139,150,151,152,160,],[-83,-86,-84,-76,-82,-81,-77,97,-87,-68,-85,-64,-78,-62,-63,-71,-79,-80,-69,]),'$end':([1,2,4,6,8,9,83,148,],[-4,0,-4,-1,-2,-3,-15,-5,]),'FUNCTION':([1,4,8,83,148,],[5,5,-2,-15,-5,]),'DIFFERENT':([57,59,60,61,62,64,65,66,67,68,69,70,72,95,98,111,136,139,150,151,152,160,],[-83,-86,-84,-76,-82,-81,-77,-59,-87,-68,-85,101,-64,-78,-57,-62,-58,-63,-71,-79,-80,-69,]),'STRING':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,55,83,118,130,131,138,140,142,143,145,155,156,161,],[10,25,-88,-20,-32,-31,-22,-89,-21,25,-24,25,-25,-23,25,-15,-26,25,-91,-90,-27,-33,-92,-42,-40,-34,-41,]),'EQUALS':([22,29,45,46,48,77,84,120,],[44,-75,76,-75,-72,-73,126,-74,]),'TIMES':([7,19,20,24,26,27,28,30,32,33,38,39,83,118,131,138,140,142,143,145,155,156,161,],[16,-88,-20,-32,-31,-22,-89,-21,16,-24,-25,-23,-15,-26,-91,-90,-27,-33,-92,-42,-40,-34,-41,]),'INTCONST':([41,42,43,44,47,49,50,52,58,76,89,90,91,93,94,96,97,99,100,101,102,103,104,105,107,108,110,112,113,114,117,123,147,164,],[56,62,62,62,78,62,62,62,-70,62,62,-49,62,-50,134,62,-60,62,-61,-56,-51,-52,-53,-54,-55,62,-66,-65,62,-67,62,62,62,62,]),'O_S_BRACKET':([29,46,64,126,],[47,47,94,147,]),'ID':([7,10,11,12,13,14,15,19,20,21,23,24,25,26,27,28,30,32,33,35,36,38,39,42,43,44,49,50,52,54,58,76,83,86,89,90,91,93,96,97,99,100,101,102,103,104,105,107,108,110,112,113,114,117,118,123,131,138,140,142,143,145,155,156,161,],[29,-10,-8,-6,-9,-7,40,-88,-20,-11,46,-32,-14,-31,-22,-89,-21,29,-24,-12,-13,-25,-23,64,64,64,64,64,64,46,-70,64,-15,128,64,-49,64,-50,64,-60,64,-61,-56,-51,-52,-53,-54,-55,64,-66,-65,64,-67,64,-26,64,-91,-90,-27,-33,-92,-42,-40,-34,-41,]),'IF':([7,19,20,24,26,27,28,30,32,33,38,39,83,118,131,138,140,142,143,145,155,156,161,],[31,-88,-20,-32,-31,-22,-89,-21,31,-24,-25,-23,-15,-26,-91,-90,-27,-33,-92,-42,-40,-34,-41,]),'AND':([57,59,60,61,62,63,64,65,66,67,68,69,70,72,95,98,106,111,136,137,139,150,151,152,160,],[-83,-86,-84,-76,-82,90,-81,-77,-59,-87,-68,-85,-48,-64,-78,-57,-46,-62,-58,-47,-63,-71,-79,-80,-69,]),'FALSE':([42,43,44,49,50,52,58,76,89,90,91,93,96,97,99,100,101,102,103,104,105,107,108,110,112,113,114,117,123,147,164,],[67,67,67,67,67,67,-70,67,67,-49,67,-50,67,-60,67,-61,-56,-51,-52,-53,-54,-55,67,-66,-65,67,-67,67,67,67,67,]),'GREATER_EQUAL':([57,59,60,61,62,64,65,66,67,68,69,70,72,95,98,111,136,139,150,151,152,160,],[-83,-86,-84,-76,-82,-81,-77,-59,-87,-68,-85,104,-64,-78,-57,-62,-58,-63,-71,-79,-80,-69,]),'MULTIPLY':([57,59,60,61,62,64,65,67,68,69,72,95,150,151,152,160,],[-83,-86,-84,-76,-82,-81,-77,-87,-68,-85,112,-78,-71,-79,-80,-69,]),'INT':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,55,83,118,130,131,138,140,142,143,145,155,156,161,],[11,35,-88,-20,-32,-31,-22,-89,-21,35,-24,35,-25,-23,35,-15,-26,35,-91,-90,-27,-33,-92,-42,-40,-34,-41,]),'FLOAT':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,55,83,118,130,131,138,140,142,143,145,155,156,161,],[13,36,-88,-20,-32,-31,-22,-89,-21,36,-24,36,-25,-23,36,-15,-26,36,-91,-90,-27,-33,-92,-42,-40,-34,-41,]),'LIST':([7,19,20,24,26,27,28,30,32,33,38,39,83,118,131,138,140,142,143,145,155,156,161,],[37,-88,-20,-32,-31,-22,-89,-21,37,-24,-25,-23,-15,-26,-91,-90,-27,-33,-92,-42,-40,-34,-41,]),'C_S_BRACKET':([57,59,60,62,67,69,78,134,147,157,158,163,165,166,],[-83,-86,-84,-82,-87,-85,120,151,-37,162,-39,-36,-39,-38,]),'BOOL':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,55,83,118,130,131,138,140,142,143,145,155,156,161,],[14,21,-88,-20,-32,-31,-22,-89,-21,21,-24,21,-25,-23,21,-15,-26,21,-91,-90,-27,-33,-92,-42,-40,-34,-41,]),'LESS_EQUAL':([57,59,60,61,62,64,65,66,67,68,69,70,72,95,98,111,136,139,150,151,152,160,],[-83,-86,-84,-76,-82,-81,-77,-59,-87,-68,-85,107,-64,-78,-57,-62,-58,-63,-71,-79,-80,-69,]),'MAIN':([0,],[3,]),'OR':([57,59,60,61,62,63,64,65,66,67,68,69,70,72,95,98,106,111,136,137,139,150,151,152,160,],[-83,-86,-84,-76,-82,93,-81,-77,-59,-87,-68,-85,-48,-64,-78,-57,-46,-62,-58,-47,-63,-71,-79,-80,-69,]),'MOD':([57,59,60,61,62,64,65,67,68,69,72,95,150,151,152,160,],[-83,-86,-84,-76,-82,-81,-77,-87,-68,-85,114,-78,-71,-79,-80,-69,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersloop':([87,149,],[129,159,]),'parametersinputloop':([80,144,],[122,153,]),'functionorlist':([64,],[95,]),'optionalconstants':([158,165,],[163,166,]),'expressionoptional':([63,],[92,]),'add_o_parenthesis':([58,],[89,]),'exploop':([66,],[98,]),'divmult':([72,],[113,]),'addsub':([66,],[99,]),'logicop':([63,],[91,]),'functionloop':([1,4,],[6,9,]),'whileloop':([7,32,],[19,19,]),'add_c_parenthesis':([150,],[160,]),'parameters':([55,],[85,]),'termloop':([72,],[111,]),'fact':([42,43,44,49,50,52,76,89,91,96,99,108,113,117,123,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'init':([7,32,],[20,20,]),'program':([0,],[2,]),'listaccess':([29,46,],[48,77,]),'constants':([42,43,44,49,50,52,76,89,91,96,99,108,113,117,123,147,164,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,158,165,]),'parameterinit':([55,130,],[87,149,]),'expression2optional':([70,],[106,]),'var':([23,54,],[45,84,]),'var_assign':([7,32,],[22,22,]),'type':([7,32,37,55,130,],[23,23,54,86,86,]),'normalinit':([7,32,],[24,24,]),'function':([1,4,],[4,4,]),'listinit':([7,32,],[26,26,]),'parametersinput':([49,96,],[79,135,]),'writting':([7,32,],[27,27,]),'else':([145,],[155,]),'varconstfunction':([42,43,44,49,50,52,76,89,91,96,99,108,113,117,123,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'functionreturn':([34,],[53,]),'timesloop':([7,32,],[28,28,]),'expression2':([42,43,44,49,50,52,76,89,91,96,117,123,],[63,63,63,63,63,63,63,63,133,63,63,63,]),'condition':([7,32,],[30,30,]),'relop':([70,],[108,]),'statute':([7,32,],[32,32,]),'term':([42,43,44,49,50,52,76,89,91,96,99,108,113,117,123,],[66,66,66,66,66,66,66,66,66,66,66,66,139,66,66,]),'main':([0,],[1,]),'assignation':([7,32,],[33,33,]),'statutesloop':([7,32,],[34,51,]),'varconst':([42,43,44,49,50,52,76,89,91,96,99,108,113,117,123,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'booleanconst':([42,43,44,49,50,52,76,89,91,96,99,108,113,117,123,147,164,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'list':([126,],[146,]),'expression':([42,43,44,49,50,52,76,89,96,117,123,],[71,74,75,80,81,82,119,132,80,74,144,]),'listelements':([147,],[157,]),'optionalwritting':([74,],[116,]),'functioncall':([7,32,],[38,38,]),'block':([3,88,109,124,127,154,],[8,131,138,145,148,161,]),'exp':([42,43,44,49,50,52,76,89,91,96,99,108,117,123,],[70,70,70,70,70,70,70,70,70,70,136,137,70,70,]),'writtingloop':([43,117,],[73,141,]),'functiontype':([5,],[15,]),'loop':([7,32,],[39,39,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> main functionloop','program',2,'p_program','parser.py',13),
  ('main -> MAIN block','main',2,'p_main','parser.py',18),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',24),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',25),
  ('function -> FUNCTION functiontype ID O_PARENTHESIS parameters C_PARENTHESIS block','function',7,'p_function','parser.py',29),
  ('functiontype -> VOID','functiontype',1,'p_functiontype','parser.py',37),
  ('functiontype -> BOOL','functiontype',1,'p_functiontype','parser.py',38),
  ('functiontype -> INT','functiontype',1,'p_functiontype','parser.py',39),
  ('functiontype -> FLOAT','functiontype',1,'p_functiontype','parser.py',40),
  ('functiontype -> STRING','functiontype',1,'p_functiontype','parser.py',41),
  ('type -> BOOL','type',1,'p_type','parser.py',47),
  ('type -> INT','type',1,'p_type','parser.py',48),
  ('type -> FLOAT','type',1,'p_type','parser.py',49),
  ('type -> STRING','type',1,'p_type','parser.py',50),
  ('block -> O_BRACKET statutesloop functionreturn C_BRACKET','block',4,'p_block','parser.py',55),
  ('functionreturn -> RETURN expression SEMICOLON','functionreturn',3,'p_functionreturn','parser.py',59),
  ('functionreturn -> <empty>','functionreturn',0,'p_functionreturn','parser.py',60),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',65),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',66),
  ('statute -> init','statute',1,'p_statute','parser.py',70),
  ('statute -> condition','statute',1,'p_statute','parser.py',71),
  ('statute -> writting','statute',1,'p_statute','parser.py',72),
  ('statute -> loop','statute',1,'p_statute','parser.py',73),
  ('statute -> assignation','statute',1,'p_statute','parser.py',74),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',75),
  ('assignation -> var_assign EQUALS expression SEMICOLON','assignation',4,'p_assignation','parser.py',79),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',83),
  ('writtingloop -> expression optionalwritting','writtingloop',2,'p_writtingloop','parser.py',87),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',91),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',92),
  ('init -> listinit','init',1,'p_init','parser.py',95),
  ('init -> normalinit','init',1,'p_init','parser.py',96),
  ('normalinit -> type var EQUALS expression SEMICOLON','normalinit',5,'p_normalinit','parser.py',100),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',104),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',108),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',112),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',113),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',116),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',117),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS block else','condition',6,'p_condition','parser.py',121),
  ('else -> ELSE block','else',2,'p_else','parser.py',125),
  ('else -> <empty>','else',0,'p_else','parser.py',126),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',130),
  ('expressionoptional -> logicop expression2','expressionoptional',2,'p_expressionoptional','parser.py',133),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',134),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',137),
  ('expression2optional -> relop exp','expression2optional',2,'p_expression2optional','parser.py',140),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',141),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',145),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',146),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',150),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',151),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',152),
  ('relop -> LESS','relop',1,'p_relop','parser.py',153),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',154),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',155),
  ('exp -> term exploop','exp',2,'p_exp','parser.py',160),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',164),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',165),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',168),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',169),
  ('term -> fact termloop','term',2,'p_term','parser.py',174),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',178),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',179),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',182),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',183),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',184),
  ('fact -> varconst','fact',1,'p_fact','parser.py',189),
  ('fact -> O_PARENTHESIS add_o_parenthesis expression C_PARENTHESIS add_c_parenthesis','fact',5,'p_fact','parser.py',190),
  ('add_o_parenthesis -> <empty>','add_o_parenthesis',0,'p_add_o_parenthesis','parser.py',193),
  ('add_c_parenthesis -> <empty>','add_c_parenthesis',0,'p_add_c_parenthesis','parser.py',197),
  ('var_assign -> ID listaccess','var_assign',2,'p_var_assign','parser.py',201),
  ('var -> ID listaccess','var',2,'p_var','parser.py',205),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',215),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',216),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',219),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',220),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',223),
  ('functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET','functionorlist',3,'p_functionorlist','parser.py',226),
  ('functionorlist -> O_PARENTHESIS parametersinput C_PARENTHESIS','functionorlist',3,'p_functionorlist','parser.py',227),
  ('functionorlist -> <empty>','functionorlist',0,'p_functionorlist','parser.py',228),
  ('constants -> INTCONST','constants',1,'p_constants','parser.py',232),
  ('constants -> FLOATCONST','constants',1,'p_constants','parser.py',233),
  ('constants -> STRINGCONST','constants',1,'p_constants','parser.py',234),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',235),
  ('booleanconst -> TRUE','booleanconst',1,'p_booleanconst','parser.py',239),
  ('booleanconst -> FALSE','booleanconst',1,'p_booleanconst','parser.py',240),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',244),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',245),
  ('whileloop -> WHILE O_PARENTHESIS expression C_PARENTHESIS block','whileloop',5,'p_whileloop','parser.py',249),
  ('timesloop -> TIMES O_PARENTHESIS INTCONST C_PARENTHESIS block','timesloop',5,'p_timesloop','parser.py',253),
  ('functioncall -> ID O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON','functioncall',5,'p_functioncall','parser.py',257),
  ('parametersinput -> expression parametersinputloop','parametersinput',2,'p_parametersinput','parser.py',261),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',262),
  ('parametersinputloop -> COMMA expression parametersinputloop','parametersinputloop',3,'p_parametersinputloop','parser.py',266),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',267),
  ('parameters -> parameterinit parametersloop','parameters',2,'p_parameters','parser.py',271),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',272),
  ('parameterinit -> type ID','parameterinit',2,'p_parameterinit','parser.py',275),
  ('parametersloop -> COMMA parameterinit parametersloop','parametersloop',3,'p_parametersloop','parser.py',286),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',287),
]
