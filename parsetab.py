
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x06G\x04\xcb\x0e\x88\xd4\xa9)r\x1f\x1c*>\xc4k'
    
_lr_action_items = {'RETURN':([39,40,44,46,47,48,50,52,53,58,59,74,75,77,108,164,182,187,189,191,192,199,200,202,203,207,213,217,221,],[-114,-30,-44,-43,-32,-115,-31,-29,-34,-35,-33,-28,-23,-29,145,-37,-122,-36,-125,-56,-48,-120,-119,-45,-123,-59,-116,-54,-55,]),'LESS':([81,83,84,85,86,87,89,90,91,92,93,94,96,110,112,113,122,128,130,131,132,134,154,158,176,180,181,183,197,198,212,],[-111,-113,-112,-97,118,-110,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-104,-103,-99,-79,-109,-85,-76,-82,-92,-101,-78,-84,-90,-125,-102,]),'VOID':([4,],[8,]),'O_PARENTHESIS':([15,17,36,37,38,49,51,65,66,67,68,71,73,82,89,97,98,100,101,104,111,114,115,116,117,118,120,121,123,125,126,127,139,145,150,152,153,155,157,159,160,161,173,186,205,],[24,25,65,-117,67,-124,73,82,97,-38,-47,104,82,-91,-124,82,82,82,-47,82,82,-74,-69,-70,-71,-72,-73,82,-66,82,-67,150,82,82,82,-80,-81,82,-87,-86,82,-88,82,-38,82,]),'ELSE':([75,191,],[-23,206,]),'FLOATCONST':([65,67,68,73,82,97,98,100,101,104,111,114,115,116,117,118,120,121,123,125,126,139,145,150,152,153,155,157,159,160,161,172,173,186,205,210,],[81,-38,-47,81,-91,81,81,81,-47,81,81,-74,-69,-70,-71,-72,-73,81,-66,81,-67,81,81,81,-80,-81,81,-87,-86,81,-88,81,81,-38,81,81,]),'WHILE':([26,39,40,44,46,47,48,50,52,53,58,59,75,77,164,182,187,189,191,192,199,200,202,203,207,213,217,221,],[37,-114,-30,-44,-43,-32,-115,-31,37,-34,-35,-33,-23,37,-37,-122,-36,-125,-56,-48,-120,-119,-45,-123,-59,-116,-54,-55,]),'GREATER':([81,83,84,85,86,87,89,90,91,92,93,94,96,110,112,113,122,128,130,131,132,134,154,158,176,180,181,183,197,198,212,],[-111,-113,-112,-97,116,-110,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-104,-103,-99,-79,-109,-85,-76,-82,-92,-101,-78,-84,-90,-125,-102,]),'C_BRACKET':([26,39,40,44,46,47,48,50,52,53,54,58,59,74,75,81,83,84,85,86,87,88,89,90,91,92,93,94,96,110,112,113,119,122,124,128,130,131,132,134,146,148,149,154,158,164,176,177,178,180,181,182,183,187,189,191,192,195,196,197,198,199,200,202,203,207,212,213,217,219,221,],[-29,-114,-30,-44,-43,-32,-115,-31,-29,-34,75,-35,-33,-28,-23,-111,-113,-112,-97,-65,-110,-62,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-63,-104,-60,-103,-99,-79,-109,-85,175,-75,-68,-76,-82,-37,-92,-64,-61,-101,-78,-122,-84,-36,-125,-56,-48,211,-26,-90,-125,-120,-119,-45,-123,-59,-102,-116,-54,-25,-55,]),'PRINT':([26,39,40,44,46,47,48,50,52,53,58,59,75,77,164,182,187,189,191,192,199,200,202,203,207,213,217,221,],[38,-114,-30,-44,-43,-32,-115,-31,38,-34,-35,-33,-23,38,-37,-122,-36,-125,-56,-48,-120,-119,-45,-123,-59,-116,-54,-55,]),'C_PARENTHESIS':([24,25,30,34,35,60,62,79,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,104,106,109,110,112,113,119,122,124,128,130,131,132,134,135,136,141,142,147,148,149,150,154,158,163,169,176,177,178,179,180,181,183,185,190,197,198,201,204,212,214,215,220,223,224,],[-134,-134,61,-137,64,-135,-133,-137,-111,-113,-112,-97,-65,-110,-62,-100,-98,-77,-113,-89,-107,133,-83,137,-127,143,-136,-105,-108,-106,-63,-104,-60,-103,-99,-79,-109,-85,162,-39,168,-130,176,-75,-68,-127,-76,-82,-42,-132,-92,-64,-61,198,-101,-78,-84,-40,-129,-90,-125,-41,-131,-102,-126,-130,-132,-129,-128,]),'TRUE':([65,67,68,73,82,97,98,100,101,104,111,114,115,116,117,118,120,121,123,125,126,139,145,150,152,153,155,157,159,160,161,172,173,186,205,210,],[83,-38,-47,83,-91,83,83,83,-47,83,83,-74,-69,-70,-71,-72,-73,83,-66,83,-67,83,83,83,-80,-81,83,-87,-86,83,-88,83,83,-38,83,83,]),'MINUS':([81,83,84,85,87,89,90,91,92,93,94,96,110,112,113,122,128,130,131,132,134,158,176,180,183,197,198,212,],[-111,-113,-112,-97,-110,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-104,-103,-99,153,-109,-85,-82,-92,-101,-84,-90,-125,-102,]),'DIVIDE':([81,83,84,85,87,89,90,92,93,94,96,110,112,113,122,128,130,132,134,176,180,197,198,212,],[-111,-113,-112,-97,-110,-100,-98,-113,-89,-107,-83,-105,-108,-106,-104,-103,-99,-109,157,-92,-101,-90,-125,-102,]),'EQUALITY':([81,83,84,85,86,87,89,90,91,92,93,94,96,110,112,113,122,128,130,131,132,134,154,158,176,180,181,183,197,198,212,],[-111,-113,-112,-97,115,-110,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-104,-103,-99,-79,-109,-85,-76,-82,-92,-101,-78,-84,-90,-125,-102,]),'SEMICOLON':([81,83,84,85,86,87,88,89,90,91,92,93,94,96,110,112,113,119,122,124,128,130,131,132,134,137,138,148,149,154,158,165,166,168,171,174,176,177,178,180,181,183,188,197,198,208,211,212,],[-111,-113,-112,-97,-65,-110,-62,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-63,-104,-60,-103,-99,-79,-109,-85,164,-46,-75,-68,-76,-82,187,-46,189,192,196,-92,-64,-61,-101,-78,-84,202,-90,-125,-49,219,-102,]),'STRINGCONST':([65,67,68,73,82,97,98,100,101,104,111,114,115,116,117,118,120,121,123,125,126,139,145,150,152,153,155,157,159,160,161,172,173,186,205,210,],[84,-38,-47,84,-91,84,84,84,-47,84,84,-74,-69,-70,-71,-72,-73,84,-66,84,-67,84,84,84,-80,-81,84,-87,-86,84,-88,84,84,-38,84,84,]),'COMMA':([34,60,79,81,83,84,85,86,87,88,89,90,91,92,93,94,96,110,112,113,119,122,124,128,130,131,132,134,136,142,148,149,154,158,163,169,176,177,178,180,181,183,190,194,197,198,212,215,218,220,223,],[63,-135,63,-111,-113,-112,-97,-65,-110,-62,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-63,-104,-60,-103,-99,-79,-109,-85,-39,-130,-75,-68,-76,-82,186,-132,-92,-64,-61,-101,-78,-84,205,210,-90,-125,-102,-130,210,-132,205,]),'O_S_BRACKET':([49,70,72,89,144,],[-100,103,103,129,172,]),'$end':([1,23,27,75,],[0,-1,-4,-23,]),'FUNCTION':([0,2,3,10,14,16,18,19,20,21,75,78,80,175,],[-2,4,4,-27,-12,-8,-11,-7,-9,-10,-23,-13,-14,-24,]),'DIFFERENT':([81,83,84,85,86,87,89,90,91,92,93,94,96,110,112,113,122,128,130,131,132,134,154,158,176,180,181,183,197,198,212,],[-111,-113,-112,-97,114,-110,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-104,-103,-99,-79,-109,-85,-76,-82,-92,-101,-78,-84,-90,-125,-102,]),'STRING':([4,24,25,26,39,40,44,46,47,48,50,52,53,57,58,59,63,75,77,164,182,187,189,191,192,199,200,202,203,207,213,217,221,],[7,29,29,45,-114,-30,-44,-43,-32,-115,-31,45,-34,45,-35,-33,29,-23,45,-37,-122,-36,-125,-56,-48,-120,-119,-45,-123,-59,-116,-54,-55,]),'EQUALS':([42,49,69,70,72,102,105,107,167,],[68,-100,101,-96,-96,-94,-93,144,-95,]),'TIMES':([26,39,40,44,46,47,48,50,52,53,58,59,75,77,164,182,187,189,191,192,199,200,202,203,207,213,217,221,],[36,-114,-30,-44,-43,-32,-115,-31,36,-34,-35,-33,-23,36,-37,-122,-36,-125,-56,-48,-120,-119,-45,-123,-59,-116,-54,-55,]),'INTCONST':([65,67,68,73,82,97,98,100,101,103,104,111,114,115,116,117,118,120,121,123,125,126,129,139,145,150,152,153,155,157,159,160,161,172,173,186,205,210,],[87,-38,-47,87,-91,87,87,87,-47,140,87,87,-74,-69,-70,-71,-72,-73,87,-66,87,-67,151,87,87,87,-80,-81,87,-87,-86,87,-88,87,87,-38,87,87,]),'O_BRACKET':([22,61,64,133,143,145,156,162,170,184,206,216,],[26,77,26,-121,-57,173,26,-118,26,26,-58,26,]),'ID':([7,8,9,11,12,26,28,29,31,32,33,39,40,41,43,44,45,46,47,48,50,52,53,55,56,58,59,65,67,68,73,75,76,77,82,97,98,100,101,104,111,114,115,116,117,118,120,121,123,125,126,139,145,150,152,153,155,157,159,160,161,164,173,182,186,187,189,191,192,199,200,202,203,205,207,213,217,221,],[15,17,15,15,15,49,60,-22,-20,-21,-19,-114,-30,-15,70,-44,-18,-43,-32,-115,-31,49,-34,-16,-17,-35,-33,89,-38,-47,89,-23,70,49,-91,89,89,89,-47,89,89,-74,-69,-70,-71,-72,-73,89,-66,89,-67,89,89,89,-80,-81,89,-87,-86,89,-88,-37,89,-122,-38,-36,-125,-56,-48,-120,-119,-45,-123,89,-59,-116,-54,-55,]),'IF':([26,39,40,44,46,47,48,50,52,53,58,59,75,77,164,182,187,189,191,192,199,200,202,203,207,213,217,221,],[51,-114,-30,-44,-43,-32,-115,-31,51,-34,-35,-33,-23,51,-37,-122,-36,-125,-56,-48,-120,-119,-45,-123,-59,-116,-54,-55,]),'AND':([81,83,84,85,86,87,88,89,90,91,92,93,94,96,110,112,113,119,122,128,130,131,132,134,148,154,158,176,177,180,181,183,197,198,212,],[-111,-113,-112,-97,-65,-110,123,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-63,-104,-103,-99,-79,-109,-85,-75,-76,-82,-92,-64,-101,-78,-84,-90,-125,-102,]),'FALSE':([65,67,68,73,82,97,98,100,101,104,111,114,115,116,117,118,120,121,123,125,126,139,145,150,152,153,155,157,159,160,161,172,173,186,205,210,],[92,-38,-47,92,-91,92,92,92,-47,92,92,-74,-69,-70,-71,-72,-73,92,-66,92,-67,92,92,92,-80,-81,92,-87,-86,92,-88,92,92,-38,92,92,]),'GREATER_EQUAL':([81,83,84,85,86,87,89,90,91,92,93,94,96,110,112,113,122,128,130,131,132,134,154,158,176,180,181,183,197,198,212,],[-111,-113,-112,-97,117,-110,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-104,-103,-99,-79,-109,-85,-76,-82,-92,-101,-78,-84,-90,-125,-102,]),'MULTIPLY':([81,83,84,85,87,89,90,92,93,94,96,110,112,113,122,128,130,132,134,176,180,197,198,212,],[-111,-113,-112,-97,-110,-100,-98,-113,-89,-107,-83,-105,-108,-106,-104,-103,-99,-109,159,-92,-101,-90,-125,-102,]),'INT':([4,24,25,26,39,40,44,46,47,48,50,52,53,57,58,59,63,75,77,164,182,187,189,191,192,199,200,202,203,207,213,217,221,],[12,31,31,55,-114,-30,-44,-43,-32,-115,-31,55,-34,55,-35,-33,31,-23,55,-37,-122,-36,-125,-56,-48,-120,-119,-45,-123,-59,-116,-54,-55,]),'SUM':([81,83,84,85,87,89,90,91,92,93,94,96,110,112,113,122,128,130,131,132,134,158,176,180,183,197,198,212,],[-111,-113,-112,-97,-110,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-104,-103,-99,152,-109,-85,-82,-92,-101,-84,-90,-125,-102,]),'FLOAT':([4,24,25,26,39,40,44,46,47,48,50,52,53,57,58,59,63,75,77,164,182,187,189,191,192,199,200,202,203,207,213,217,221,],[9,32,32,56,-114,-30,-44,-43,-32,-115,-31,56,-34,56,-35,-33,32,-23,56,-37,-122,-36,-125,-56,-48,-120,-119,-45,-123,-59,-116,-54,-55,]),'LIST':([26,39,40,44,46,47,48,50,52,53,58,59,75,77,164,182,187,189,191,192,199,200,202,203,207,213,217,221,],[57,-114,-30,-44,-43,-32,-115,-31,57,-34,-35,-33,-23,57,-37,-122,-36,-125,-56,-48,-120,-119,-45,-123,-59,-116,-54,-55,]),'C_S_BRACKET':([81,83,84,87,92,94,110,112,113,122,132,140,151,172,193,194,209,218,222,],[-111,-113,-112,-110,-113,-107,-105,-108,-106,-104,-109,167,180,-51,208,-53,-50,-53,-52,]),'BOOL':([4,24,25,26,39,40,44,46,47,48,50,52,53,57,58,59,63,75,77,164,182,187,189,191,192,199,200,202,203,207,213,217,221,],[11,33,33,41,-114,-30,-44,-43,-32,-115,-31,41,-34,41,-35,-33,33,-23,41,-37,-122,-36,-125,-56,-48,-120,-119,-45,-123,-59,-116,-54,-55,]),'LESS_EQUAL':([81,83,84,85,86,87,89,90,91,92,93,94,96,110,112,113,122,128,130,131,132,134,154,158,176,180,181,183,197,198,212,],[-111,-113,-112,-97,120,-110,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-104,-103,-99,-79,-109,-85,-76,-82,-92,-101,-78,-84,-90,-125,-102,]),'MAIN':([0,2,3,5,6,10,13,14,16,18,19,20,21,75,78,80,175,],[-2,-6,-6,-3,-5,-27,22,-12,-8,-11,-7,-9,-10,-23,-13,-14,-24,]),'OR':([81,83,84,85,86,87,88,89,90,91,92,93,94,96,110,112,113,119,122,128,130,131,132,134,148,154,158,176,177,180,181,183,197,198,212,],[-111,-113,-112,-97,-65,-110,126,-100,-98,-77,-113,-89,-107,-83,-105,-108,-106,-63,-104,-103,-99,-79,-109,-85,-75,-76,-82,-92,-64,-101,-78,-84,-90,-125,-102,]),'MOD':([81,83,84,85,87,89,90,92,93,94,96,110,112,113,122,128,130,132,134,176,180,197,198,212,],[-111,-113,-112,-97,-110,-100,-98,-113,-89,-107,-83,-105,-108,-106,-104,-103,-99,-109,161,-92,-101,-90,-125,-102,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersinputloop':([190,223,],[204,224,]),'optionalconstants':([194,218,],[209,222,]),'function_end':([10,],[19,]),'whileloop':([26,52,77,],[39,39,39,]),'parameters':([24,25,],[30,35,]),'check_function_exists':([49,89,],[71,127,]),'add_string_constant_to_dict':([84,],[113,]),'program':([0,],[1,]),'main':([13,],[23,]),'start_condition':([143,],[170,]),'listinit':([26,52,77,],[46,46,46,]),'varconstfunction':([65,73,97,98,100,104,111,121,125,139,145,150,155,160,173,205,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'add_float_constant_to_dict':([81,],[110,]),'expression2':([65,73,97,98,100,104,111,125,139,145,150,173,205,],[88,88,88,88,88,88,88,149,88,88,88,88,88,]),'condition':([26,52,77,],[50,50,50,]),'term':([65,73,97,98,100,104,111,121,125,139,145,150,155,160,173,205,],[91,91,91,91,91,91,91,91,91,91,91,91,91,183,91,91,]),'end_condition':([207,],[217,]),'assignation':([26,52,77,],[53,53,53,]),'list':([144,],[171,]),'functionblock':([61,],[78,]),'normalinit':([26,52,77,],[44,44,44,]),'term_quadruple':([96,],[134,]),'functionloop':([2,3,],[5,6,]),'termloop':([134,],[158,]),'start_times':([133,],[156,]),'parametersinput':([104,150,],[141,179,]),'generate_gosub':([189,198,],[203,212,]),'generate_main_goto':([0,],[2,]),'end_times':([182,],[199,]),'end_while':([200,],[213,]),'check_params_order':([204,],[214,]),'statutesloop':([26,52,77,],[54,74,108,]),'function_with_return_def':([7,9,11,12,],[14,18,20,21,]),'add_int_constant_to_dict':([87,],[122,]),'exp_quadruple':([91,],[131,]),'fill_main_goto':([5,],[13,]),'writtingloop':([67,186,],[99,201,]),'expression':([65,73,97,98,100,104,111,139,145,150,173,205,],[95,106,135,136,138,142,147,166,174,142,195,215,]),'block':([22,64,156,170,184,216,],[27,80,182,191,200,221,]),'expressionoptional':([88,],[124,]),'relop_quadruple':([148,],[177,]),'print_quadruple':([136,],[163,]),'add_c_parenthesis':([176,],[197,]),'add_bool_constant_to_dict':([83,92,],[112,132,]),'init':([26,52,77,],[40,40,40,]),'add_to_stack':([49,89,],[72,128,]),'listaccess':([70,72,],[102,105,]),'var':([43,76,],[69,107,]),'type':([26,52,57,77,],[43,43,76,43,]),'start_while':([37,],[66,]),'function':([2,3,],[3,3,]),'writting':([26,52,77,],[47,47,47,]),'condition_while':([162,],[184,]),'else':([191,],[207,]),'start_printing':([67,186,],[98,98,]),'functionreturn':([108,],[146,]),'generate_parameter_quadruple':([169,220,],[190,223,]),'add_equals':([68,101,],[100,139,]),'varconst':([65,73,97,98,100,104,111,121,125,139,145,150,155,160,173,205,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'logic_op_quadruple':([149,],[178,]),'listelements':([172,],[193,]),'push_type_to_function_options':([142,215,],[169,220,]),'functionorlist':([89,],[130,]),'booleanconst':([65,73,97,98,100,104,111,121,125,139,145,150,155,160,172,173,205,210,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'loop':([26,52,77,],[59,59,59,]),'parametersloop':([34,79,],[62,109,]),'equals_quadruple':([138,166,],[165,188,]),'add_o_parenthesis':([82,],[111,]),'exploop':([131,],[154,]),'addsub':([131,],[155,]),'logicop':([88,],[125,]),'parameterinit':([24,25,63,],[34,34,79,]),'function_head':([4,],[10,]),'expression2optional':([86,],[119,]),'divmult':([134,],[160,]),'var_assign':([26,52,77,],[42,42,42,]),'function_def':([8,],[16,]),'timesloop':([26,52,77,],[48,48,48,]),'constants':([65,73,97,98,100,104,111,121,125,139,145,150,155,160,172,173,205,210,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,194,90,90,218,]),'parametertype':([24,25,63,],[28,28,28,]),'statute':([26,52,77,],[52,52,52,]),'relop':([86,],[121,]),'optionalwritting':([163,],[185,]),'functioncall':([26,52,77,],[58,58,58,]),'exp':([65,73,97,98,100,104,111,121,125,139,145,150,155,173,205,],[86,86,86,86,86,86,86,148,86,86,86,86,181,86,86,]),'else_condition':([206,],[216,]),'fact':([65,73,97,98,100,104,111,121,125,139,145,150,155,160,173,205,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> generate_main_goto functionloop fill_main_goto main','program',4,'p_program','parser.py',13),
  ('generate_main_goto -> <empty>','generate_main_goto',0,'p_generate_main_goto','parser.py',17),
  ('fill_main_goto -> <empty>','fill_main_goto',0,'p_fill_main_goto','parser.py',21),
  ('main -> MAIN block','main',2,'p_main','parser.py',26),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',32),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',33),
  ('function -> FUNCTION function_head function_end','function',3,'p_function','parser.py',37),
  ('function_head -> VOID function_def','function_head',2,'p_function_head','parser.py',47),
  ('function_head -> BOOL function_with_return_def','function_head',2,'p_function_head','parser.py',48),
  ('function_head -> INT function_with_return_def','function_head',2,'p_function_head','parser.py',49),
  ('function_head -> FLOAT function_with_return_def','function_head',2,'p_function_head','parser.py',50),
  ('function_head -> STRING function_with_return_def','function_head',2,'p_function_head','parser.py',51),
  ('function_with_return_def -> ID O_PARENTHESIS parameters C_PARENTHESIS functionblock','function_with_return_def',5,'p_function_with_return_def','parser.py',57),
  ('function_def -> ID O_PARENTHESIS parameters C_PARENTHESIS block','function_def',5,'p_function_def','parser.py',61),
  ('type -> BOOL','type',1,'p_type','parser.py',66),
  ('type -> INT','type',1,'p_type','parser.py',67),
  ('type -> FLOAT','type',1,'p_type','parser.py',68),
  ('type -> STRING','type',1,'p_type','parser.py',69),
  ('parametertype -> BOOL','parametertype',1,'p_parametertype','parser.py',75),
  ('parametertype -> INT','parametertype',1,'p_parametertype','parser.py',76),
  ('parametertype -> FLOAT','parametertype',1,'p_parametertype','parser.py',77),
  ('parametertype -> STRING','parametertype',1,'p_parametertype','parser.py',78),
  ('block -> O_BRACKET statutesloop C_BRACKET','block',3,'p_block','parser.py',84),
  ('functionblock -> O_BRACKET statutesloop functionreturn C_BRACKET','functionblock',4,'p_functionblock','parser.py',88),
  ('functionreturn -> RETURN O_BRACKET expression C_BRACKET SEMICOLON','functionreturn',5,'p_functionreturn','parser.py',92),
  ('functionreturn -> RETURN expression SEMICOLON','functionreturn',3,'p_functionreturn','parser.py',93),
  ('function_end -> <empty>','function_end',0,'p_function_end','parser.py',96),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',103),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',104),
  ('statute -> init','statute',1,'p_statute','parser.py',108),
  ('statute -> condition','statute',1,'p_statute','parser.py',109),
  ('statute -> writting','statute',1,'p_statute','parser.py',110),
  ('statute -> loop','statute',1,'p_statute','parser.py',111),
  ('statute -> assignation','statute',1,'p_statute','parser.py',112),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',113),
  ('assignation -> var_assign EQUALS add_equals expression equals_quadruple SEMICOLON','assignation',6,'p_assignation','parser.py',117),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',122),
  ('start_printing -> <empty>','start_printing',0,'p_start_printing','parser.py',125),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',129),
  ('writtingloop -> start_printing expression print_quadruple optionalwritting','writtingloop',4,'p_writtingloop','parser.py',138),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',142),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',143),
  ('init -> listinit','init',1,'p_init','parser.py',146),
  ('init -> normalinit','init',1,'p_init','parser.py',147),
  ('normalinit -> type var EQUALS add_equals expression equals_quadruple SEMICOLON','normalinit',7,'p_normalinit','parser.py',151),
  ('equals_quadruple -> <empty>','equals_quadruple',0,'p_equals_quadruple','parser.py',154),
  ('add_equals -> <empty>','add_equals',0,'p_add_equals','parser.py',163),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',168),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',172),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',176),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',177),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',180),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',181),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS start_condition block else end_condition','condition',8,'p_condition','parser.py',185),
  ('else -> ELSE else_condition block','else',3,'p_else','parser.py',189),
  ('else -> <empty>','else',0,'p_else','parser.py',190),
  ('start_condition -> <empty>','start_condition',0,'p_start_condition','parser.py',193),
  ('else_condition -> <empty>','else_condition',0,'p_else_condition','parser.py',197),
  ('end_condition -> <empty>','end_condition',0,'p_end_condition','parser.py',201),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',206),
  ('expressionoptional -> logicop expression2 logic_op_quadruple','expressionoptional',3,'p_expressionoptional','parser.py',209),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',210),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',213),
  ('expression2optional -> relop exp relop_quadruple','expression2optional',3,'p_expression2optional','parser.py',216),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',217),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',221),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',222),
  ('logic_op_quadruple -> <empty>','logic_op_quadruple',0,'p_logic_op_quadruple','parser.py',226),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',233),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',234),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',235),
  ('relop -> LESS','relop',1,'p_relop','parser.py',236),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',237),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',238),
  ('relop_quadruple -> <empty>','relop_quadruple',0,'p_relop_quadruple','parser.py',242),
  ('exp -> term exp_quadruple exploop','exp',3,'p_exp','parser.py',249),
  ('exp_quadruple -> <empty>','exp_quadruple',0,'p_exp_quadruple','parser.py',252),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',259),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',260),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',263),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',264),
  ('term -> fact term_quadruple termloop','term',3,'p_term','parser.py',269),
  ('term_quadruple -> <empty>','term_quadruple',0,'p_term_quadruple','parser.py',272),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',279),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',280),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',284),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',285),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',286),
  ('fact -> varconst','fact',1,'p_fact','parser.py',291),
  ('fact -> O_PARENTHESIS add_o_parenthesis expression C_PARENTHESIS add_c_parenthesis','fact',5,'p_fact','parser.py',292),
  ('add_o_parenthesis -> <empty>','add_o_parenthesis',0,'p_add_o_parenthesis','parser.py',295),
  ('add_c_parenthesis -> <empty>','add_c_parenthesis',0,'p_add_c_parenthesis','parser.py',299),
  ('var_assign -> ID add_to_stack listaccess','var_assign',3,'p_var_assign','parser.py',303),
  ('var -> ID listaccess','var',2,'p_var','parser.py',315),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',331),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',332),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',336),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',337),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',340),
  ('add_to_stack -> <empty>','add_to_stack',0,'p_add_to_stack','parser.py',343),
  ('functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET','functionorlist',3,'p_functionorlist','parser.py',347),
  ('functionorlist -> check_function_exists O_PARENTHESIS parametersinput C_PARENTHESIS generate_gosub','functionorlist',5,'p_functionorlist','parser.py',348),
  ('functionorlist -> add_to_stack','functionorlist',1,'p_functionorlist','parser.py',349),
  ('constants -> INTCONST add_int_constant_to_dict','constants',2,'p_constants','parser.py',353),
  ('constants -> FLOATCONST add_float_constant_to_dict','constants',2,'p_constants','parser.py',354),
  ('constants -> STRINGCONST add_string_constant_to_dict','constants',2,'p_constants','parser.py',355),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',356),
  ('booleanconst -> TRUE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',360),
  ('booleanconst -> FALSE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',361),
  ('add_int_constant_to_dict -> <empty>','add_int_constant_to_dict',0,'p_add_int_constant_to_dict','parser.py',364),
  ('add_float_constant_to_dict -> <empty>','add_float_constant_to_dict',0,'p_add_float_constant_to_dict','parser.py',368),
  ('add_string_constant_to_dict -> <empty>','add_string_constant_to_dict',0,'p_add_string_constant_to_dict','parser.py',372),
  ('add_bool_constant_to_dict -> <empty>','add_bool_constant_to_dict',0,'p_add_bool_constant_to_dict','parser.py',376),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',381),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',382),
  ('whileloop -> WHILE start_while O_PARENTHESIS expression C_PARENTHESIS condition_while block end_while','whileloop',8,'p_whileloop','parser.py',386),
  ('start_while -> <empty>','start_while',0,'p_start_while','parser.py',389),
  ('condition_while -> <empty>','condition_while',0,'p_condition_while','parser.py',393),
  ('end_while -> <empty>','end_while',0,'p_end_while','parser.py',397),
  ('timesloop -> TIMES O_PARENTHESIS expression C_PARENTHESIS start_times block end_times','timesloop',7,'p_timesloop','parser.py',402),
  ('start_times -> <empty>','start_times',0,'p_start_times','parser.py',405),
  ('end_times -> <empty>','end_times',0,'p_end_times','parser.py',409),
  ('functioncall -> ID check_function_exists O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON generate_gosub','functioncall',7,'p_functioncall','parser.py',414),
  ('check_function_exists -> <empty>','check_function_exists',0,'p_check_function_exists','parser.py',417),
  ('generate_gosub -> <empty>','generate_gosub',0,'p_generate_gosub','parser.py',422),
  ('parametersinput -> expression push_type_to_function_options generate_parameter_quadruple parametersinputloop check_params_order','parametersinput',5,'p_parametersinput','parser.py',427),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',428),
  ('parametersinputloop -> COMMA expression push_type_to_function_options generate_parameter_quadruple parametersinputloop','parametersinputloop',5,'p_parametersinputloop','parser.py',432),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',433),
  ('push_type_to_function_options -> <empty>','push_type_to_function_options',0,'p_push_type_to_function_options','parser.py',436),
  ('check_params_order -> <empty>','check_params_order',0,'p_check_params_order','parser.py',440),
  ('generate_parameter_quadruple -> <empty>','generate_parameter_quadruple',0,'p_generate_parameter_quadruple','parser.py',444),
  ('parameters -> parameterinit parametersloop','parameters',2,'p_parameters','parser.py',449),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',450),
  ('parameterinit -> parametertype ID','parameterinit',2,'p_parameterinit','parser.py',453),
  ('parametersloop -> COMMA parameterinit parametersloop','parametersloop',3,'p_parametersloop','parser.py',464),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',465),
]
