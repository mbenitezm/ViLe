
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x92G\xd6\x8e}\x1br\xb8\xeaL&\xbb?Sr\xd4'
    
_lr_action_items = {'RETURN':([44,46,169,192,194,197,200,207,208,218,220,222,223,224,225,227,229,230,242,263,266,267,268,269,271,272,274,],[-60,-59,-53,-52,-148,-64,217,-61,-146,217,-136,-135,-46,-49,-48,-47,-50,-51,-30,-145,-75,-143,-141,-78,-138,-71,-74,]),'LESS':([82,84,85,86,87,88,90,91,92,93,94,95,97,114,116,117,126,132,134,135,136,138,159,163,181,185,186,188,202,203,231,],[-130,-132,-131,-116,122,-129,-119,-117,-96,-132,-108,-126,-102,-124,-127,-125,-123,-122,-118,-98,-128,-104,-95,-101,-111,-120,-97,-103,-109,-148,-121,]),'VOID':([4,],[8,]),'O_PARENTHESIS':([23,25,30,31,34,35,36,37,38,49,51,60,62,63,64,65,68,70,83,90,98,99,101,102,105,115,118,119,120,121,122,124,125,127,129,130,131,143,155,157,158,160,162,164,165,166,191,210,216,217,219,228,238,239,241,243,248,250,],[-20,-20,-17,-19,-19,61,62,-139,64,-147,70,74,83,98,-54,-63,105,83,-110,-147,83,83,83,-63,83,83,-93,-88,-89,-90,-91,-92,83,-85,83,-86,155,83,83,-99,-100,83,-106,-105,83,-107,-54,83,238,-33,-139,243,83,83,250,83,83,83,]),'ELSE':([72,196,242,266,],[-29,211,-30,270,]),'FLOATCONST':([62,64,65,70,83,98,99,101,102,105,115,118,119,120,121,122,124,125,127,129,130,143,155,157,158,160,162,164,165,166,177,191,210,215,217,238,239,243,248,250,],[82,-54,-63,82,-110,82,82,82,-63,82,82,-93,-88,-89,-90,-91,-92,82,-85,82,-86,82,82,-99,-100,82,-106,-105,82,-107,82,-54,82,82,-33,82,82,82,82,82,]),'WHILE':([32,39,40,44,46,47,48,50,52,53,58,59,72,169,187,192,194,196,197,200,204,205,207,208,212,218,220,222,223,224,225,227,229,230,232,236,242,245,263,266,267,268,269,271,272,274,],[37,-133,-40,-60,-59,-42,-134,-41,37,-44,-45,-43,-29,-53,-145,-52,-148,-73,-64,219,-142,-141,-61,-146,-78,219,-136,-135,-46,-49,-48,-47,-50,-51,-137,-70,-30,-72,-145,-75,-143,-141,-78,-138,-71,-74,]),'GREATER':([82,84,85,86,87,88,90,91,92,93,94,95,97,114,116,117,126,132,134,135,136,138,159,163,181,185,186,188,202,203,231,],[-130,-132,-131,-116,120,-129,-119,-117,-96,-132,-108,-126,-102,-124,-127,-125,-123,-122,-118,-98,-128,-104,-95,-101,-111,-120,-97,-103,-109,-148,-121,]),'C_BRACKET':([32,39,40,44,46,47,48,50,52,53,54,58,59,71,72,82,84,85,86,87,88,89,90,91,92,93,94,95,97,114,116,117,123,126,128,132,134,135,136,138,153,154,159,163,169,181,182,183,185,186,187,188,192,194,196,197,200,202,203,204,205,207,208,212,218,220,221,222,223,224,225,226,227,229,230,231,232,236,240,242,245,254,255,263,264,266,267,268,269,271,272,274,],[-36,-133,-40,-60,-59,-42,-134,-41,-36,-44,72,-45,-43,-35,-29,-130,-132,-131,-116,-84,-129,-81,-119,-117,-96,-132,-108,-126,-102,-124,-127,-125,-82,-123,-79,-122,-118,-98,-128,-104,-94,-87,-95,-101,-53,-111,-83,-80,-120,-97,-145,-103,-52,-148,-73,-64,-39,-109,-148,-142,-141,-61,-146,-78,-39,-136,242,-135,-46,-49,-48,-38,-47,-50,-51,-121,-137,-70,-37,-30,-72,260,-32,-145,-31,-75,-143,-141,-78,-138,-71,-74,]),'PRINT':([32,39,40,44,46,47,48,50,52,53,58,59,72,169,187,192,194,196,197,200,204,205,207,208,212,218,220,222,223,224,225,227,229,230,232,236,242,245,263,266,267,268,269,271,272,274,],[38,-133,-40,-60,-59,-42,-134,-41,38,-44,-45,-43,-29,-53,-145,-52,-148,-73,-64,38,-142,-141,-61,-146,-78,38,-136,-135,-46,-49,-48,-47,-50,-51,-137,-70,-30,-72,-145,-75,-143,-141,-78,-138,-71,-74,]),'C_PARENTHESIS':([61,74,78,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,105,107,109,110,112,114,116,117,123,126,128,132,134,135,136,138,139,140,145,146,151,152,153,154,155,159,163,168,174,180,181,182,183,184,185,186,188,190,195,202,203,206,209,231,233,234,244,247,251,252,256,258,],[-157,-157,111,-160,-130,-132,-131,-116,-84,-129,-81,-119,-117,-96,-132,-108,-126,137,-102,141,-150,147,149,-158,-156,-124,-127,-125,-82,-123,-79,-122,-118,-98,-128,-104,167,-55,173,-153,-160,181,-94,-87,-150,-95,-101,-58,-155,-159,-111,-83,-80,203,-120,-97,-103,-56,-152,-109,-148,-57,-154,-121,-149,-153,-155,253,257,-152,261,-151,]),'TRUE':([62,64,65,70,83,98,99,101,102,105,115,118,119,120,121,122,124,125,127,129,130,143,155,157,158,160,162,164,165,166,177,191,210,215,217,238,239,243,248,250,],[84,-54,-63,84,-110,84,84,84,-63,84,84,-93,-88,-89,-90,-91,-92,84,-85,84,-86,84,84,-99,-100,84,-106,-105,84,-107,84,-54,84,84,-33,84,84,84,84,84,]),'MINUS':([82,84,85,86,88,90,91,92,93,94,95,97,114,116,117,126,132,134,135,136,138,163,181,185,188,202,203,231,],[-130,-132,-131,-116,-129,-119,-117,-96,-132,-108,-126,-102,-124,-127,-125,-123,-122,-118,158,-128,-104,-101,-111,-120,-103,-109,-148,-121,]),'DIVIDE':([82,84,85,86,88,90,91,93,94,95,97,114,116,117,126,132,134,136,138,181,185,202,203,231,],[-130,-132,-131,-116,-129,-119,-117,-132,-108,-126,-102,-124,-127,-125,-123,-122,-118,-128,162,-111,-120,-109,-148,-121,]),'EQUALITY':([82,84,85,86,87,88,90,91,92,93,94,95,97,114,116,117,126,132,134,135,136,138,159,163,181,185,186,188,202,203,231,],[-130,-132,-131,-116,119,-129,-119,-117,-96,-132,-108,-126,-102,-124,-127,-125,-123,-122,-118,-98,-128,-104,-95,-101,-111,-120,-97,-103,-109,-148,-121,]),'SEMICOLON':([82,84,85,86,87,88,89,90,91,92,93,94,95,97,114,116,117,123,126,128,132,134,135,136,138,141,142,153,154,159,163,170,171,173,176,181,182,183,185,186,188,193,202,203,213,231,249,260,],[-130,-132,-131,-116,-84,-129,-81,-119,-117,-96,-132,-108,-126,-102,-124,-127,-125,-82,-123,-79,-122,-118,-98,-128,-104,169,-62,-94,-87,-95,-101,192,-62,194,197,-111,-83,-80,-120,-97,-103,207,-109,-148,-65,-121,255,264,]),'STRINGCONST':([62,64,65,70,83,98,99,101,102,105,115,118,119,120,121,122,124,125,127,129,130,143,155,157,158,160,162,164,165,166,177,191,210,215,217,238,239,243,248,250,],[85,-54,-63,85,-110,85,85,85,-63,85,85,-93,-88,-89,-90,-91,-92,85,-85,85,-86,85,85,-99,-100,85,-106,-105,85,-107,85,-54,85,85,-33,85,85,85,85,85,]),'COMMA':([81,82,84,85,86,87,88,89,90,91,92,93,94,95,97,110,114,116,117,123,126,128,132,134,135,136,138,140,146,151,153,154,159,163,168,174,181,182,183,185,186,188,195,199,202,203,231,234,237,244,252,],[113,-130,-132,-131,-116,-84,-129,-81,-119,-117,-96,-132,-108,-126,-102,-158,-124,-127,-125,-82,-123,-79,-122,-118,-98,-128,-104,-55,-153,113,-94,-87,-95,-101,191,-155,-111,-83,-80,-120,-97,-103,210,215,-109,-148,-121,-153,215,-155,210,]),'O_S_BRACKET':([49,67,69,90,148,],[-119,104,104,133,177,]),'$end':([1,21,33,72,],[0,-1,-4,-29,]),'FUNCTION':([0,2,3,10,17,22,24,26,27,28,72,179,201,242,],[-2,4,4,-34,-8,-14,-10,-13,-11,-12,-29,-18,-16,-30,]),'DIFFERENT':([82,84,85,86,87,88,90,91,92,93,94,95,97,114,116,117,126,132,134,135,136,138,159,163,181,185,186,188,202,203,231,],[-130,-132,-131,-116,118,-129,-119,-117,-96,-132,-108,-126,-102,-124,-127,-125,-123,-122,-118,-98,-128,-104,-95,-101,-111,-120,-97,-103,-109,-148,-121,]),'STRING':([4,32,39,40,44,46,47,48,50,52,53,57,58,59,61,72,74,113,169,187,192,194,196,197,200,204,205,207,208,212,218,220,222,223,224,225,227,229,230,232,236,242,245,263,266,267,268,269,271,272,274,],[7,45,-133,-40,-60,-59,-42,-134,-41,45,-44,45,-45,-43,77,-29,77,77,-53,-145,-52,-148,-73,-64,45,-142,-141,-61,-146,-78,45,-136,-135,-46,-49,-48,-47,-50,-51,-137,-70,-30,-72,-145,-75,-143,-141,-78,-138,-71,-74,]),'EQUALS':([42,49,66,67,69,103,106,108,172,],[65,-119,102,-115,-115,-113,-112,148,-114,]),'TIMES':([32,39,40,44,46,47,48,50,52,53,58,59,72,169,187,192,194,196,197,200,204,205,207,208,212,218,220,222,223,224,225,227,229,230,232,236,242,245,263,266,267,268,269,271,272,274,],[36,-133,-40,-60,-59,-42,-134,-41,36,-44,-45,-43,-29,-53,-145,-52,-148,-73,-64,216,-142,-141,-61,-146,-78,216,-136,-135,-46,-49,-48,-47,-50,-51,-137,-70,-30,-72,-145,-75,-143,-141,-78,-138,-71,-74,]),'INTCONST':([62,64,65,70,83,98,99,101,102,104,105,115,118,119,120,121,122,124,125,127,129,130,133,143,155,157,158,160,162,164,165,166,177,191,210,215,217,238,239,243,248,250,],[88,-54,-63,88,-110,88,88,88,-63,144,88,88,-93,-88,-89,-90,-91,-92,88,-85,88,-86,156,88,88,-99,-100,88,-106,-105,88,-107,88,-54,88,88,-33,88,88,88,88,88,]),'O_BRACKET':([20,29,111,137,147,149,150,161,167,175,178,189,211,217,235,239,253,257,259,261,262,265,270,273,],[-5,32,-9,-144,-76,-9,32,32,-140,32,200,32,-77,-33,32,248,-144,-76,200,-140,200,200,-77,200,]),'ID':([7,8,9,11,12,14,15,16,18,19,32,39,40,41,43,44,45,46,47,48,50,52,53,55,56,58,59,62,64,65,70,72,73,75,76,77,79,80,83,98,99,101,102,105,115,118,119,120,121,122,124,125,127,129,130,143,155,157,158,160,162,164,165,166,169,187,191,192,194,196,197,200,204,205,207,208,210,212,217,218,220,222,223,224,225,227,229,230,232,236,238,239,242,243,245,248,250,263,266,267,268,269,271,272,274,],[-15,-15,-15,-15,-15,23,25,23,23,23,49,-133,-40,-21,67,-60,-24,-59,-42,-134,-41,49,-44,-22,-23,-45,-43,90,-54,-63,90,-29,67,110,-27,-28,-26,-25,-110,90,90,90,-63,90,90,-93,-88,-89,-90,-91,-92,90,-85,90,-86,90,90,-99,-100,90,-106,-105,90,-107,-53,-145,-54,-52,-148,-73,-64,49,-142,-141,-61,-146,90,-78,-33,49,-136,-135,-46,-49,-48,-47,-50,-51,-137,-70,90,90,-30,90,-72,90,90,-145,-75,-143,-141,-78,-138,-71,-74,]),'IF':([32,39,40,44,46,47,48,50,52,53,58,59,72,169,187,192,194,196,197,200,204,205,207,208,212,218,220,222,223,224,225,227,229,230,232,236,242,245,263,266,267,268,269,271,272,274,],[51,-133,-40,-60,-59,-42,-134,-41,51,-44,-45,-43,-29,-53,-145,-52,-148,-73,-64,228,-142,-141,-61,-146,-78,228,-136,-135,-46,-49,-48,-47,-50,-51,-137,-70,-30,-72,-145,-75,-143,-141,-78,-138,-71,-74,]),'AND':([82,84,85,86,87,88,89,90,91,92,93,94,95,97,114,116,117,123,126,132,134,135,136,138,153,159,163,181,182,185,186,188,202,203,231,],[-130,-132,-131,-116,-84,-129,127,-119,-117,-96,-132,-108,-126,-102,-124,-127,-125,-82,-123,-122,-118,-98,-128,-104,-94,-95,-101,-111,-83,-120,-97,-103,-109,-148,-121,]),'FALSE':([62,64,65,70,83,98,99,101,102,105,115,118,119,120,121,122,124,125,127,129,130,143,155,157,158,160,162,164,165,166,177,191,210,215,217,238,239,243,248,250,],[93,-54,-63,93,-110,93,93,93,-63,93,93,-93,-88,-89,-90,-91,-92,93,-85,93,-86,93,93,-99,-100,93,-106,-105,93,-107,93,-54,93,93,-33,93,93,93,93,93,]),'GREATER_EQUAL':([82,84,85,86,87,88,90,91,92,93,94,95,97,114,116,117,126,132,134,135,136,138,159,163,181,185,186,188,202,203,231,],[-130,-132,-131,-116,121,-129,-119,-117,-96,-132,-108,-126,-102,-124,-127,-125,-123,-122,-118,-98,-128,-104,-95,-101,-111,-120,-97,-103,-109,-148,-121,]),'MULTIPLY':([82,84,85,86,88,90,91,93,94,95,97,114,116,117,126,132,134,136,138,181,185,202,203,231,],[-130,-132,-131,-116,-129,-119,-117,-132,-108,-126,-102,-124,-127,-125,-123,-122,-118,-128,164,-111,-120,-109,-148,-121,]),'INT':([4,32,39,40,44,46,47,48,50,52,53,57,58,59,61,72,74,113,169,187,192,194,196,197,200,204,205,207,208,212,218,220,222,223,224,225,227,229,230,232,236,242,245,263,266,267,268,269,271,272,274,],[12,55,-133,-40,-60,-59,-42,-134,-41,55,-44,55,-45,-43,79,-29,79,79,-53,-145,-52,-148,-73,-64,55,-142,-141,-61,-146,-78,55,-136,-135,-46,-49,-48,-47,-50,-51,-137,-70,-30,-72,-145,-75,-143,-141,-78,-138,-71,-74,]),'SUM':([82,84,85,86,88,90,91,92,93,94,95,97,114,116,117,126,132,134,135,136,138,163,181,185,188,202,203,231,],[-130,-132,-131,-116,-129,-119,-117,-96,-132,-108,-126,-102,-124,-127,-125,-123,-122,-118,157,-128,-104,-101,-111,-120,-103,-109,-148,-121,]),'FLOAT':([4,32,39,40,44,46,47,48,50,52,53,57,58,59,61,72,74,113,169,187,192,194,196,197,200,204,205,207,208,212,218,220,222,223,224,225,227,229,230,232,236,242,245,263,266,267,268,269,271,272,274,],[9,56,-133,-40,-60,-59,-42,-134,-41,56,-44,56,-45,-43,76,-29,76,76,-53,-145,-52,-148,-73,-64,56,-142,-141,-61,-146,-78,56,-136,-135,-46,-49,-48,-47,-50,-51,-137,-70,-30,-72,-145,-75,-143,-141,-78,-138,-71,-74,]),'LIST':([32,39,40,44,46,47,48,50,52,53,58,59,72,169,187,192,194,196,197,200,204,205,207,208,212,218,220,222,223,224,225,227,229,230,232,236,242,245,263,266,267,268,269,271,272,274,],[57,-133,-40,-60,-59,-42,-134,-41,57,-44,-45,-43,-29,-53,-145,-52,-148,-73,-64,57,-142,-141,-61,-146,-78,57,-136,-135,-46,-49,-48,-47,-50,-51,-137,-70,-30,-72,-145,-75,-143,-141,-78,-138,-71,-74,]),'C_S_BRACKET':([82,84,85,88,93,95,114,116,117,126,136,144,156,177,198,199,214,237,246,],[-130,-132,-131,-129,-132,-126,-124,-127,-125,-123,-128,172,185,-67,213,-69,-66,-69,-68,]),'BOOL':([4,32,39,40,44,46,47,48,50,52,53,57,58,59,61,72,74,113,169,187,192,194,196,197,200,204,205,207,208,212,218,220,222,223,224,225,227,229,230,232,236,242,245,263,266,267,268,269,271,272,274,],[11,41,-133,-40,-60,-59,-42,-134,-41,41,-44,41,-45,-43,80,-29,80,80,-53,-145,-52,-148,-73,-64,41,-142,-141,-61,-146,-78,41,-136,-135,-46,-49,-48,-47,-50,-51,-137,-70,-30,-72,-145,-75,-143,-141,-78,-138,-71,-74,]),'LESS_EQUAL':([82,84,85,86,87,88,90,91,92,93,94,95,97,114,116,117,126,132,134,135,136,138,159,163,181,185,186,188,202,203,231,],[-130,-132,-131,-116,124,-129,-119,-117,-96,-132,-108,-126,-102,-124,-127,-125,-123,-122,-118,-98,-128,-104,-95,-101,-111,-120,-97,-103,-109,-148,-121,]),'MAIN':([0,2,3,5,6,10,13,17,22,24,26,27,28,72,179,201,242,],[-2,-7,-7,-3,-6,-34,20,-8,-14,-10,-13,-11,-12,-29,-18,-16,-30,]),'OR':([82,84,85,86,87,88,89,90,91,92,93,94,95,97,114,116,117,123,126,132,134,135,136,138,153,159,163,181,182,185,186,188,202,203,231,],[-130,-132,-131,-116,-84,-129,130,-119,-117,-96,-132,-108,-126,-102,-124,-127,-125,-82,-123,-122,-118,-98,-128,-104,-94,-95,-101,-111,-83,-120,-97,-103,-109,-148,-121,]),'MOD':([82,84,85,86,88,90,91,93,94,95,97,114,116,117,126,132,134,136,138,181,185,202,203,231,],[-130,-132,-131,-116,-129,-119,-117,-132,-108,-126,-102,-124,-127,-125,-123,-122,-118,-128,166,-111,-120,-109,-148,-121,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersinputloop':([195,252,],[209,258,]),'optionalconstants':([199,237,],[214,246,]),'function_end':([10,],[17,]),'functionstatutesloop':([200,218,],[221,240,]),'whileloop':([32,52,],[39,39,]),'parameters':([61,74,],[78,109,]),'check_function_exists':([49,90,],[68,131,]),'add_string_constant_to_dict':([85,],[117,]),'program':([0,],[1,]),'functioncondition':([200,218,],[227,227,]),'add_function_var_to_stack':([217,],[239,]),'main':([13,],[21,]),'start_condition':([147,257,],[175,262,]),'listinit':([32,52,200,218,],[46,46,46,46,]),'functionloops':([200,218,],[224,224,]),'varconstfunction':([62,70,98,99,101,105,115,125,129,143,155,160,165,210,238,239,243,248,250,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'add_float_constant_to_dict':([82,],[114,]),'expression2':([62,70,98,99,101,105,115,129,143,155,210,238,239,243,248,250,],[89,89,89,89,89,89,89,154,89,89,89,89,89,89,89,89,]),'condition':([32,52,],[50,50,]),'term':([62,70,98,99,101,105,115,125,129,143,155,160,165,210,238,239,243,248,250,],[92,92,92,92,92,92,92,92,92,92,92,92,188,92,92,92,92,92,92,]),'end_condition':([212,269,],[236,272,]),'assignation':([32,52,200,218,],[53,53,229,229,]),'list':([148,],[176,]),'functionblock':([178,259,262,265,273,],[201,263,266,268,274,]),'normalinit':([32,52,200,218,],[44,44,44,44,]),'term_quadruple':([97,],[138,]),'add_function_id_to_options':([23,25,],[30,31,]),'add_function_to_global_variables':([30,],[34,]),'functionloop':([2,3,],[5,6,]),'termloop':([138,],[163,]),'start_times':([137,253,],[161,259,]),'parametersinput':([105,155,],[145,184,]),'generate_gosub':([194,203,],[208,231,]),'generate_main_goto':([0,],[2,]),'end_times':([187,263,],[204,267,]),'add_c_parenthesis':([181,],[202,]),'check_current_quadruple':([31,34,],[35,60,]),'end_while':([205,268,],[232,271,]),'functionelse':([266,],[269,]),'check_params_order':([209,],[233,]),'statutesloop':([32,52,],[54,71,]),'function_with_return_def':([14,16,18,19,],[22,26,27,28,]),'add_int_constant_to_dict':([88,],[126,]),'exp_quadruple':([92,],[135,]),'fill_main_goto':([5,],[13,]),'writtingloop':([64,191,],[100,206,]),'expression':([62,70,98,99,101,105,115,143,155,210,238,239,243,248,250,],[96,107,139,140,142,146,152,171,146,234,247,249,251,254,256,]),'block':([29,150,161,175,189,235,],[33,179,187,196,205,245,]),'expressionoptional':([89,],[128,]),'start_main':([20,],[29,]),'functionstatute':([200,218,],[218,218,]),'functiontimesloop':([200,218,],[220,220,]),'relop_quadruple':([153,],[182,]),'print_quadruple':([140,],[168,]),'add_function_init_to_dict':([111,149,],[150,178,]),'add_bool_constant_to_dict':([84,93,],[116,136,]),'init':([32,52,200,218,],[40,40,223,223,]),'add_to_stack':([49,90,],[69,132,]),'functionwhileloop':([200,218,],[222,222,]),'listaccess':([67,69,],[103,106,]),'var':([43,73,],[66,108,]),'type':([32,52,57,200,218,],[43,43,73,43,43,]),'start_while':([37,219,],[63,241,]),'function':([2,3,],[3,3,]),'writting':([32,52,200,218,],[47,47,225,225,]),'condition_while':([167,261,],[189,265,]),'else':([196,],[212,]),'start_printing':([64,191,],[99,99,]),'functionreturn':([200,218,],[226,226,]),'generate_parameter_quadruple':([174,244,],[195,252,]),'add_equals':([65,102,],[101,143,]),'varconst':([62,70,98,99,101,105,115,125,129,143,155,160,165,210,238,239,243,248,250,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'logic_op_quadruple':([154,],[183,]),'listelements':([177,],[198,]),'push_type_to_function_options':([146,234,],[174,244,]),'functionorlist':([90,],[134,]),'booleanconst':([62,70,98,99,101,105,115,125,129,143,155,160,165,177,210,215,238,239,243,248,250,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'loop':([32,52,],[59,59,]),'parametersloop':([81,151,],[112,180,]),'equals_quadruple':([142,171,],[170,193,]),'add_o_parenthesis':([83,],[115,]),'exploop':([135,],[159,]),'addsub':([135,],[160,]),'logicop':([89,],[129,]),'parameterinit':([61,74,113,],[81,81,151,]),'function_head':([4,],[10,]),'expression2optional':([87,],[123,]),'divmult':([138,],[165,]),'var_assign':([32,52,200,218,],[42,42,42,42,]),'function_def':([15,],[24,]),'timesloop':([32,52,],[48,48,]),'add_function_type_to_options':([7,8,9,11,12,],[14,15,16,18,19,]),'constants':([62,70,98,99,101,105,115,125,129,143,155,160,165,177,210,215,238,239,243,248,250,],[91,91,91,91,91,91,91,91,91,91,91,91,91,199,91,237,91,91,91,91,91,]),'parametertype':([61,74,113,],[75,75,75,]),'statute':([32,52,],[52,52,]),'relop':([87,],[125,]),'optionalwritting':([168,],[190,]),'functioncall':([32,52,200,218,],[58,58,230,230,]),'exp':([62,70,98,99,101,105,115,125,129,143,155,160,210,238,239,243,248,250,],[87,87,87,87,87,87,87,153,87,87,87,186,87,87,87,87,87,87,]),'else_condition':([211,270,],[235,273,]),'fact':([62,70,98,99,101,105,115,125,129,143,155,160,165,210,238,239,243,248,250,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> generate_main_goto functionloop fill_main_goto main','program',4,'p_program','parser.py',13),
  ('generate_main_goto -> <empty>','generate_main_goto',0,'p_generate_main_goto','parser.py',17),
  ('fill_main_goto -> <empty>','fill_main_goto',0,'p_fill_main_goto','parser.py',21),
  ('main -> MAIN start_main block','main',3,'p_main','parser.py',26),
  ('start_main -> <empty>','start_main',0,'p_start_main','parser.py',30),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',35),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',36),
  ('function -> FUNCTION function_head function_end','function',3,'p_function','parser.py',40),
  ('add_function_init_to_dict -> <empty>','add_function_init_to_dict',0,'p_add_function_init_to_dict','parser.py',53),
  ('function_head -> VOID add_function_type_to_options function_def','function_head',3,'p_function_head','parser.py',59),
  ('function_head -> BOOL add_function_type_to_options function_with_return_def','function_head',3,'p_function_head','parser.py',60),
  ('function_head -> INT add_function_type_to_options function_with_return_def','function_head',3,'p_function_head','parser.py',61),
  ('function_head -> FLOAT add_function_type_to_options function_with_return_def','function_head',3,'p_function_head','parser.py',62),
  ('function_head -> STRING add_function_type_to_options function_with_return_def','function_head',3,'p_function_head','parser.py',63),
  ('add_function_type_to_options -> <empty>','add_function_type_to_options',0,'p_add_function_type_to_options','parser.py',67),
  ('function_with_return_def -> ID add_function_id_to_options add_function_to_global_variables check_current_quadruple O_PARENTHESIS parameters C_PARENTHESIS add_function_init_to_dict functionblock','function_with_return_def',9,'p_function_with_return_def','parser.py',72),
  ('add_function_to_global_variables -> <empty>','add_function_to_global_variables',0,'p_add_function_to_global_variables','parser.py',76),
  ('function_def -> ID add_function_id_to_options check_current_quadruple O_PARENTHESIS parameters C_PARENTHESIS add_function_init_to_dict block','function_def',8,'p_function_def','parser.py',80),
  ('check_current_quadruple -> <empty>','check_current_quadruple',0,'p_check_current_quadruple','parser.py',84),
  ('add_function_id_to_options -> <empty>','add_function_id_to_options',0,'p_add_function_id_to_options','parser.py',88),
  ('type -> BOOL','type',1,'p_type','parser.py',93),
  ('type -> INT','type',1,'p_type','parser.py',94),
  ('type -> FLOAT','type',1,'p_type','parser.py',95),
  ('type -> STRING','type',1,'p_type','parser.py',96),
  ('parametertype -> BOOL','parametertype',1,'p_parametertype','parser.py',102),
  ('parametertype -> INT','parametertype',1,'p_parametertype','parser.py',103),
  ('parametertype -> FLOAT','parametertype',1,'p_parametertype','parser.py',104),
  ('parametertype -> STRING','parametertype',1,'p_parametertype','parser.py',105),
  ('block -> O_BRACKET statutesloop C_BRACKET','block',3,'p_block','parser.py',111),
  ('functionblock -> O_BRACKET functionstatutesloop C_BRACKET','functionblock',3,'p_functionblock','parser.py',115),
  ('functionreturn -> RETURN add_function_var_to_stack O_BRACKET expression C_BRACKET SEMICOLON','functionreturn',6,'p_functionreturn','parser.py',119),
  ('functionreturn -> RETURN add_function_var_to_stack expression SEMICOLON','functionreturn',4,'p_functionreturn','parser.py',120),
  ('add_function_var_to_stack -> <empty>','add_function_var_to_stack',0,'p_add_function_var_to_stack','parser.py',126),
  ('function_end -> <empty>','function_end',0,'p_function_end','parser.py',130),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',136),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',137),
  ('functionstatutesloop -> functionstatute functionstatutesloop','functionstatutesloop',2,'p_functionstatutesloopp','parser.py',140),
  ('functionstatutesloop -> functionreturn','functionstatutesloop',1,'p_functionstatutesloopp','parser.py',141),
  ('functionstatutesloop -> <empty>','functionstatutesloop',0,'p_functionstatutesloopp','parser.py',142),
  ('statute -> init','statute',1,'p_statute','parser.py',146),
  ('statute -> condition','statute',1,'p_statute','parser.py',147),
  ('statute -> writting','statute',1,'p_statute','parser.py',148),
  ('statute -> loop','statute',1,'p_statute','parser.py',149),
  ('statute -> assignation','statute',1,'p_statute','parser.py',150),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',151),
  ('functionstatute -> init','functionstatute',1,'p_functionstatute','parser.py',154),
  ('functionstatute -> functioncondition','functionstatute',1,'p_functionstatute','parser.py',155),
  ('functionstatute -> writting','functionstatute',1,'p_functionstatute','parser.py',156),
  ('functionstatute -> functionloops','functionstatute',1,'p_functionstatute','parser.py',157),
  ('functionstatute -> assignation','functionstatute',1,'p_functionstatute','parser.py',158),
  ('functionstatute -> functioncall','functionstatute',1,'p_functionstatute','parser.py',159),
  ('assignation -> var_assign EQUALS add_equals expression equals_quadruple SEMICOLON','assignation',6,'p_assignation','parser.py',163),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',170),
  ('start_printing -> <empty>','start_printing',0,'p_start_printing','parser.py',175),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',179),
  ('writtingloop -> start_printing expression print_quadruple optionalwritting','writtingloop',4,'p_writtingloop','parser.py',188),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',192),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',193),
  ('init -> listinit','init',1,'p_init','parser.py',196),
  ('init -> normalinit','init',1,'p_init','parser.py',197),
  ('normalinit -> type var EQUALS add_equals expression equals_quadruple SEMICOLON','normalinit',7,'p_normalinit','parser.py',203),
  ('equals_quadruple -> <empty>','equals_quadruple',0,'p_equals_quadruple','parser.py',206),
  ('add_equals -> <empty>','add_equals',0,'p_add_equals','parser.py',215),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',220),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',224),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',228),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',229),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',232),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',233),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS start_condition block else end_condition','condition',8,'p_condition','parser.py',237),
  ('functioncondition -> IF O_PARENTHESIS expression C_PARENTHESIS start_condition functionblock functionelse end_condition','functioncondition',8,'p_functioncondition','parser.py',240),
  ('else -> ELSE else_condition block','else',3,'p_else','parser.py',244),
  ('else -> <empty>','else',0,'p_else','parser.py',245),
  ('functionelse -> ELSE else_condition functionblock','functionelse',3,'p_functionelse','parser.py',248),
  ('functionelse -> <empty>','functionelse',0,'p_functionelse','parser.py',249),
  ('start_condition -> <empty>','start_condition',0,'p_start_condition','parser.py',253),
  ('else_condition -> <empty>','else_condition',0,'p_else_condition','parser.py',257),
  ('end_condition -> <empty>','end_condition',0,'p_end_condition','parser.py',261),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',266),
  ('expressionoptional -> logicop expression2 logic_op_quadruple','expressionoptional',3,'p_expressionoptional','parser.py',269),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',270),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',273),
  ('expression2optional -> relop exp relop_quadruple','expression2optional',3,'p_expression2optional','parser.py',276),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',277),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',281),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',282),
  ('logic_op_quadruple -> <empty>','logic_op_quadruple',0,'p_logic_op_quadruple','parser.py',286),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',293),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',294),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',295),
  ('relop -> LESS','relop',1,'p_relop','parser.py',296),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',297),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',298),
  ('relop_quadruple -> <empty>','relop_quadruple',0,'p_relop_quadruple','parser.py',302),
  ('exp -> term exp_quadruple exploop','exp',3,'p_exp','parser.py',309),
  ('exp_quadruple -> <empty>','exp_quadruple',0,'p_exp_quadruple','parser.py',312),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',319),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',320),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',323),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',324),
  ('term -> fact term_quadruple termloop','term',3,'p_term','parser.py',329),
  ('term_quadruple -> <empty>','term_quadruple',0,'p_term_quadruple','parser.py',332),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',339),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',340),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',344),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',345),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',346),
  ('fact -> varconst','fact',1,'p_fact','parser.py',351),
  ('fact -> O_PARENTHESIS add_o_parenthesis expression C_PARENTHESIS add_c_parenthesis','fact',5,'p_fact','parser.py',352),
  ('add_o_parenthesis -> <empty>','add_o_parenthesis',0,'p_add_o_parenthesis','parser.py',355),
  ('add_c_parenthesis -> <empty>','add_c_parenthesis',0,'p_add_c_parenthesis','parser.py',359),
  ('var_assign -> ID add_to_stack listaccess','var_assign',3,'p_var_assign','parser.py',363),
  ('var -> ID listaccess','var',2,'p_var','parser.py',375),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',391),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',392),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',396),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',397),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',400),
  ('add_to_stack -> <empty>','add_to_stack',0,'p_add_to_stack','parser.py',403),
  ('functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET','functionorlist',3,'p_functionorlist','parser.py',407),
  ('functionorlist -> check_function_exists O_PARENTHESIS parametersinput C_PARENTHESIS generate_gosub','functionorlist',5,'p_functionorlist','parser.py',408),
  ('functionorlist -> add_to_stack','functionorlist',1,'p_functionorlist','parser.py',409),
  ('constants -> INTCONST add_int_constant_to_dict','constants',2,'p_constants','parser.py',413),
  ('constants -> FLOATCONST add_float_constant_to_dict','constants',2,'p_constants','parser.py',414),
  ('constants -> STRINGCONST add_string_constant_to_dict','constants',2,'p_constants','parser.py',415),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',416),
  ('booleanconst -> TRUE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',420),
  ('booleanconst -> FALSE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',421),
  ('add_int_constant_to_dict -> <empty>','add_int_constant_to_dict',0,'p_add_int_constant_to_dict','parser.py',424),
  ('add_float_constant_to_dict -> <empty>','add_float_constant_to_dict',0,'p_add_float_constant_to_dict','parser.py',428),
  ('add_string_constant_to_dict -> <empty>','add_string_constant_to_dict',0,'p_add_string_constant_to_dict','parser.py',432),
  ('add_bool_constant_to_dict -> <empty>','add_bool_constant_to_dict',0,'p_add_bool_constant_to_dict','parser.py',436),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',441),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',442),
  ('functionloops -> functionwhileloop','functionloops',1,'p_functionloops','parser.py',445),
  ('functionloops -> functiontimesloop','functionloops',1,'p_functionloops','parser.py',446),
  ('whileloop -> WHILE start_while O_PARENTHESIS expression C_PARENTHESIS condition_while block end_while','whileloop',8,'p_whileloop','parser.py',450),
  ('functionwhileloop -> WHILE start_while O_PARENTHESIS expression C_PARENTHESIS condition_while functionblock end_while','functionwhileloop',8,'p_functionwhileloop','parser.py',453),
  ('start_while -> <empty>','start_while',0,'p_start_while','parser.py',456),
  ('condition_while -> <empty>','condition_while',0,'p_condition_while','parser.py',460),
  ('end_while -> <empty>','end_while',0,'p_end_while','parser.py',464),
  ('timesloop -> TIMES O_PARENTHESIS expression C_PARENTHESIS start_times block end_times','timesloop',7,'p_timesloop','parser.py',469),
  ('functiontimesloop -> TIMES O_PARENTHESIS expression C_PARENTHESIS start_times functionblock end_times','functiontimesloop',7,'p_functiontimesloop','parser.py',473),
  ('start_times -> <empty>','start_times',0,'p_start_times','parser.py',476),
  ('end_times -> <empty>','end_times',0,'p_end_times','parser.py',480),
  ('functioncall -> ID check_function_exists O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON generate_gosub','functioncall',7,'p_functioncall','parser.py',485),
  ('check_function_exists -> <empty>','check_function_exists',0,'p_check_function_exists','parser.py',490),
  ('generate_gosub -> <empty>','generate_gosub',0,'p_generate_gosub','parser.py',495),
  ('parametersinput -> expression push_type_to_function_options generate_parameter_quadruple parametersinputloop check_params_order','parametersinput',5,'p_parametersinput','parser.py',500),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',501),
  ('parametersinputloop -> COMMA expression push_type_to_function_options generate_parameter_quadruple parametersinputloop','parametersinputloop',5,'p_parametersinputloop','parser.py',505),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',506),
  ('push_type_to_function_options -> <empty>','push_type_to_function_options',0,'p_push_type_to_function_options','parser.py',509),
  ('check_params_order -> <empty>','check_params_order',0,'p_check_params_order','parser.py',513),
  ('generate_parameter_quadruple -> <empty>','generate_parameter_quadruple',0,'p_generate_parameter_quadruple','parser.py',517),
  ('parameters -> parameterinit parametersloop','parameters',2,'p_parameters','parser.py',522),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',523),
  ('parameterinit -> parametertype ID','parameterinit',2,'p_parameterinit','parser.py',526),
  ('parametersloop -> COMMA parameterinit parametersloop','parametersloop',3,'p_parametersloop','parser.py',537),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',538),
]
