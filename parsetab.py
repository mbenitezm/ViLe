
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '+V\xbd\x0c\xad\x1cV>T\xc4\x88\x03\x9cm(e'
    
_lr_action_items = {'RETURN':([7,20,21,24,25,26,27,29,31,32,33,35,36,48,80,114,125,132,134,136,137,139,149,150,154,],[-16,-83,-17,-29,-28,-19,-84,-18,-16,-21,49,-22,-20,-15,-12,-23,-86,-85,-24,-30,-87,-39,-37,-31,-38,]),'LESS':([54,56,57,58,59,61,62,63,64,65,66,67,69,91,94,107,126,130,133,145,146,],[-78,-81,-79,-71,-77,-76,-72,-56,-82,-65,-80,101,-61,-73,-54,-59,-66,-55,-60,-74,-75,]),'VOID':([5,],[13,]),'O_PARENTHESIS':([17,18,19,28,30,37,39,40,41,46,47,49,55,61,73,86,87,89,92,93,95,96,97,98,99,100,101,103,104,106,108,109,110,113,119,],[38,39,40,46,47,52,55,55,55,55,55,55,55,92,55,-46,55,-47,55,-57,55,-58,-53,-48,-49,-50,-51,-52,55,-63,-62,55,-64,55,55,]),'ELSE':([80,139,],[-12,148,]),'FLOATCONST':([39,40,41,46,47,49,55,73,86,87,89,92,93,95,96,97,98,99,100,101,103,104,106,108,109,110,113,119,141,157,],[54,54,54,54,54,54,54,54,-46,54,-47,54,-57,54,-58,-53,-48,-49,-50,-51,-52,54,-63,-62,54,-64,54,54,54,54,]),'WHILE':([7,20,21,24,25,26,27,29,31,32,35,36,80,114,125,132,134,136,137,139,149,150,154,],[18,-83,-17,-29,-28,-19,-84,-18,18,-21,-22,-20,-12,-23,-86,-85,-24,-30,-87,-39,-37,-31,-38,]),'GREATER':([54,56,57,58,59,61,62,63,64,65,66,67,69,91,94,107,126,130,133,145,146,],[-78,-81,-79,-71,-77,-76,-72,-56,-82,-65,-80,99,-61,-73,-54,-59,-66,-55,-60,-74,-75,]),'C_BRACKET':([7,20,21,24,25,26,27,29,31,32,33,35,36,48,50,80,114,121,125,132,134,136,137,139,149,150,154,],[-16,-83,-17,-29,-28,-19,-84,-18,-16,-21,-14,-22,-20,-15,80,-12,-23,-13,-86,-85,-24,-30,-87,-39,-37,-31,-38,]),'PRINT':([7,20,21,24,25,26,27,29,31,32,35,36,80,114,125,132,134,136,137,139,149,150,154,],[19,-83,-17,-29,-28,-19,-84,-18,19,-21,-22,-20,-12,-23,-86,-85,-24,-30,-87,-39,-37,-31,-38,]),'C_PARENTHESIS':([46,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,82,85,88,91,92,94,102,107,112,118,124,126,127,129,130,131,133,135,138,143,145,146,147,158,160,],[-89,-93,84,-78,-81,-79,-71,-77,-42,-76,-72,-56,-82,-65,-80,-45,105,-61,111,-27,117,-91,120,123,126,-40,-73,-89,-54,-43,-59,-25,-88,-95,-66,-41,146,-55,-44,-60,-26,-91,-92,-74,-75,-90,-95,-94,]),'TRUE':([39,40,41,46,47,49,55,73,86,87,89,92,93,95,96,97,98,99,100,101,103,104,106,108,109,110,113,119,141,157,],[56,56,56,56,56,56,56,56,-46,56,-47,56,-57,56,-58,-53,-48,-49,-50,-51,-52,56,-63,-62,56,-64,56,56,56,56,]),'MINUS':([54,56,57,58,59,61,62,63,64,65,66,69,91,107,126,133,145,146,],[-78,-81,-79,-71,-77,-76,-72,96,-82,-65,-80,-61,-73,-59,-66,-60,-74,-75,]),'DIVIDE':([54,56,57,58,59,61,62,64,65,66,69,91,126,145,146,],[-78,-81,-79,-71,-77,-76,-72,-82,-65,-80,106,-73,-66,-74,-75,]),'O_BRACKET':([3,84,105,120,123,148,],[7,7,7,7,7,7,]),'EQUALITY':([54,56,57,58,59,61,62,63,64,65,66,67,69,91,94,107,126,130,133,145,146,],[-78,-81,-79,-71,-77,-76,-72,-56,-82,-65,-80,98,-61,-73,-54,-59,-66,-55,-60,-74,-75,]),'SEMICOLON':([54,56,57,58,59,60,61,62,63,64,65,66,67,69,72,79,88,91,94,102,107,111,115,117,126,127,130,131,133,140,145,146,155,],[-78,-81,-79,-71,-77,-42,-76,-72,-56,-82,-65,-80,-45,-61,114,121,-40,-73,-54,-43,-59,134,136,137,-66,-41,-55,-44,-60,150,-74,-75,-32,]),'STRINGCONST':([39,40,41,46,47,49,55,73,86,87,89,92,93,95,96,97,98,99,100,101,103,104,106,108,109,110,113,119,141,157,],[57,57,57,57,57,57,57,57,-46,57,-47,57,-57,57,-58,-53,-48,-49,-50,-51,-52,57,-63,-62,57,-64,57,57,57,57,]),'COMMA':([54,56,57,58,59,60,61,62,63,64,65,66,67,69,71,77,88,91,94,102,107,124,126,127,130,131,133,138,145,146,152,158,159,],[-78,-81,-79,-71,-77,-42,-76,-72,-56,-82,-65,-80,-45,-61,113,119,-40,-73,-54,-43,-59,144,-66,-41,-55,-44,-60,119,-74,-75,157,144,157,]),'SUM':([54,56,57,58,59,61,62,63,64,65,66,69,91,107,126,133,145,146,],[-78,-81,-79,-71,-77,-76,-72,93,-82,-65,-80,-61,-73,-59,-66,-60,-74,-75,]),'$end':([1,2,4,6,8,9,80,142,],[-4,0,-4,-1,-2,-3,-12,-5,]),'FUNCTION':([1,4,8,80,142,],[5,5,-2,-12,-5,]),'DIFFERENT':([54,56,57,58,59,61,62,63,64,65,66,67,69,91,94,107,126,130,133,145,146,],[-78,-81,-79,-71,-77,-76,-72,-56,-82,-65,-80,97,-61,-73,-54,-59,-66,-55,-60,-74,-75,]),'STRING':([5,7,20,21,24,25,26,27,29,31,32,34,35,36,52,80,114,125,132,134,136,137,139,144,149,150,154,],[10,10,-83,-17,-29,-28,-19,-84,-18,10,-21,10,-22,-20,10,-12,-23,-86,-85,-24,-30,-87,-39,10,-37,-31,-38,]),'EQUALS':([22,28,42,43,45,74,81,116,],[41,-70,73,-70,-67,-68,122,-69,]),'TIMES':([7,20,21,24,25,26,27,29,31,32,35,36,80,114,125,132,134,136,137,139,149,150,154,],[17,-83,-17,-29,-28,-19,-84,-18,17,-21,-22,-20,-12,-23,-86,-85,-24,-30,-87,-39,-37,-31,-38,]),'INTCONST':([38,39,40,41,44,46,47,49,55,73,86,87,89,90,92,93,95,96,97,98,99,100,101,103,104,106,108,109,110,113,119,141,157,],[53,59,59,59,75,59,59,59,59,59,-46,59,-47,128,59,-57,59,-58,-53,-48,-49,-50,-51,-52,59,-63,-62,59,-64,59,59,59,59,]),'O_S_BRACKET':([28,43,61,122,],[44,44,90,141,]),'ID':([7,10,11,12,13,14,15,16,20,21,23,24,25,26,27,29,31,32,35,36,39,40,41,46,47,49,51,55,73,80,83,86,87,89,92,93,95,96,97,98,99,100,101,103,104,106,108,109,110,113,114,119,125,132,134,136,137,139,149,150,153,154,],[28,-11,-9,-7,-6,-10,-8,37,-83,-17,43,-29,-28,-19,-84,-18,28,-21,-22,-20,61,61,61,61,61,61,43,61,61,-12,124,-46,61,-47,61,-57,61,-58,-53,-48,-49,-50,-51,-52,61,-63,-62,61,-64,61,-23,61,-86,-85,-24,-30,-87,-39,-37,-31,158,-38,]),'IF':([7,20,21,24,25,26,27,29,31,32,35,36,80,114,125,132,134,136,137,139,149,150,154,],[30,-83,-17,-29,-28,-19,-84,-18,30,-21,-22,-20,-12,-23,-86,-85,-24,-30,-87,-39,-37,-31,-38,]),'AND':([54,56,57,58,59,60,61,62,63,64,65,66,67,69,91,94,102,107,126,130,131,133,145,146,],[-78,-81,-79,-71,-77,86,-76,-72,-56,-82,-65,-80,-45,-61,-73,-54,-43,-59,-66,-55,-44,-60,-74,-75,]),'FALSE':([39,40,41,46,47,49,55,73,86,87,89,92,93,95,96,97,98,99,100,101,103,104,106,108,109,110,113,119,141,157,],[64,64,64,64,64,64,64,64,-46,64,-47,64,-57,64,-58,-53,-48,-49,-50,-51,-52,64,-63,-62,64,-64,64,64,64,64,]),'GREATER_EQUAL':([54,56,57,58,59,61,62,63,64,65,66,67,69,91,94,107,126,130,133,145,146,],[-78,-81,-79,-71,-77,-76,-72,-56,-82,-65,-80,100,-61,-73,-54,-59,-66,-55,-60,-74,-75,]),'MULTIPLY':([54,56,57,58,59,61,62,64,65,66,69,91,126,145,146,],[-78,-81,-79,-71,-77,-76,-72,-82,-65,-80,108,-73,-66,-74,-75,]),'INT':([5,7,20,21,24,25,26,27,29,31,32,34,35,36,52,80,114,125,132,134,136,137,139,144,149,150,154,],[11,11,-83,-17,-29,-28,-19,-84,-18,11,-21,11,-22,-20,11,-12,-23,-86,-85,-24,-30,-87,-39,11,-37,-31,-38,]),'FLOAT':([5,7,20,21,24,25,26,27,29,31,32,34,35,36,52,80,114,125,132,134,136,137,139,144,149,150,154,],[14,14,-83,-17,-29,-28,-19,-84,-18,14,-21,14,-22,-20,14,-12,-23,-86,-85,-24,-30,-87,-39,14,-37,-31,-38,]),'LIST':([7,20,21,24,25,26,27,29,31,32,35,36,80,114,125,132,134,136,137,139,149,150,154,],[34,-83,-17,-29,-28,-19,-84,-18,34,-21,-22,-20,-12,-23,-86,-85,-24,-30,-87,-39,-37,-31,-38,]),'C_S_BRACKET':([54,56,57,59,64,66,75,128,141,151,152,156,159,161,],[-78,-81,-79,-77,-82,-80,116,145,-34,155,-36,-33,-36,-35,]),'BOOL':([5,7,20,21,24,25,26,27,29,31,32,34,35,36,52,80,114,125,132,134,136,137,139,144,149,150,154,],[15,15,-83,-17,-29,-28,-19,-84,-18,15,-21,15,-22,-20,15,-12,-23,-86,-85,-24,-30,-87,-39,15,-37,-31,-38,]),'LESS_EQUAL':([54,56,57,58,59,61,62,63,64,65,66,67,69,91,94,107,126,130,133,145,146,],[-78,-81,-79,-71,-77,-76,-72,-56,-82,-65,-80,103,-61,-73,-54,-59,-66,-55,-60,-74,-75,]),'MAIN':([0,],[3,]),'OR':([54,56,57,58,59,60,61,62,63,64,65,66,67,69,91,94,102,107,126,130,131,133,145,146,],[-78,-81,-79,-71,-77,89,-76,-72,-56,-82,-65,-80,-45,-61,-73,-54,-43,-59,-66,-55,-44,-60,-74,-75,]),'MOD':([54,56,57,58,59,61,62,64,65,66,69,91,126,145,146,],[-78,-81,-79,-71,-77,-76,-72,-82,-65,-80,110,-73,-66,-74,-75,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersloop':([124,158,],[143,160,]),'parametersinputloop':([77,138,],[118,147,]),'functionorlist':([61,],[91,]),'optionalconstants':([152,159,],[156,161,]),'expressionoptional':([60,],[88,]),'exploop':([63,],[94,]),'divmult':([69,],[109,]),'addsub':([63,],[95,]),'logicop':([60,],[87,]),'functionloop':([1,4,],[6,9,]),'whileloop':([7,31,],[20,20,]),'parameters':([52,],[82,]),'termloop':([69,],[107,]),'fact':([39,40,41,46,47,49,55,73,87,92,95,104,109,113,119,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'init':([7,31,],[21,21,]),'program':([0,],[2,]),'listaccess':([28,43,],[45,74,]),'constants':([39,40,41,46,47,49,55,73,87,92,95,104,109,113,119,141,157,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,152,159,]),'expression2optional':([67,],[102,]),'var':([23,51,],[42,81,]),'var_assign':([7,31,],[22,22,]),'type':([5,7,31,34,52,144,],[12,23,23,51,83,153,]),'normalinit':([7,31,],[24,24,]),'function':([1,4,],[4,4,]),'listinit':([7,31,],[25,25,]),'parametersinput':([46,92,],[76,129,]),'writting':([7,31,],[26,26,]),'else':([139,],[149,]),'varconstfunction':([39,40,41,46,47,49,55,73,87,92,95,104,109,113,119,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'functionreturn':([33,],[50,]),'timesloop':([7,31,],[27,27,]),'expression2':([39,40,41,46,47,49,55,73,87,92,113,119,],[60,60,60,60,60,60,60,60,127,60,60,60,]),'condition':([7,31,],[29,29,]),'relop':([67,],[104,]),'statute':([7,31,],[31,31,]),'term':([39,40,41,46,47,49,55,73,87,92,95,104,109,113,119,],[63,63,63,63,63,63,63,63,63,63,63,63,133,63,63,]),'main':([0,],[1,]),'assignation':([7,31,],[32,32,]),'statutesloop':([7,31,],[33,48,]),'varconst':([39,40,41,46,47,49,55,73,87,92,95,104,109,113,119,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'booleanconst':([39,40,41,46,47,49,55,73,87,92,95,104,109,113,119,141,157,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'list':([122,],[140,]),'expression':([39,40,41,46,47,49,55,73,92,113,119,],[68,71,72,77,78,79,85,115,77,71,138,]),'listelements':([141,],[151,]),'optionalwritting':([71,],[112,]),'functioncall':([7,31,],[35,35,]),'block':([3,84,105,120,123,148,],[8,125,132,139,142,154,]),'exp':([39,40,41,46,47,49,55,73,87,92,95,104,113,119,],[67,67,67,67,67,67,67,67,67,67,130,131,67,67,]),'writtingloop':([40,113,],[70,135,]),'functiontype':([5,],[16,]),'loop':([7,31,],[36,36,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> main functionloop','program',2,'p_program','parser.py',13),
  ('main -> MAIN block','main',2,'p_main','parser.py',18),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',22),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',23),
  ('function -> FUNCTION functiontype ID O_PARENTHESIS parameters C_PARENTHESIS block','function',7,'p_function','parser.py',27),
  ('functiontype -> VOID','functiontype',1,'p_functiontype','parser.py',31),
  ('functiontype -> type','functiontype',1,'p_functiontype','parser.py',32),
  ('type -> BOOL','type',1,'p_type','parser.py',37),
  ('type -> INT','type',1,'p_type','parser.py',38),
  ('type -> FLOAT','type',1,'p_type','parser.py',39),
  ('type -> STRING','type',1,'p_type','parser.py',40),
  ('block -> O_BRACKET statutesloop functionreturn C_BRACKET','block',4,'p_block','parser.py',45),
  ('functionreturn -> RETURN expression SEMICOLON','functionreturn',3,'p_functionreturn','parser.py',49),
  ('functionreturn -> <empty>','functionreturn',0,'p_functionreturn','parser.py',50),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',55),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',56),
  ('statute -> init','statute',1,'p_statute','parser.py',60),
  ('statute -> condition','statute',1,'p_statute','parser.py',61),
  ('statute -> writting','statute',1,'p_statute','parser.py',62),
  ('statute -> loop','statute',1,'p_statute','parser.py',63),
  ('statute -> assignation','statute',1,'p_statute','parser.py',64),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',65),
  ('assignation -> var_assign EQUALS expression SEMICOLON','assignation',4,'p_assignation','parser.py',69),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',73),
  ('writtingloop -> expression optionalwritting','writtingloop',2,'p_writtingloop','parser.py',77),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',81),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',82),
  ('init -> listinit','init',1,'p_init','parser.py',85),
  ('init -> normalinit','init',1,'p_init','parser.py',86),
  ('normalinit -> type var EQUALS expression SEMICOLON','normalinit',5,'p_normalinit','parser.py',90),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',94),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',98),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',102),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',103),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',106),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',107),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS block else','condition',6,'p_condition','parser.py',111),
  ('else -> ELSE block','else',2,'p_else','parser.py',115),
  ('else -> <empty>','else',0,'p_else','parser.py',116),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',120),
  ('expressionoptional -> logicop expression2','expressionoptional',2,'p_expressionoptional','parser.py',123),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',124),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',127),
  ('expression2optional -> relop exp','expression2optional',2,'p_expression2optional','parser.py',130),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',131),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',135),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',136),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',140),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',141),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',142),
  ('relop -> LESS','relop',1,'p_relop','parser.py',143),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',144),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',145),
  ('exp -> term exploop','exp',2,'p_exp','parser.py',149),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',153),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',154),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',157),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',158),
  ('term -> fact termloop','term',2,'p_term','parser.py',161),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',165),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',166),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',169),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',170),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',171),
  ('fact -> varconst','fact',1,'p_fact','parser.py',174),
  ('fact -> O_PARENTHESIS expression C_PARENTHESIS','fact',3,'p_fact','parser.py',175),
  ('var_assign -> ID listaccess','var_assign',2,'p_var_assign','parser.py',177),
  ('var -> ID listaccess','var',2,'p_var','parser.py',181),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',191),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',192),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',195),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',196),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',199),
  ('functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET','functionorlist',3,'p_functionorlist','parser.py',202),
  ('functionorlist -> O_PARENTHESIS parametersinput C_PARENTHESIS','functionorlist',3,'p_functionorlist','parser.py',203),
  ('functionorlist -> <empty>','functionorlist',0,'p_functionorlist','parser.py',204),
  ('constants -> INTCONST','constants',1,'p_constants','parser.py',208),
  ('constants -> FLOATCONST','constants',1,'p_constants','parser.py',209),
  ('constants -> STRINGCONST','constants',1,'p_constants','parser.py',210),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',211),
  ('booleanconst -> TRUE','booleanconst',1,'p_booleanconst','parser.py',215),
  ('booleanconst -> FALSE','booleanconst',1,'p_booleanconst','parser.py',216),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',220),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',221),
  ('whileloop -> WHILE O_PARENTHESIS expression C_PARENTHESIS block','whileloop',5,'p_whileloop','parser.py',225),
  ('timesloop -> TIMES O_PARENTHESIS INTCONST C_PARENTHESIS block','timesloop',5,'p_timesloop','parser.py',229),
  ('functioncall -> ID O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON','functioncall',5,'p_functioncall','parser.py',233),
  ('parametersinput -> expression parametersinputloop','parametersinput',2,'p_parametersinput','parser.py',237),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',238),
  ('parametersinputloop -> COMMA expression parametersinputloop','parametersinputloop',3,'p_parametersinputloop','parser.py',242),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',243),
  ('parameters -> type ID parametersloop','parameters',3,'p_parameters','parser.py',247),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',248),
  ('parametersloop -> COMMA type ID parametersloop','parametersloop',4,'p_parametersloop','parser.py',258),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',259),
]
