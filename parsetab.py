
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xd1i\xed!\x9e\x19\x05\x97\xc1fu\x1c\x80E\xea>'
    
_lr_action_items = {'RETURN':([19,20,24,26,27,28,30,32,33,38,39,57,58,139,142,148,165,172,182,183,186,188,190,193,199,201,206,],[-112,-28,-42,-41,-30,-113,-29,-27,-32,-33,-31,-26,-21,-118,-35,-119,-27,-34,-54,-46,197,-117,-43,-57,-114,-52,-53,]),'LESS':([71,73,74,75,76,78,80,81,82,83,84,85,87,105,107,108,118,123,125,127,128,131,154,158,174,177,178,179,181,191,],[-109,-111,-110,-95,113,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-77,-107,-83,-74,-80,-90,-99,-100,-76,-82,-88,]),'VOID':([5,],[11,]),'O_PARENTHESIS':([16,17,18,29,31,41,43,49,50,51,55,56,63,64,66,67,72,80,103,106,109,110,111,112,113,115,116,119,121,122,126,130,152,153,155,157,159,160,161,171,197,203,],[48,-115,50,55,56,60,61,63,-36,-45,72,72,72,72,72,-45,-89,126,72,72,-72,-67,-68,-69,-70,-71,72,-64,72,-65,72,72,-78,-79,72,-85,-84,72,-86,-36,72,72,]),'ELSE':([58,182,],[-21,192,]),'FLOATCONST':([50,51,55,56,63,64,66,67,72,103,106,109,110,111,112,113,115,116,119,121,122,126,130,152,153,155,157,159,160,161,164,171,196,197,203,],[-36,-45,71,71,71,71,71,-45,-89,71,71,-72,-67,-68,-69,-70,-71,71,-64,71,-65,71,71,-78,-79,71,-85,-84,71,-86,71,-36,71,71,71,]),'WHILE':([7,19,20,24,26,27,28,30,32,33,38,39,58,139,142,148,165,172,182,183,188,190,193,199,201,206,],[17,-112,-28,-42,-41,-30,-113,-29,17,-32,-33,-31,-21,-118,-35,-119,17,-34,-54,-46,-117,-43,-57,-114,-52,-53,]),'GREATER':([71,73,74,75,76,78,80,81,82,83,84,85,87,105,107,108,118,123,125,127,128,131,154,158,174,177,178,179,181,191,],[-109,-111,-110,-95,111,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-77,-107,-83,-74,-80,-90,-99,-100,-76,-82,-88,]),'C_BRACKET':([7,19,20,24,26,27,28,30,32,33,34,38,39,57,58,71,73,74,75,76,78,79,80,81,82,83,84,85,87,105,107,108,114,118,120,123,125,127,128,131,139,142,147,148,149,154,158,172,174,175,176,177,178,179,181,182,183,188,190,191,193,198,199,201,206,208,209,211,],[-27,-112,-28,-42,-41,-30,-113,-29,-27,-32,58,-33,-31,-26,-21,-109,-111,-110,-95,-63,-108,-60,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-61,-102,-58,-101,-97,-77,-107,-83,-118,-35,-73,-119,-66,-74,-80,-34,-90,-62,-59,-99,-100,-76,-82,-54,-46,-117,-43,-88,-57,205,-114,-52,-53,210,-24,-23,]),'PRINT':([7,19,20,24,26,27,28,30,32,33,38,39,58,139,142,148,165,172,182,183,188,190,193,199,201,206,],[18,-112,-28,-42,-41,-30,-113,-29,18,-32,-33,-31,-21,-118,-35,-119,18,-34,-54,-46,-117,-43,-57,-114,-52,-53,]),'C_PARENTHESIS':([55,60,61,62,65,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,96,97,99,100,105,107,108,114,118,120,123,125,126,127,128,129,131,134,136,141,146,147,149,151,154,156,158,167,170,174,175,176,177,178,179,180,181,187,189,191,],[-121,-125,-125,98,101,-109,-111,-110,-95,-63,117,-108,-60,-98,-96,-75,-111,-87,-105,-123,-81,132,135,-128,138,140,-37,-103,-106,-104,-61,-102,-58,-101,-97,-121,-77,-107,-120,-83,-126,-124,-40,174,-73,-66,178,-74,-123,-80,-128,-38,-90,-62,-59,-99,-100,-76,-122,-82,-127,-39,-88,]),'TRUE':([50,51,55,56,63,64,66,67,72,103,106,109,110,111,112,113,115,116,119,121,122,126,130,152,153,155,157,159,160,161,164,171,196,197,203,],[-36,-45,73,73,73,73,73,-45,-89,73,73,-72,-67,-68,-69,-70,-71,73,-64,73,-65,73,73,-78,-79,73,-85,-84,73,-86,73,-36,73,73,73,]),'MINUS':([71,73,74,75,78,80,81,82,83,84,85,87,105,107,108,118,123,125,127,128,131,158,174,177,178,181,191,],[-109,-111,-110,-95,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,153,-107,-83,-80,-90,-99,-100,-82,-88,]),'DIVIDE':([71,73,74,75,78,80,81,83,84,85,87,105,107,108,118,123,125,128,131,174,177,178,191,],[-109,-111,-110,-95,-108,-98,-96,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-107,157,-90,-99,-100,-88,]),'O_BRACKET':([3,98,132,135,138,140,162,169,192,197,200,],[7,7,-55,165,7,-116,7,7,-56,203,7,]),'EQUALITY':([71,73,74,75,76,78,80,81,82,83,84,85,87,105,107,108,118,123,125,127,128,131,154,158,174,177,178,179,181,191,],[-109,-111,-110,-95,110,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-77,-107,-83,-74,-80,-90,-99,-100,-76,-82,-88,]),'SEMICOLON':([71,73,74,75,76,78,79,80,81,82,83,84,85,87,101,102,105,107,108,114,117,118,120,123,125,127,128,131,143,144,147,149,154,158,163,173,174,175,176,177,178,179,181,191,194,204,210,],[-109,-111,-110,-95,-63,-108,-60,-98,-96,-75,-111,-87,-105,-81,142,-44,-103,-106,-104,-61,148,-102,-58,-101,-97,-77,-107,-83,172,-44,-73,-66,-74,-80,183,190,-90,-62,-59,-99,-100,-76,-82,-88,-47,209,211,]),'STRINGCONST':([50,51,55,56,63,64,66,67,72,103,106,109,110,111,112,113,115,116,119,121,122,126,130,152,153,155,157,159,160,161,164,171,196,197,203,],[-36,-45,74,74,74,74,74,-45,-89,74,74,-72,-67,-68,-69,-70,-71,74,-64,74,-65,74,74,-78,-79,74,-85,-84,74,-86,74,-36,74,74,74,]),'COMMA':([71,73,74,75,76,78,79,80,81,82,83,84,85,86,87,96,100,105,107,108,114,118,120,123,125,127,128,131,134,141,147,149,154,156,158,167,174,175,176,177,178,179,181,185,191,202,],[-109,-111,-110,-95,-63,-108,-60,-98,-96,-75,-111,-87,-105,130,-81,137,-37,-103,-106,-104,-61,-102,-58,-101,-97,-77,-107,-83,-126,171,-73,-66,-74,130,-80,137,-90,-62,-59,-99,-100,-76,-82,196,-88,196,]),'SUM':([71,73,74,75,78,80,81,82,83,84,85,87,105,107,108,118,123,125,127,128,131,158,174,177,178,181,191,],[-109,-111,-110,-95,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,152,-107,-83,-80,-90,-99,-100,-82,-88,]),'$end':([1,2,4,6,8,9,13,40,42,44,45,46,47,58,166,168,205,],[-4,0,-4,-1,-2,-3,-25,-10,-6,-9,-5,-7,-8,-21,-11,-12,-22,]),'FUNCTION':([1,4,8,13,40,42,44,45,46,47,58,166,168,205,],[5,5,-2,-25,-10,-6,-9,-5,-7,-8,-21,-11,-12,-22,]),'DIFFERENT':([71,73,74,75,76,78,80,81,82,83,84,85,87,105,107,108,118,123,125,127,128,131,154,158,174,177,178,179,181,191,],[-109,-111,-110,-95,109,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-77,-107,-83,-74,-80,-90,-99,-100,-76,-82,-88,]),'STRING':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,58,60,61,137,139,142,148,165,172,182,183,188,190,193,199,201,206,],[10,25,-112,-28,-42,-41,-30,-113,-29,25,-32,25,-33,-31,-21,91,91,91,-118,-35,-119,25,-34,-54,-46,-117,-43,-57,-114,-52,-53,]),'EQUALS':([22,29,52,53,54,68,70,89,145,],[51,-98,67,-94,-94,-92,-91,133,-93,]),'TIMES':([7,19,20,24,26,27,28,30,32,33,38,39,58,139,142,148,165,172,182,183,188,190,193,199,201,206,],[16,-112,-28,-42,-41,-30,-113,-29,16,-32,-33,-31,-21,-118,-35,-119,16,-34,-54,-46,-117,-43,-57,-114,-52,-53,]),'INTCONST':([48,50,51,55,56,63,64,66,67,69,72,103,106,109,110,111,112,113,115,116,119,121,122,124,126,130,152,153,155,157,159,160,161,164,171,196,197,203,],[62,-36,-45,78,78,78,78,78,-45,104,-89,78,78,-72,-67,-68,-69,-70,-71,78,-64,78,-65,150,78,78,-78,-79,78,-85,-84,78,-86,78,-36,78,78,78,]),'O_S_BRACKET':([29,53,54,80,133,],[-98,69,69,124,164,]),'ID':([7,10,11,12,14,15,19,20,21,23,24,25,26,27,28,30,32,33,35,36,38,39,50,51,55,56,58,59,63,64,66,67,72,90,91,93,94,95,103,106,109,110,111,112,113,115,116,119,121,122,126,130,139,142,148,152,153,155,157,159,160,161,165,171,172,182,183,188,190,193,197,199,201,203,206,],[29,41,43,41,41,41,-112,-28,-13,53,-42,-16,-41,-30,-113,-29,29,-32,-14,-15,-33,-31,-36,-45,80,80,-21,53,80,80,80,-45,-89,134,-20,-18,-19,-17,80,80,-72,-67,-68,-69,-70,-71,80,-64,80,-65,80,80,-118,-35,-119,-78,-79,80,-85,-84,80,-86,29,-36,-34,-54,-46,-117,-43,-57,80,-114,-52,80,-53,]),'IF':([7,19,20,24,26,27,28,30,32,33,38,39,58,139,142,148,165,172,182,183,188,190,193,199,201,206,],[31,-112,-28,-42,-41,-30,-113,-29,31,-32,-33,-31,-21,-118,-35,-119,31,-34,-54,-46,-117,-43,-57,-114,-52,-53,]),'AND':([71,73,74,75,76,78,79,80,81,82,83,84,85,87,105,107,108,114,118,123,125,127,128,131,147,154,158,174,175,177,178,179,181,191,],[-109,-111,-110,-95,-63,-108,119,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-61,-102,-101,-97,-77,-107,-83,-73,-74,-80,-90,-62,-99,-100,-76,-82,-88,]),'FALSE':([50,51,55,56,63,64,66,67,72,103,106,109,110,111,112,113,115,116,119,121,122,126,130,152,153,155,157,159,160,161,164,171,196,197,203,],[-36,-45,83,83,83,83,83,-45,-89,83,83,-72,-67,-68,-69,-70,-71,83,-64,83,-65,83,83,-78,-79,83,-85,-84,83,-86,83,-36,83,83,83,]),'GREATER_EQUAL':([71,73,74,75,76,78,80,81,82,83,84,85,87,105,107,108,118,123,125,127,128,131,154,158,174,177,178,179,181,191,],[-109,-111,-110,-95,112,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-77,-107,-83,-74,-80,-90,-99,-100,-76,-82,-88,]),'MULTIPLY':([71,73,74,75,78,80,81,83,84,85,87,105,107,108,118,123,125,128,131,174,177,178,191,],[-109,-111,-110,-95,-108,-98,-96,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-107,159,-90,-99,-100,-88,]),'INT':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,58,60,61,137,139,142,148,165,172,182,183,188,190,193,199,201,206,],[15,35,-112,-28,-42,-41,-30,-113,-29,35,-32,35,-33,-31,-21,93,93,93,-118,-35,-119,35,-34,-54,-46,-117,-43,-57,-114,-52,-53,]),'FLOAT':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,58,60,61,137,139,142,148,165,172,182,183,188,190,193,199,201,206,],[12,36,-112,-28,-42,-41,-30,-113,-29,36,-32,36,-33,-31,-21,94,94,94,-118,-35,-119,36,-34,-54,-46,-117,-43,-57,-114,-52,-53,]),'LIST':([7,19,20,24,26,27,28,30,32,33,38,39,58,139,142,148,165,172,182,183,188,190,193,199,201,206,],[37,-112,-28,-42,-41,-30,-113,-29,37,-32,-33,-31,-21,-118,-35,-119,37,-34,-54,-46,-117,-43,-57,-114,-52,-53,]),'C_S_BRACKET':([71,73,74,78,83,85,104,105,107,108,118,128,150,164,184,185,195,202,207,],[-109,-111,-110,-108,-111,-105,145,-103,-106,-104,-102,-107,177,-49,194,-51,-48,-51,-50,]),'BOOL':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,58,60,61,137,139,142,148,165,172,182,183,188,190,193,199,201,206,],[14,21,-112,-28,-42,-41,-30,-113,-29,21,-32,21,-33,-31,-21,95,95,95,-118,-35,-119,21,-34,-54,-46,-117,-43,-57,-114,-52,-53,]),'LESS_EQUAL':([71,73,74,75,76,78,80,81,82,83,84,85,87,105,107,108,118,123,125,127,128,131,154,158,174,177,178,179,181,191,],[-109,-111,-110,-95,115,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-77,-107,-83,-74,-80,-90,-99,-100,-76,-82,-88,]),'MAIN':([0,],[3,]),'OR':([71,73,74,75,76,78,79,80,81,82,83,84,85,87,105,107,108,114,118,123,125,127,128,131,147,154,158,174,175,177,178,179,181,191,],[-109,-111,-110,-95,-63,-108,122,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-61,-102,-101,-97,-77,-107,-83,-73,-74,-80,-90,-62,-99,-100,-76,-82,-88,]),'MOD':([71,73,74,75,78,80,81,83,84,85,87,105,107,108,118,123,125,128,131,174,177,178,191,],[-109,-111,-110,-95,-108,-98,-96,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-107,161,-90,-99,-100,-88,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersloop':([96,167,],[136,187,]),'parametersinputloop':([86,156,],[129,180,]),'functionorlist':([80,],[125,]),'logic_op_quadruple':([149,],[176,]),'optionalconstants':([185,202,],[195,207,]),'add_int_constant_to_dict':([78,],[118,]),'expressionoptional':([79,],[120,]),'equals_quadruple':([102,144,],[143,173,]),'add_o_parenthesis':([72,],[106,]),'exploop':([127,],[154,]),'end_while':([188,],[199,]),'function_end':([13,],[45,]),'divmult':([131,],[160,]),'addsub':([127,],[155,]),'logicop':([79,],[121,]),'relop_quadruple':([147,],[175,]),'functionloop':([1,4,],[6,9,]),'whileloop':([7,32,165,],[19,19,19,]),'add_c_parenthesis':([174,],[191,]),'parameters':([60,61,],[92,97,]),'termloop':([131,],[158,]),'fact':([55,56,63,64,66,103,106,116,121,126,130,155,160,197,203,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'function_head':([5,],[13,]),'add_string_constant_to_dict':([74,],[108,]),'add_to_stack':([29,80,],[54,123,]),'init':([7,32,165,],[20,20,20,]),'program':([0,],[2,]),'listaccess':([53,54,],[68,70,]),'constants':([55,56,63,64,66,103,106,116,121,126,130,155,160,164,196,197,203,],[81,81,81,81,81,81,81,81,81,81,81,81,81,185,202,81,81,]),'parameterinit':([60,61,137,],[96,96,167,]),'expression2optional':([76,],[114,]),'var':([23,59,],[52,89,]),'var_assign':([7,32,165,],[22,22,22,]),'type':([7,32,37,165,],[23,23,59,23,]),'start_while':([17,],[49,]),'normalinit':([7,32,165,],[24,24,24,]),'function':([1,4,],[4,4,]),'print_quadruple':([100,],[141,]),'term_quadruple':([87,],[131,]),'listinit':([7,32,165,],[26,26,26,]),'parametersinput':([55,126,],[77,151,]),'function_def':([11,],[42,]),'writting':([7,32,165,],[27,27,27,]),'condition_while':([140,],[169,]),'else':([182,],[193,]),'varconstfunction':([55,56,63,64,66,103,106,116,121,126,130,155,160,197,203,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'start_printing':([50,171,],[64,64,]),'start_condition':([132,],[162,]),'functionreturn':([186,],[198,]),'timesloop':([7,32,165,],[28,28,28,]),'add_float_constant_to_dict':([71,],[105,]),'expression2':([55,56,63,64,66,103,106,121,126,130,197,203,],[79,79,79,79,79,79,79,149,79,79,79,79,]),'condition':([7,32,165,],[30,30,30,]),'add_equals':([51,67,],[66,103,]),'parametertype':([60,61,137,],[90,90,90,]),'statute':([7,32,165,],[32,32,32,]),'term':([55,56,63,64,66,103,106,116,121,126,130,155,160,197,203,],[82,82,82,82,82,82,82,82,82,82,82,82,181,82,82,]),'main':([0,],[1,]),'end_condition':([193,],[201,]),'assignation':([7,32,165,],[33,33,33,]),'statutesloop':([7,32,165,],[34,57,186,]),'function_with_return_def':([10,12,14,15,],[40,44,46,47,]),'booleanconst':([55,56,63,64,66,103,106,116,121,126,130,155,160,164,196,197,203,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'exp_quadruple':([82,],[127,]),'relop':([76,],[116,]),'list':([133,],[163,]),'functionblock':([135,],[166,]),'listelements':([164,],[184,]),'optionalwritting':([141,],[170,]),'varconst':([55,56,63,64,66,103,106,116,121,126,130,155,160,197,203,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'functioncall':([7,32,165,],[38,38,38,]),'block':([3,98,138,162,169,200,],[8,139,168,182,188,206,]),'exp':([55,56,63,64,66,103,106,116,121,126,130,155,197,203,],[76,76,76,76,76,76,76,147,76,76,76,179,76,76,]),'add_bool_constant_to_dict':([73,83,],[107,128,]),'writtingloop':([50,171,],[65,189,]),'else_condition':([192,],[200,]),'expression':([55,56,63,64,66,103,106,126,130,197,203,],[86,88,99,100,102,144,146,86,156,204,208,]),'loop':([7,32,165,],[39,39,39,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> main functionloop','program',2,'p_program','parser.py',13),
  ('main -> MAIN block','main',2,'p_main','parser.py',18),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',24),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',25),
  ('function -> FUNCTION function_head function_end','function',3,'p_function','parser.py',29),
  ('function_head -> VOID function_def','function_head',2,'p_function_head','parser.py',39),
  ('function_head -> BOOL function_with_return_def','function_head',2,'p_function_head','parser.py',40),
  ('function_head -> INT function_with_return_def','function_head',2,'p_function_head','parser.py',41),
  ('function_head -> FLOAT function_with_return_def','function_head',2,'p_function_head','parser.py',42),
  ('function_head -> STRING function_with_return_def','function_head',2,'p_function_head','parser.py',43),
  ('function_with_return_def -> ID O_PARENTHESIS parameters C_PARENTHESIS functionblock','function_with_return_def',5,'p_function_with_return_def','parser.py',50),
  ('function_def -> ID O_PARENTHESIS parameters C_PARENTHESIS block','function_def',5,'p_function_def','parser.py',54),
  ('type -> BOOL','type',1,'p_type','parser.py',59),
  ('type -> INT','type',1,'p_type','parser.py',60),
  ('type -> FLOAT','type',1,'p_type','parser.py',61),
  ('type -> STRING','type',1,'p_type','parser.py',62),
  ('parametertype -> BOOL','parametertype',1,'p_parametertype','parser.py',68),
  ('parametertype -> INT','parametertype',1,'p_parametertype','parser.py',69),
  ('parametertype -> FLOAT','parametertype',1,'p_parametertype','parser.py',70),
  ('parametertype -> STRING','parametertype',1,'p_parametertype','parser.py',71),
  ('block -> O_BRACKET statutesloop C_BRACKET','block',3,'p_block','parser.py',77),
  ('functionblock -> O_BRACKET statutesloop functionreturn C_BRACKET','functionblock',4,'p_functionblock','parser.py',81),
  ('functionreturn -> RETURN O_BRACKET expression C_BRACKET SEMICOLON','functionreturn',5,'p_functionreturn','parser.py',85),
  ('functionreturn -> RETURN expression SEMICOLON','functionreturn',3,'p_functionreturn','parser.py',86),
  ('function_end -> <empty>','function_end',0,'p_function_end','parser.py',89),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',94),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',95),
  ('statute -> init','statute',1,'p_statute','parser.py',99),
  ('statute -> condition','statute',1,'p_statute','parser.py',100),
  ('statute -> writting','statute',1,'p_statute','parser.py',101),
  ('statute -> loop','statute',1,'p_statute','parser.py',102),
  ('statute -> assignation','statute',1,'p_statute','parser.py',103),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',104),
  ('assignation -> var_assign EQUALS add_equals expression equals_quadruple SEMICOLON','assignation',6,'p_assignation','parser.py',108),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',113),
  ('start_printing -> <empty>','start_printing',0,'p_start_printing','parser.py',116),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',120),
  ('writtingloop -> start_printing expression print_quadruple optionalwritting','writtingloop',4,'p_writtingloop','parser.py',129),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',133),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',134),
  ('init -> listinit','init',1,'p_init','parser.py',137),
  ('init -> normalinit','init',1,'p_init','parser.py',138),
  ('normalinit -> type var EQUALS add_equals expression equals_quadruple SEMICOLON','normalinit',7,'p_normalinit','parser.py',142),
  ('equals_quadruple -> <empty>','equals_quadruple',0,'p_equals_quadruple','parser.py',145),
  ('add_equals -> <empty>','add_equals',0,'p_add_equals','parser.py',154),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',159),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',163),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',167),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',168),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',171),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',172),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS start_condition block else end_condition','condition',8,'p_condition','parser.py',176),
  ('else -> ELSE else_condition block','else',3,'p_else','parser.py',180),
  ('else -> <empty>','else',0,'p_else','parser.py',181),
  ('start_condition -> <empty>','start_condition',0,'p_start_condition','parser.py',184),
  ('else_condition -> <empty>','else_condition',0,'p_else_condition','parser.py',188),
  ('end_condition -> <empty>','end_condition',0,'p_end_condition','parser.py',192),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',197),
  ('expressionoptional -> logicop expression2 logic_op_quadruple','expressionoptional',3,'p_expressionoptional','parser.py',200),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',201),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',204),
  ('expression2optional -> relop exp relop_quadruple','expression2optional',3,'p_expression2optional','parser.py',207),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',208),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',212),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',213),
  ('logic_op_quadruple -> <empty>','logic_op_quadruple',0,'p_logic_op_quadruple','parser.py',217),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',224),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',225),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',226),
  ('relop -> LESS','relop',1,'p_relop','parser.py',227),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',228),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',229),
  ('relop_quadruple -> <empty>','relop_quadruple',0,'p_relop_quadruple','parser.py',233),
  ('exp -> term exp_quadruple exploop','exp',3,'p_exp','parser.py',240),
  ('exp_quadruple -> <empty>','exp_quadruple',0,'p_exp_quadruple','parser.py',243),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',250),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',251),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',254),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',255),
  ('term -> fact term_quadruple termloop','term',3,'p_term','parser.py',260),
  ('term_quadruple -> <empty>','term_quadruple',0,'p_term_quadruple','parser.py',263),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',270),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',271),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',275),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',276),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',277),
  ('fact -> varconst','fact',1,'p_fact','parser.py',282),
  ('fact -> O_PARENTHESIS add_o_parenthesis expression C_PARENTHESIS add_c_parenthesis','fact',5,'p_fact','parser.py',283),
  ('add_o_parenthesis -> <empty>','add_o_parenthesis',0,'p_add_o_parenthesis','parser.py',286),
  ('add_c_parenthesis -> <empty>','add_c_parenthesis',0,'p_add_c_parenthesis','parser.py',290),
  ('var_assign -> ID add_to_stack listaccess','var_assign',3,'p_var_assign','parser.py',294),
  ('var -> ID listaccess','var',2,'p_var','parser.py',306),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',322),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',323),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',327),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',328),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',331),
  ('add_to_stack -> <empty>','add_to_stack',0,'p_add_to_stack','parser.py',334),
  ('functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET','functionorlist',3,'p_functionorlist','parser.py',338),
  ('functionorlist -> O_PARENTHESIS parametersinput C_PARENTHESIS','functionorlist',3,'p_functionorlist','parser.py',339),
  ('functionorlist -> add_to_stack','functionorlist',1,'p_functionorlist','parser.py',340),
  ('constants -> INTCONST add_int_constant_to_dict','constants',2,'p_constants','parser.py',344),
  ('constants -> FLOATCONST add_float_constant_to_dict','constants',2,'p_constants','parser.py',345),
  ('constants -> STRINGCONST add_string_constant_to_dict','constants',2,'p_constants','parser.py',346),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',347),
  ('booleanconst -> TRUE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',351),
  ('booleanconst -> FALSE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',352),
  ('add_int_constant_to_dict -> <empty>','add_int_constant_to_dict',0,'p_add_int_constant_to_dict','parser.py',355),
  ('add_float_constant_to_dict -> <empty>','add_float_constant_to_dict',0,'p_add_float_constant_to_dict','parser.py',359),
  ('add_string_constant_to_dict -> <empty>','add_string_constant_to_dict',0,'p_add_string_constant_to_dict','parser.py',363),
  ('add_bool_constant_to_dict -> <empty>','add_bool_constant_to_dict',0,'p_add_bool_constant_to_dict','parser.py',367),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',372),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',373),
  ('whileloop -> WHILE start_while O_PARENTHESIS expression C_PARENTHESIS condition_while block end_while','whileloop',8,'p_whileloop','parser.py',377),
  ('start_while -> <empty>','start_while',0,'p_start_while','parser.py',380),
  ('condition_while -> <empty>','condition_while',0,'p_condition_while','parser.py',384),
  ('end_while -> <empty>','end_while',0,'p_end_while','parser.py',388),
  ('timesloop -> TIMES O_PARENTHESIS INTCONST C_PARENTHESIS block','timesloop',5,'p_timesloop','parser.py',393),
  ('functioncall -> ID O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON','functioncall',5,'p_functioncall','parser.py',397),
  ('parametersinput -> expression parametersinputloop','parametersinput',2,'p_parametersinput','parser.py',401),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',402),
  ('parametersinputloop -> COMMA expression parametersinputloop','parametersinputloop',3,'p_parametersinputloop','parser.py',406),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',407),
  ('parameters -> parameterinit parametersloop','parameters',2,'p_parameters','parser.py',411),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',412),
  ('parameterinit -> parametertype ID','parameterinit',2,'p_parameterinit','parser.py',415),
  ('parametersloop -> COMMA parameterinit parametersloop','parametersloop',3,'p_parametersloop','parser.py',426),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',427),
]
