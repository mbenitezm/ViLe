
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'P\xd4\x0c\x1f\x8aJm\x17.\x85\xedK\x10W-\x95'
    
_lr_action_items = {'RETURN':([7,19,20,24,26,27,28,30,32,33,34,38,39,51,83,133,143,150,153,155,169,173,174,180,181,],[-23,-105,-24,-38,-37,-26,-106,-25,-23,-28,52,-29,-27,-22,-19,-108,-107,-31,-109,-50,-30,-48,-42,-39,-49,]),'LESS':([57,59,60,61,62,63,65,66,67,68,69,70,72,93,95,96,105,110,112,114,115,117,141,145,160,163,164,165,166,178,],[-102,-104,-103,-88,101,-101,-91,-89,-68,-104,-80,-98,-74,-96,-99,-97,-95,-94,-90,-70,-100,-76,-67,-73,-83,-92,-93,-69,-75,-81,]),'VOID':([5,],[12,]),'O_PARENTHESIS':([16,17,18,29,31,40,42,43,44,49,50,52,58,65,73,75,76,94,97,98,99,100,101,103,104,106,108,109,113,121,125,139,140,142,144,146,147,148,168,],[41,42,43,49,50,55,58,-32,-41,58,58,58,-82,113,58,58,-41,58,-65,-60,-61,-62,-63,-64,58,-57,58,-58,58,58,58,-71,-72,58,-78,-77,58,-79,-32,]),'ELSE':([83,155,],[-19,172,]),'FLOATCONST':([42,43,44,49,50,52,58,73,75,76,94,97,98,99,100,101,103,104,106,108,109,113,121,125,139,140,142,144,146,147,148,157,168,184,],[57,-32,-41,57,57,57,-82,57,57,-41,57,-65,-60,-61,-62,-63,-64,57,-57,57,-58,57,57,57,-71,-72,57,-78,-77,57,-79,57,-32,57,]),'WHILE':([7,19,20,24,26,27,28,30,32,33,38,39,83,133,143,150,153,155,169,173,174,180,181,],[17,-105,-24,-38,-37,-26,-106,-25,17,-28,-29,-27,-19,-108,-107,-31,-109,-50,-30,-48,-42,-39,-49,]),'GREATER':([57,59,60,61,62,63,65,66,67,68,69,70,72,93,95,96,105,110,112,114,115,117,141,145,160,163,164,165,166,178,],[-102,-104,-103,-88,99,-101,-91,-89,-68,-104,-80,-98,-74,-96,-99,-97,-95,-94,-90,-70,-100,-76,-67,-73,-83,-92,-93,-69,-75,-81,]),'C_BRACKET':([7,19,20,24,26,27,28,30,32,33,34,38,39,51,53,83,127,133,143,150,153,155,169,173,174,180,181,],[-23,-105,-24,-38,-37,-26,-106,-25,-23,-28,-21,-29,-27,-22,83,-19,-20,-108,-107,-31,-109,-50,-30,-48,-42,-39,-49,]),'PRINT':([7,19,20,24,26,27,28,30,32,33,38,39,83,133,143,150,153,155,169,173,174,180,181,],[18,-105,-24,-38,-37,-26,-106,-25,18,-28,-29,-27,-19,-108,-107,-31,-109,-50,-30,-48,-42,-39,-49,]),'C_PARENTHESIS':([49,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,79,80,81,86,90,93,95,96,102,105,107,110,112,113,114,115,117,118,124,129,131,134,135,136,138,141,145,149,154,159,160,161,162,163,164,165,166,167,171,177,178,179,],[-111,-115,92,-102,-104,-103,-88,-56,-101,-53,-91,-89,-68,-104,-80,-98,116,-74,119,123,-113,126,130,-118,-96,-99,-97,-54,-95,-51,-94,-90,-111,-70,-100,-76,-33,-110,-116,-114,160,-66,-59,164,-67,-73,-36,-113,-118,-83,-55,-52,-92,-93,-69,-75,-34,-112,-117,-81,-35,]),'TRUE':([42,43,44,49,50,52,58,73,75,76,94,97,98,99,100,101,103,104,106,108,109,113,121,125,139,140,142,144,146,147,148,157,168,184,],[59,-32,-41,59,59,59,-82,59,59,-41,59,-65,-60,-61,-62,-63,-64,59,-57,59,-58,59,59,59,-71,-72,59,-78,-77,59,-79,59,-32,59,]),'MINUS':([57,59,60,61,63,65,66,67,68,69,70,72,93,95,96,105,110,112,114,115,117,145,160,163,164,166,178,],[-102,-104,-103,-88,-101,-91,-89,-68,-104,-80,-98,-74,-96,-99,-97,-95,-94,-90,140,-100,-76,-73,-83,-92,-93,-75,-81,]),'DIVIDE':([57,59,60,61,63,65,66,68,69,70,72,93,95,96,105,110,112,115,117,160,163,164,178,],[-102,-104,-103,-88,-101,-91,-89,-104,-80,-98,-74,-96,-99,-97,-95,-94,-90,-100,144,-83,-92,-93,-81,]),'O_BRACKET':([3,92,116,126,130,172,],[7,7,7,7,7,7,]),'EQUALITY':([57,59,60,61,62,63,65,66,67,68,69,70,72,93,95,96,105,110,112,114,115,117,141,145,160,163,164,165,166,178,],[-102,-104,-103,-88,98,-101,-91,-89,-68,-104,-80,-98,-74,-96,-99,-97,-95,-94,-90,-70,-100,-76,-67,-73,-83,-92,-93,-69,-75,-81,]),'SEMICOLON':([57,59,60,61,62,63,64,65,66,67,68,69,70,72,82,93,95,96,102,105,107,110,112,114,115,117,119,120,123,135,136,141,145,151,152,156,160,161,162,163,164,165,166,170,178,182,],[-102,-104,-103,-88,-56,-101,-53,-91,-89,-68,-104,-80,-98,-74,127,-96,-99,-97,-54,-95,-51,-94,-90,-70,-100,-76,150,-40,153,-66,-59,-67,-73,169,-40,174,-83,-55,-52,-92,-93,-69,-75,180,-81,-43,]),'STRINGCONST':([42,43,44,49,50,52,58,73,75,76,94,97,98,99,100,101,103,104,106,108,109,113,121,125,139,140,142,144,146,147,148,157,168,184,],[60,-32,-41,60,60,60,-82,60,60,-41,60,-65,-60,-61,-62,-63,-64,60,-57,60,-58,60,60,60,-71,-72,60,-78,-77,60,-79,60,-32,60,]),'COMMA':([57,59,60,61,62,63,64,65,66,67,68,69,70,72,80,90,93,95,96,102,105,107,110,112,114,115,117,118,129,135,136,141,145,149,154,159,160,161,162,163,164,165,166,176,178,185,],[-102,-104,-103,-88,-56,-101,-53,-91,-89,-68,-104,-80,-98,-74,125,132,-96,-99,-97,-54,-95,-51,-94,-90,-70,-100,-76,-33,-116,-66,-59,-67,-73,168,125,132,-83,-55,-52,-92,-93,-69,-75,184,-81,184,]),'SUM':([57,59,60,61,63,65,66,67,68,69,70,72,93,95,96,105,110,112,114,115,117,145,160,163,164,166,178,],[-102,-104,-103,-88,-101,-91,-89,-68,-104,-80,-98,-74,-96,-99,-97,-95,-94,-90,139,-100,-76,-73,-83,-92,-93,-75,-81,]),'$end':([1,2,4,6,8,9,83,158,],[-4,0,-4,-1,-2,-3,-19,-5,]),'FUNCTION':([1,4,8,83,158,],[5,5,-2,-19,-5,]),'DIFFERENT':([57,59,60,61,62,63,65,66,67,68,69,70,72,93,95,96,105,110,112,114,115,117,141,145,160,163,164,165,166,178,],[-102,-104,-103,-88,97,-101,-91,-89,-68,-104,-80,-98,-74,-96,-99,-97,-95,-94,-90,-70,-100,-76,-67,-73,-83,-92,-93,-69,-75,-81,]),'STRING':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,55,83,132,133,143,150,153,155,169,173,174,180,181,],[10,25,-105,-24,-38,-37,-26,-106,-25,25,-28,25,-29,-27,91,-19,91,-108,-107,-31,-109,-50,-30,-48,-42,-39,-49,]),'EQUALS':([22,29,45,46,48,77,84,122,],[44,-87,76,-87,-84,-85,128,-86,]),'TIMES':([7,19,20,24,26,27,28,30,32,33,38,39,83,133,143,150,153,155,169,173,174,180,181,],[16,-105,-24,-38,-37,-26,-106,-25,16,-28,-29,-27,-19,-108,-107,-31,-109,-50,-30,-48,-42,-39,-49,]),'INTCONST':([41,42,43,44,47,49,50,52,58,73,75,76,94,97,98,99,100,101,103,104,106,108,109,111,113,121,125,139,140,142,144,146,147,148,157,168,184,],[56,63,-32,-41,78,63,63,63,-82,63,63,-41,63,-65,-60,-61,-62,-63,-64,63,-57,63,-58,137,63,63,63,-71,-72,63,-78,-77,63,-79,63,-32,63,]),'O_S_BRACKET':([29,46,65,128,],[47,47,111,157,]),'ID':([7,10,11,12,13,14,15,19,20,21,23,24,25,26,27,28,30,32,33,35,36,38,39,42,43,44,49,50,52,54,58,73,75,76,83,85,87,88,89,91,94,97,98,99,100,101,103,104,106,108,109,113,121,125,133,139,140,142,143,144,146,147,148,150,153,155,168,169,173,174,180,181,],[29,-10,-8,-6,-9,-7,40,-105,-24,-11,46,-38,-14,-37,-26,-106,-25,29,-28,-12,-13,-29,-27,65,-32,-41,65,65,65,46,-82,65,65,-41,-19,129,-16,-17,-15,-18,65,-65,-60,-61,-62,-63,-64,65,-57,65,-58,65,65,65,-108,-71,-72,65,-107,-78,-77,65,-79,-31,-109,-50,-32,-30,-48,-42,-39,-49,]),'IF':([7,19,20,24,26,27,28,30,32,33,38,39,83,133,143,150,153,155,169,173,174,180,181,],[31,-105,-24,-38,-37,-26,-106,-25,31,-28,-29,-27,-19,-108,-107,-31,-109,-50,-30,-48,-42,-39,-49,]),'AND':([57,59,60,61,62,63,64,65,66,67,68,69,70,72,93,95,96,102,105,110,112,114,115,117,135,141,145,160,161,163,164,165,166,178,],[-102,-104,-103,-88,-56,-101,106,-91,-89,-68,-104,-80,-98,-74,-96,-99,-97,-54,-95,-94,-90,-70,-100,-76,-66,-67,-73,-83,-55,-92,-93,-69,-75,-81,]),'FALSE':([42,43,44,49,50,52,58,73,75,76,94,97,98,99,100,101,103,104,106,108,109,113,121,125,139,140,142,144,146,147,148,157,168,184,],[68,-32,-41,68,68,68,-82,68,68,-41,68,-65,-60,-61,-62,-63,-64,68,-57,68,-58,68,68,68,-71,-72,68,-78,-77,68,-79,68,-32,68,]),'GREATER_EQUAL':([57,59,60,61,62,63,65,66,67,68,69,70,72,93,95,96,105,110,112,114,115,117,141,145,160,163,164,165,166,178,],[-102,-104,-103,-88,100,-101,-91,-89,-68,-104,-80,-98,-74,-96,-99,-97,-95,-94,-90,-70,-100,-76,-67,-73,-83,-92,-93,-69,-75,-81,]),'MULTIPLY':([57,59,60,61,63,65,66,68,69,70,72,93,95,96,105,110,112,115,117,160,163,164,178,],[-102,-104,-103,-88,-101,-91,-89,-104,-80,-98,-74,-96,-99,-97,-95,-94,-90,-100,146,-83,-92,-93,-81,]),'INT':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,55,83,132,133,143,150,153,155,169,173,174,180,181,],[11,35,-105,-24,-38,-37,-26,-106,-25,35,-28,35,-29,-27,87,-19,87,-108,-107,-31,-109,-50,-30,-48,-42,-39,-49,]),'FLOAT':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,55,83,132,133,143,150,153,155,169,173,174,180,181,],[13,36,-105,-24,-38,-37,-26,-106,-25,36,-28,36,-29,-27,88,-19,88,-108,-107,-31,-109,-50,-30,-48,-42,-39,-49,]),'LIST':([7,19,20,24,26,27,28,30,32,33,38,39,83,133,143,150,153,155,169,173,174,180,181,],[37,-105,-24,-38,-37,-26,-106,-25,37,-28,-29,-27,-19,-108,-107,-31,-109,-50,-30,-48,-42,-39,-49,]),'C_S_BRACKET':([57,59,60,63,68,70,78,93,95,96,105,115,137,157,175,176,183,185,186,],[-102,-104,-103,-101,-104,-98,122,-96,-99,-97,-95,-100,163,-45,182,-47,-44,-47,-46,]),'BOOL':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,55,83,132,133,143,150,153,155,169,173,174,180,181,],[14,21,-105,-24,-38,-37,-26,-106,-25,21,-28,21,-29,-27,89,-19,89,-108,-107,-31,-109,-50,-30,-48,-42,-39,-49,]),'LESS_EQUAL':([57,59,60,61,62,63,65,66,67,68,69,70,72,93,95,96,105,110,112,114,115,117,141,145,160,163,164,165,166,178,],[-102,-104,-103,-88,103,-101,-91,-89,-68,-104,-80,-98,-74,-96,-99,-97,-95,-94,-90,-70,-100,-76,-67,-73,-83,-92,-93,-69,-75,-81,]),'MAIN':([0,],[3,]),'OR':([57,59,60,61,62,63,64,65,66,67,68,69,70,72,93,95,96,102,105,110,112,114,115,117,135,141,145,160,161,163,164,165,166,178,],[-102,-104,-103,-88,-56,-101,109,-91,-89,-68,-104,-80,-98,-74,-96,-99,-97,-54,-95,-94,-90,-70,-100,-76,-66,-67,-73,-83,-55,-92,-93,-69,-75,-81,]),'MOD':([57,59,60,61,63,65,66,68,69,70,72,93,95,96,105,110,112,115,117,160,163,164,178,],[-102,-104,-103,-88,-101,-91,-89,-104,-80,-98,-74,-96,-99,-97,-95,-94,-90,-100,148,-83,-92,-93,-81,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersloop':([90,159,],[131,177,]),'parametersinputloop':([80,154,],[124,171,]),'functionorlist':([65,],[112,]),'logic_op_quadruple':([136,],[162,]),'optionalconstants':([176,185,],[183,186,]),'add_int_constant_to_dict':([63,],[105,]),'expressionoptional':([64,],[107,]),'equals_quadruple':([120,152,],[151,170,]),'add_o_parenthesis':([58,],[94,]),'exploop':([114,],[141,]),'divmult':([117,],[147,]),'addsub':([114,],[142,]),'logicop':([64,],[108,]),'relop_quadruple':([135,],[161,]),'functionloop':([1,4,],[6,9,]),'whileloop':([7,32,],[19,19,]),'add_c_parenthesis':([160,],[178,]),'parameters':([55,],[86,]),'termloop':([117,],[145,]),'fact':([42,49,50,52,73,75,94,104,108,113,121,125,142,147,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'add_string_constant_to_dict':([60,],[96,]),'add_to_stack':([65,],[110,]),'init':([7,32,],[20,20,]),'program':([0,],[2,]),'listaccess':([29,46,],[48,77,]),'constants':([42,49,50,52,73,75,94,104,108,113,121,125,142,147,157,184,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,176,185,]),'parameterinit':([55,132,],[90,159,]),'expression2optional':([62,],[102,]),'var':([23,54,],[45,84,]),'var_assign':([7,32,],[22,22,]),'type':([7,32,37,],[23,23,54,]),'normalinit':([7,32,],[24,24,]),'function':([1,4,],[4,4,]),'print_quadruple':([118,],[149,]),'term_quadruple':([72,],[117,]),'listinit':([7,32,],[26,26,]),'parametersinput':([49,113,],[79,138,]),'writting':([7,32,],[27,27,]),'else':([155,],[173,]),'varconstfunction':([42,49,50,52,73,75,94,104,108,113,121,125,142,147,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'start_printing':([43,168,],[73,73,]),'functionreturn':([34,],[53,]),'timesloop':([7,32,],[28,28,]),'add_float_constant_to_dict':([57,],[93,]),'expression2':([42,49,50,52,73,75,94,108,113,121,125,],[64,64,64,64,64,64,64,136,64,64,64,]),'condition':([7,32,],[30,30,]),'add_equals':([44,76,],[75,121,]),'parametertype':([55,132,],[85,85,]),'statute':([7,32,],[32,32,]),'term':([42,49,50,52,73,75,94,104,108,113,121,125,142,147,],[67,67,67,67,67,67,67,67,67,67,67,67,67,166,]),'main':([0,],[1,]),'assignation':([7,32,],[33,33,]),'statutesloop':([7,32,],[34,51,]),'varconst':([42,49,50,52,73,75,94,104,108,113,121,125,142,147,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'booleanconst':([42,49,50,52,73,75,94,104,108,113,121,125,142,147,157,184,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'exp_quadruple':([67,],[114,]),'relop':([62,],[104,]),'list':([128,],[156,]),'expression':([42,49,50,52,73,75,94,113,121,125,],[71,80,81,82,118,120,134,80,152,154,]),'listelements':([157,],[175,]),'optionalwritting':([149,],[167,]),'functioncall':([7,32,],[38,38,]),'block':([3,92,116,126,130,172,],[8,133,143,155,158,181,]),'exp':([42,49,50,52,73,75,94,104,108,113,121,125,142,],[62,62,62,62,62,62,62,135,62,62,62,62,165,]),'add_bool_constant_to_dict':([59,68,],[95,115,]),'writtingloop':([43,168,],[74,179,]),'functiontype':([5,],[15,]),'loop':([7,32,],[39,39,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> main functionloop','program',2,'p_program','parser.py',13),
  ('main -> MAIN block','main',2,'p_main','parser.py',18),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',24),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',25),
  ('function -> FUNCTION functiontype ID O_PARENTHESIS parameters C_PARENTHESIS block','function',7,'p_function','parser.py',29),
  ('functiontype -> VOID','functiontype',1,'p_functiontype','parser.py',40),
  ('functiontype -> BOOL','functiontype',1,'p_functiontype','parser.py',41),
  ('functiontype -> INT','functiontype',1,'p_functiontype','parser.py',42),
  ('functiontype -> FLOAT','functiontype',1,'p_functiontype','parser.py',43),
  ('functiontype -> STRING','functiontype',1,'p_functiontype','parser.py',44),
  ('type -> BOOL','type',1,'p_type','parser.py',50),
  ('type -> INT','type',1,'p_type','parser.py',51),
  ('type -> FLOAT','type',1,'p_type','parser.py',52),
  ('type -> STRING','type',1,'p_type','parser.py',53),
  ('parametertype -> BOOL','parametertype',1,'p_parametertype','parser.py',59),
  ('parametertype -> INT','parametertype',1,'p_parametertype','parser.py',60),
  ('parametertype -> FLOAT','parametertype',1,'p_parametertype','parser.py',61),
  ('parametertype -> STRING','parametertype',1,'p_parametertype','parser.py',62),
  ('block -> O_BRACKET statutesloop functionreturn C_BRACKET','block',4,'p_block','parser.py',68),
  ('functionreturn -> RETURN expression SEMICOLON','functionreturn',3,'p_functionreturn','parser.py',72),
  ('functionreturn -> <empty>','functionreturn',0,'p_functionreturn','parser.py',73),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',78),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',79),
  ('statute -> init','statute',1,'p_statute','parser.py',83),
  ('statute -> condition','statute',1,'p_statute','parser.py',84),
  ('statute -> writting','statute',1,'p_statute','parser.py',85),
  ('statute -> loop','statute',1,'p_statute','parser.py',86),
  ('statute -> assignation','statute',1,'p_statute','parser.py',87),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',88),
  ('assignation -> var_assign EQUALS add_equals expression equals_quadruple SEMICOLON','assignation',6,'p_assignation','parser.py',92),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',97),
  ('start_printing -> <empty>','start_printing',0,'p_start_printing','parser.py',100),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',104),
  ('writtingloop -> start_printing expression print_quadruple optionalwritting','writtingloop',4,'p_writtingloop','parser.py',113),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',117),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',118),
  ('init -> listinit','init',1,'p_init','parser.py',121),
  ('init -> normalinit','init',1,'p_init','parser.py',122),
  ('normalinit -> type var EQUALS add_equals expression equals_quadruple SEMICOLON','normalinit',7,'p_normalinit','parser.py',126),
  ('equals_quadruple -> <empty>','equals_quadruple',0,'p_equals_quadruple','parser.py',129),
  ('add_equals -> <empty>','add_equals',0,'p_add_equals','parser.py',138),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',143),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',147),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',151),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',152),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',155),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',156),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS block else','condition',6,'p_condition','parser.py',160),
  ('else -> ELSE block','else',2,'p_else','parser.py',164),
  ('else -> <empty>','else',0,'p_else','parser.py',165),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',169),
  ('expressionoptional -> logicop expression2 logic_op_quadruple','expressionoptional',3,'p_expressionoptional','parser.py',172),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',173),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',176),
  ('expression2optional -> relop exp relop_quadruple','expression2optional',3,'p_expression2optional','parser.py',179),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',180),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',184),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',185),
  ('logic_op_quadruple -> <empty>','logic_op_quadruple',0,'p_logic_op_quadruple','parser.py',189),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',196),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',197),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',198),
  ('relop -> LESS','relop',1,'p_relop','parser.py',199),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',200),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',201),
  ('relop_quadruple -> <empty>','relop_quadruple',0,'p_relop_quadruple','parser.py',205),
  ('exp -> term exp_quadruple exploop','exp',3,'p_exp','parser.py',212),
  ('exp_quadruple -> <empty>','exp_quadruple',0,'p_exp_quadruple','parser.py',215),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',222),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',223),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',226),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',227),
  ('term -> fact term_quadruple termloop','term',3,'p_term','parser.py',232),
  ('term_quadruple -> <empty>','term_quadruple',0,'p_term_quadruple','parser.py',235),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',242),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',243),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',247),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',248),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',249),
  ('fact -> varconst','fact',1,'p_fact','parser.py',254),
  ('fact -> O_PARENTHESIS add_o_parenthesis expression C_PARENTHESIS add_c_parenthesis','fact',5,'p_fact','parser.py',255),
  ('add_o_parenthesis -> <empty>','add_o_parenthesis',0,'p_add_o_parenthesis','parser.py',258),
  ('add_c_parenthesis -> <empty>','add_c_parenthesis',0,'p_add_c_parenthesis','parser.py',262),
  ('var_assign -> ID listaccess','var_assign',2,'p_var_assign','parser.py',266),
  ('var -> ID listaccess','var',2,'p_var','parser.py',276),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',292),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',293),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',297),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',298),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',301),
  ('add_to_stack -> <empty>','add_to_stack',0,'p_add_to_stack','parser.py',304),
  ('functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET','functionorlist',3,'p_functionorlist','parser.py',308),
  ('functionorlist -> O_PARENTHESIS parametersinput C_PARENTHESIS','functionorlist',3,'p_functionorlist','parser.py',309),
  ('functionorlist -> add_to_stack','functionorlist',1,'p_functionorlist','parser.py',310),
  ('constants -> INTCONST add_int_constant_to_dict','constants',2,'p_constants','parser.py',314),
  ('constants -> FLOATCONST add_float_constant_to_dict','constants',2,'p_constants','parser.py',315),
  ('constants -> STRINGCONST add_string_constant_to_dict','constants',2,'p_constants','parser.py',316),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',317),
  ('booleanconst -> TRUE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',321),
  ('booleanconst -> FALSE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',322),
  ('add_int_constant_to_dict -> <empty>','add_int_constant_to_dict',0,'p_add_int_constant_to_dict','parser.py',325),
  ('add_float_constant_to_dict -> <empty>','add_float_constant_to_dict',0,'p_add_float_constant_to_dict','parser.py',329),
  ('add_string_constant_to_dict -> <empty>','add_string_constant_to_dict',0,'p_add_string_constant_to_dict','parser.py',333),
  ('add_bool_constant_to_dict -> <empty>','add_bool_constant_to_dict',0,'p_add_bool_constant_to_dict','parser.py',337),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',342),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',343),
  ('whileloop -> WHILE O_PARENTHESIS expression C_PARENTHESIS block','whileloop',5,'p_whileloop','parser.py',347),
  ('timesloop -> TIMES O_PARENTHESIS INTCONST C_PARENTHESIS block','timesloop',5,'p_timesloop','parser.py',351),
  ('functioncall -> ID O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON','functioncall',5,'p_functioncall','parser.py',355),
  ('parametersinput -> expression parametersinputloop','parametersinput',2,'p_parametersinput','parser.py',359),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',360),
  ('parametersinputloop -> COMMA expression parametersinputloop','parametersinputloop',3,'p_parametersinputloop','parser.py',364),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',365),
  ('parameters -> parameterinit parametersloop','parameters',2,'p_parameters','parser.py',369),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',370),
  ('parameterinit -> parametertype ID','parameterinit',2,'p_parameterinit','parser.py',373),
  ('parametersloop -> COMMA parameterinit parametersloop','parametersloop',3,'p_parametersloop','parser.py',384),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',385),
]
