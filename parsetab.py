
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x9a\x1e\x95\xe1Td\x81\xea\x1f$9Z\x14\xfc\xaaE'
    
_lr_action_items = {'RETURN':([19,20,24,26,27,28,30,32,33,38,39,57,58,156,160,165,175,180,183,184,187,190,191,193,195,201,203,208,],[-112,-28,-42,-41,-30,-113,-29,-27,-32,-33,-31,-26,-21,-35,-121,-27,-120,-34,-54,-46,199,-118,-117,-43,-57,-114,-52,-53,]),'LESS':([62,64,65,66,67,68,70,71,72,73,74,75,77,98,100,101,110,115,117,119,120,122,146,150,169,172,173,174,176,189,],[-109,-111,-110,-95,106,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-77,-107,-83,-74,-80,-90,-99,-100,-76,-82,-88,]),'VOID':([5,],[11,]),'O_PARENTHESIS':([16,17,18,29,31,41,43,48,49,50,51,55,56,63,70,78,79,81,82,99,102,103,104,105,106,108,109,111,113,114,118,127,131,144,145,147,149,151,152,153,179,199,205,],[48,-115,50,55,56,60,61,63,78,-36,-45,63,63,-89,118,63,63,63,-45,63,-72,-67,-68,-69,-70,-71,63,-64,63,-65,63,63,63,-78,-79,63,-85,-84,63,-86,-36,63,63,]),'ELSE':([58,183,],[-21,194,]),'FLOATCONST':([48,50,51,55,56,63,78,79,81,82,99,102,103,104,105,106,108,109,111,113,114,118,127,131,144,145,147,149,151,152,153,164,179,198,199,205,],[62,-36,-45,62,62,-89,62,62,62,-45,62,-72,-67,-68,-69,-70,-71,62,-64,62,-65,62,62,62,-78,-79,62,-85,-84,62,-86,62,-36,62,62,62,]),'WHILE':([7,19,20,24,26,27,28,30,32,33,38,39,58,156,160,165,175,180,183,184,190,191,193,195,201,203,208,],[17,-112,-28,-42,-41,-30,-113,-29,17,-32,-33,-31,-21,-35,-121,17,-120,-34,-54,-46,-118,-117,-43,-57,-114,-52,-53,]),'GREATER':([62,64,65,66,67,68,70,71,72,73,74,75,77,98,100,101,110,115,117,119,120,122,146,150,169,172,173,174,176,189,],[-109,-111,-110,-95,104,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-77,-107,-83,-74,-80,-90,-99,-100,-76,-82,-88,]),'C_BRACKET':([7,19,20,24,26,27,28,30,32,33,34,38,39,57,58,62,64,65,66,67,68,69,70,71,72,73,74,75,77,98,100,101,107,110,112,115,117,119,120,122,140,141,146,150,156,160,169,170,171,172,173,174,175,176,180,183,184,189,190,191,193,195,200,201,203,208,210,211,213,],[-27,-112,-28,-42,-41,-30,-113,-29,-27,-32,58,-33,-31,-26,-21,-109,-111,-110,-95,-63,-108,-60,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-61,-102,-58,-101,-97,-77,-107,-83,-73,-66,-74,-80,-35,-121,-90,-62,-59,-99,-100,-76,-120,-82,-34,-54,-46,-88,-118,-117,-43,-57,207,-114,-52,-53,212,-24,-23,]),'PRINT':([7,19,20,24,26,27,28,30,32,33,38,39,58,156,160,165,175,180,183,184,190,191,193,195,201,203,208,],[18,-112,-28,-42,-41,-30,-113,-29,18,-32,-33,-31,-21,-35,-121,18,-120,-34,-54,-46,-118,-117,-43,-57,-114,-52,-53,]),'C_PARENTHESIS':([55,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,86,87,88,92,96,97,98,100,101,107,110,112,115,117,118,119,120,122,123,124,130,134,136,139,140,141,143,146,150,155,161,167,169,170,171,172,173,174,176,178,182,188,189,192,],[-123,-127,-127,-109,-111,-110,-95,-63,-108,-60,-98,-96,-75,-111,-87,-105,121,-81,125,129,-125,132,135,-130,138,-103,-106,-104,-61,-102,-58,-101,-97,-123,-77,-107,-83,154,-37,-122,-128,-126,169,-73,-66,173,-74,-80,-40,-125,-130,-90,-62,-59,-99,-100,-76,-82,-38,-124,-129,-88,-39,]),'TRUE':([48,50,51,55,56,63,78,79,81,82,99,102,103,104,105,106,108,109,111,113,114,118,127,131,144,145,147,149,151,152,153,164,179,198,199,205,],[64,-36,-45,64,64,-89,64,64,64,-45,64,-72,-67,-68,-69,-70,-71,64,-64,64,-65,64,64,64,-78,-79,64,-85,-84,64,-86,64,-36,64,64,64,]),'MINUS':([62,64,65,66,68,70,71,72,73,74,75,77,98,100,101,110,115,117,119,120,122,150,169,172,173,176,189,],[-109,-111,-110,-95,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,145,-107,-83,-80,-90,-99,-100,-82,-88,]),'DIVIDE':([62,64,65,66,68,70,71,73,74,75,77,98,100,101,110,115,117,120,122,169,172,173,189,],[-109,-111,-110,-95,-108,-98,-96,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-107,149,-90,-99,-100,-88,]),'O_BRACKET':([3,121,132,135,138,148,154,162,177,194,199,202,],[7,-119,-55,165,7,7,-116,7,7,-56,205,7,]),'EQUALITY':([62,64,65,66,67,68,70,71,72,73,74,75,77,98,100,101,110,115,117,119,120,122,146,150,169,172,173,174,176,189,],[-109,-111,-110,-95,103,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-77,-107,-83,-74,-80,-90,-99,-100,-76,-82,-88,]),'SEMICOLON':([62,64,65,66,67,68,69,70,71,72,73,74,75,77,98,100,101,107,110,112,115,117,119,120,122,125,126,129,140,141,146,150,157,158,163,169,170,171,172,173,174,176,181,189,196,206,212,],[-109,-111,-110,-95,-63,-108,-60,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-61,-102,-58,-101,-97,-77,-107,-83,156,-44,160,-73,-66,-74,-80,180,-44,184,-90,-62,-59,-99,-100,-76,-82,193,-88,-47,211,213,]),'STRINGCONST':([48,50,51,55,56,63,78,79,81,82,99,102,103,104,105,106,108,109,111,113,114,118,127,131,144,145,147,149,151,152,153,164,179,198,199,205,],[65,-36,-45,65,65,-89,65,65,65,-45,65,-72,-67,-68,-69,-70,-71,65,-64,65,-65,65,65,65,-78,-79,65,-85,-84,65,-86,65,-36,65,65,65,]),'COMMA':([62,64,65,66,67,68,69,70,71,72,73,74,75,77,87,96,98,100,101,107,110,112,115,117,119,120,122,124,134,140,141,146,150,155,161,167,169,170,171,172,173,174,176,186,189,204,],[-109,-111,-110,-95,-63,-108,-60,-98,-96,-75,-111,-87,-105,-81,131,137,-103,-106,-104,-61,-102,-58,-101,-97,-77,-107,-83,-37,-128,-73,-66,-74,-80,179,131,137,-90,-62,-59,-99,-100,-76,-82,198,-88,198,]),'SUM':([62,64,65,66,68,70,71,72,73,74,75,77,98,100,101,110,115,117,119,120,122,150,169,172,173,176,189,],[-109,-111,-110,-95,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,144,-107,-83,-80,-90,-99,-100,-82,-88,]),'$end':([1,2,4,6,8,9,13,40,42,44,45,46,47,58,166,168,207,],[-4,0,-4,-1,-2,-3,-25,-10,-6,-9,-5,-7,-8,-21,-11,-12,-22,]),'FUNCTION':([1,4,8,13,40,42,44,45,46,47,58,166,168,207,],[5,5,-2,-25,-10,-6,-9,-5,-7,-8,-21,-11,-12,-22,]),'DIFFERENT':([62,64,65,66,67,68,70,71,72,73,74,75,77,98,100,101,110,115,117,119,120,122,146,150,169,172,173,174,176,189,],[-109,-111,-110,-95,102,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-77,-107,-83,-74,-80,-90,-99,-100,-76,-82,-88,]),'STRING':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,58,60,61,137,156,160,165,175,180,183,184,190,191,193,195,201,203,208,],[10,25,-112,-28,-42,-41,-30,-113,-29,25,-32,25,-33,-31,-21,91,91,91,-35,-121,25,-120,-34,-54,-46,-118,-117,-43,-57,-114,-52,-53,]),'EQUALS':([22,29,52,53,54,83,85,89,159,],[51,-98,82,-94,-94,-92,-91,133,-93,]),'TIMES':([7,19,20,24,26,27,28,30,32,33,38,39,58,156,160,165,175,180,183,184,190,191,193,195,201,203,208,],[16,-112,-28,-42,-41,-30,-113,-29,16,-32,-33,-31,-21,-35,-121,16,-120,-34,-54,-46,-118,-117,-43,-57,-114,-52,-53,]),'INTCONST':([48,50,51,55,56,63,78,79,81,82,84,99,102,103,104,105,106,108,109,111,113,114,116,118,127,131,144,145,147,149,151,152,153,164,179,198,199,205,],[68,-36,-45,68,68,-89,68,68,68,-45,128,68,-72,-67,-68,-69,-70,-71,68,-64,68,-65,142,68,68,68,-78,-79,68,-85,-84,68,-86,68,-36,68,68,68,]),'O_S_BRACKET':([29,53,54,70,133,],[-98,84,84,116,164,]),'ID':([7,10,11,12,14,15,19,20,21,23,24,25,26,27,28,30,32,33,35,36,38,39,48,50,51,55,56,58,59,63,78,79,81,82,90,91,93,94,95,99,102,103,104,105,106,108,109,111,113,114,118,127,131,144,145,147,149,151,152,153,156,160,165,175,179,180,183,184,190,191,193,195,199,201,203,205,208,],[29,41,43,41,41,41,-112,-28,-13,53,-42,-16,-41,-30,-113,-29,29,-32,-14,-15,-33,-31,70,-36,-45,70,70,-21,53,-89,70,70,70,-45,134,-20,-18,-19,-17,70,-72,-67,-68,-69,-70,-71,70,-64,70,-65,70,70,70,-78,-79,70,-85,-84,70,-86,-35,-121,29,-120,-36,-34,-54,-46,-118,-117,-43,-57,70,-114,-52,70,-53,]),'IF':([7,19,20,24,26,27,28,30,32,33,38,39,58,156,160,165,175,180,183,184,190,191,193,195,201,203,208,],[31,-112,-28,-42,-41,-30,-113,-29,31,-32,-33,-31,-21,-35,-121,31,-120,-34,-54,-46,-118,-117,-43,-57,-114,-52,-53,]),'AND':([62,64,65,66,67,68,69,70,71,72,73,74,75,77,98,100,101,107,110,115,117,119,120,122,140,146,150,169,170,172,173,174,176,189,],[-109,-111,-110,-95,-63,-108,111,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-61,-102,-101,-97,-77,-107,-83,-73,-74,-80,-90,-62,-99,-100,-76,-82,-88,]),'FALSE':([48,50,51,55,56,63,78,79,81,82,99,102,103,104,105,106,108,109,111,113,114,118,127,131,144,145,147,149,151,152,153,164,179,198,199,205,],[73,-36,-45,73,73,-89,73,73,73,-45,73,-72,-67,-68,-69,-70,-71,73,-64,73,-65,73,73,73,-78,-79,73,-85,-84,73,-86,73,-36,73,73,73,]),'GREATER_EQUAL':([62,64,65,66,67,68,70,71,72,73,74,75,77,98,100,101,110,115,117,119,120,122,146,150,169,172,173,174,176,189,],[-109,-111,-110,-95,105,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-77,-107,-83,-74,-80,-90,-99,-100,-76,-82,-88,]),'MULTIPLY':([62,64,65,66,68,70,71,73,74,75,77,98,100,101,110,115,117,120,122,169,172,173,189,],[-109,-111,-110,-95,-108,-98,-96,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-107,151,-90,-99,-100,-88,]),'INT':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,58,60,61,137,156,160,165,175,180,183,184,190,191,193,195,201,203,208,],[15,35,-112,-28,-42,-41,-30,-113,-29,35,-32,35,-33,-31,-21,93,93,93,-35,-121,35,-120,-34,-54,-46,-118,-117,-43,-57,-114,-52,-53,]),'FLOAT':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,58,60,61,137,156,160,165,175,180,183,184,190,191,193,195,201,203,208,],[12,36,-112,-28,-42,-41,-30,-113,-29,36,-32,36,-33,-31,-21,94,94,94,-35,-121,36,-120,-34,-54,-46,-118,-117,-43,-57,-114,-52,-53,]),'LIST':([7,19,20,24,26,27,28,30,32,33,38,39,58,156,160,165,175,180,183,184,190,191,193,195,201,203,208,],[37,-112,-28,-42,-41,-30,-113,-29,37,-32,-33,-31,-21,-35,-121,37,-120,-34,-54,-46,-118,-117,-43,-57,-114,-52,-53,]),'C_S_BRACKET':([62,64,65,68,73,75,98,100,101,110,120,128,142,164,185,186,197,204,209,],[-109,-111,-110,-108,-111,-105,-103,-106,-104,-102,-107,159,172,-49,196,-51,-48,-51,-50,]),'BOOL':([5,7,19,20,24,26,27,28,30,32,33,37,38,39,58,60,61,137,156,160,165,175,180,183,184,190,191,193,195,201,203,208,],[14,21,-112,-28,-42,-41,-30,-113,-29,21,-32,21,-33,-31,-21,95,95,95,-35,-121,21,-120,-34,-54,-46,-118,-117,-43,-57,-114,-52,-53,]),'LESS_EQUAL':([62,64,65,66,67,68,70,71,72,73,74,75,77,98,100,101,110,115,117,119,120,122,146,150,169,172,173,174,176,189,],[-109,-111,-110,-95,108,-108,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-77,-107,-83,-74,-80,-90,-99,-100,-76,-82,-88,]),'MAIN':([0,],[3,]),'OR':([62,64,65,66,67,68,69,70,71,72,73,74,75,77,98,100,101,107,110,115,117,119,120,122,140,146,150,169,170,172,173,174,176,189,],[-109,-111,-110,-95,-63,-108,114,-98,-96,-75,-111,-87,-105,-81,-103,-106,-104,-61,-102,-101,-97,-77,-107,-83,-73,-74,-80,-90,-62,-99,-100,-76,-82,-88,]),'MOD':([62,64,65,66,68,70,71,73,74,75,77,98,100,101,110,115,117,120,122,169,172,173,189,],[-109,-111,-110,-95,-108,-98,-96,-111,-87,-105,-81,-103,-106,-104,-102,-101,-97,-107,153,-90,-99,-100,-88,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parametersloop':([96,167,],[136,188,]),'parametersinputloop':([87,161,],[130,182,]),'functionorlist':([70,],[117,]),'logic_op_quadruple':([141,],[171,]),'optionalconstants':([186,204,],[197,209,]),'add_int_constant_to_dict':([68,],[110,]),'expressionoptional':([69,],[112,]),'equals_quadruple':([126,158,],[157,181,]),'add_o_parenthesis':([63,],[99,]),'exploop':([119,],[146,]),'end_while':([191,],[201,]),'function_end':([13,],[45,]),'divmult':([122,],[152,]),'addsub':([119,],[147,]),'logicop':([69,],[113,]),'relop_quadruple':([140,],[170,]),'functionloop':([1,4,],[6,9,]),'whileloop':([7,32,165,],[19,19,19,]),'add_c_parenthesis':([169,],[189,]),'parameters':([60,61,],[92,97,]),'termloop':([122,],[150,]),'fact':([48,55,56,78,79,81,99,109,113,118,127,131,147,152,199,205,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'function_head':([5,],[13,]),'add_string_constant_to_dict':([65,],[101,]),'add_to_stack':([29,70,],[54,115,]),'init':([7,32,165,],[20,20,20,]),'program':([0,],[2,]),'listaccess':([53,54,],[83,85,]),'constants':([48,55,56,78,79,81,99,109,113,118,127,131,147,152,164,198,199,205,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,186,204,71,71,]),'parameterinit':([60,61,137,],[96,96,167,]),'expression2optional':([67,],[107,]),'var':([23,59,],[52,89,]),'var_assign':([7,32,165,],[22,22,22,]),'type':([7,32,37,165,],[23,23,59,23,]),'start_while':([17,],[49,]),'normalinit':([7,32,165,],[24,24,24,]),'function':([1,4,],[4,4,]),'print_quadruple':([124,],[155,]),'term_quadruple':([77,],[122,]),'listinit':([7,32,165,],[26,26,26,]),'parametersinput':([55,118,],[86,143,]),'function_def':([11,],[42,]),'start_times':([121,],[148,]),'writting':([7,32,165,],[27,27,27,]),'end_times':([175,],[190,]),'condition_while':([154,],[177,]),'else':([183,],[195,]),'varconstfunction':([48,55,56,78,79,81,99,109,113,118,127,131,147,152,199,205,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'start_printing':([50,179,],[79,79,]),'start_condition':([132,],[162,]),'functionreturn':([187,],[200,]),'timesloop':([7,32,165,],[28,28,28,]),'add_float_constant_to_dict':([62,],[98,]),'expression2':([48,55,56,78,79,81,99,113,118,127,131,199,205,],[69,69,69,69,69,69,69,141,69,69,69,69,69,]),'condition':([7,32,165,],[30,30,30,]),'add_equals':([51,82,],[81,127,]),'parametertype':([60,61,137,],[90,90,90,]),'statute':([7,32,165,],[32,32,32,]),'term':([48,55,56,78,79,81,99,109,113,118,127,131,147,152,199,205,],[72,72,72,72,72,72,72,72,72,72,72,72,72,176,72,72,]),'main':([0,],[1,]),'end_condition':([195,],[203,]),'assignation':([7,32,165,],[33,33,33,]),'statutesloop':([7,32,165,],[34,57,187,]),'function_with_return_def':([10,12,14,15,],[40,44,46,47,]),'booleanconst':([48,55,56,78,79,81,99,109,113,118,127,131,147,152,164,198,199,205,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'exp_quadruple':([72,],[119,]),'relop':([67,],[109,]),'list':([133,],[163,]),'functionblock':([135,],[166,]),'listelements':([164,],[185,]),'optionalwritting':([155,],[178,]),'varconst':([48,55,56,78,79,81,99,109,113,118,127,131,147,152,199,205,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'functioncall':([7,32,165,],[38,38,38,]),'block':([3,138,148,162,177,202,],[8,168,175,183,191,208,]),'exp':([48,55,56,78,79,81,99,109,113,118,127,131,147,199,205,],[67,67,67,67,67,67,67,140,67,67,67,67,174,67,67,]),'add_bool_constant_to_dict':([64,73,],[100,120,]),'writtingloop':([50,179,],[80,192,]),'else_condition':([194,],[202,]),'expression':([48,55,56,78,79,81,99,118,127,131,199,205,],[76,87,88,123,124,126,139,87,158,161,206,210,]),'loop':([7,32,165,],[39,39,39,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> main functionloop','program',2,'p_program','parser.py',13),
  ('main -> MAIN block','main',2,'p_main','parser.py',18),
  ('functionloop -> function functionloop','functionloop',2,'p_functionloop','parser.py',24),
  ('functionloop -> <empty>','functionloop',0,'p_functionloop','parser.py',25),
  ('function -> FUNCTION function_head function_end','function',3,'p_function','parser.py',29),
  ('function_head -> VOID function_def','function_head',2,'p_function_head','parser.py',39),
  ('function_head -> BOOL function_with_return_def','function_head',2,'p_function_head','parser.py',40),
  ('function_head -> INT function_with_return_def','function_head',2,'p_function_head','parser.py',41),
  ('function_head -> FLOAT function_with_return_def','function_head',2,'p_function_head','parser.py',42),
  ('function_head -> STRING function_with_return_def','function_head',2,'p_function_head','parser.py',43),
  ('function_with_return_def -> ID O_PARENTHESIS parameters C_PARENTHESIS functionblock','function_with_return_def',5,'p_function_with_return_def','parser.py',49),
  ('function_def -> ID O_PARENTHESIS parameters C_PARENTHESIS block','function_def',5,'p_function_def','parser.py',53),
  ('type -> BOOL','type',1,'p_type','parser.py',58),
  ('type -> INT','type',1,'p_type','parser.py',59),
  ('type -> FLOAT','type',1,'p_type','parser.py',60),
  ('type -> STRING','type',1,'p_type','parser.py',61),
  ('parametertype -> BOOL','parametertype',1,'p_parametertype','parser.py',67),
  ('parametertype -> INT','parametertype',1,'p_parametertype','parser.py',68),
  ('parametertype -> FLOAT','parametertype',1,'p_parametertype','parser.py',69),
  ('parametertype -> STRING','parametertype',1,'p_parametertype','parser.py',70),
  ('block -> O_BRACKET statutesloop C_BRACKET','block',3,'p_block','parser.py',76),
  ('functionblock -> O_BRACKET statutesloop functionreturn C_BRACKET','functionblock',4,'p_functionblock','parser.py',80),
  ('functionreturn -> RETURN O_BRACKET expression C_BRACKET SEMICOLON','functionreturn',5,'p_functionreturn','parser.py',84),
  ('functionreturn -> RETURN expression SEMICOLON','functionreturn',3,'p_functionreturn','parser.py',85),
  ('function_end -> <empty>','function_end',0,'p_function_end','parser.py',88),
  ('statutesloop -> statute statutesloop','statutesloop',2,'p_statutesloop','parser.py',94),
  ('statutesloop -> <empty>','statutesloop',0,'p_statutesloop','parser.py',95),
  ('statute -> init','statute',1,'p_statute','parser.py',99),
  ('statute -> condition','statute',1,'p_statute','parser.py',100),
  ('statute -> writting','statute',1,'p_statute','parser.py',101),
  ('statute -> loop','statute',1,'p_statute','parser.py',102),
  ('statute -> assignation','statute',1,'p_statute','parser.py',103),
  ('statute -> functioncall','statute',1,'p_statute','parser.py',104),
  ('assignation -> var_assign EQUALS add_equals expression equals_quadruple SEMICOLON','assignation',6,'p_assignation','parser.py',108),
  ('writting -> PRINT O_PARENTHESIS writtingloop C_PARENTHESIS SEMICOLON','writting',5,'p_writting','parser.py',113),
  ('start_printing -> <empty>','start_printing',0,'p_start_printing','parser.py',116),
  ('print_quadruple -> <empty>','print_quadruple',0,'p_print_quadruple','parser.py',120),
  ('writtingloop -> start_printing expression print_quadruple optionalwritting','writtingloop',4,'p_writtingloop','parser.py',129),
  ('optionalwritting -> COMMA writtingloop','optionalwritting',2,'p_optionalwritting','parser.py',133),
  ('optionalwritting -> <empty>','optionalwritting',0,'p_optionalwritting','parser.py',134),
  ('init -> listinit','init',1,'p_init','parser.py',137),
  ('init -> normalinit','init',1,'p_init','parser.py',138),
  ('normalinit -> type var EQUALS add_equals expression equals_quadruple SEMICOLON','normalinit',7,'p_normalinit','parser.py',142),
  ('equals_quadruple -> <empty>','equals_quadruple',0,'p_equals_quadruple','parser.py',145),
  ('add_equals -> <empty>','add_equals',0,'p_add_equals','parser.py',154),
  ('listinit -> LIST type var EQUALS list SEMICOLON','listinit',6,'p_listinit','parser.py',159),
  ('list -> O_S_BRACKET listelements C_S_BRACKET','list',3,'p_list','parser.py',163),
  ('listelements -> constants optionalconstants','listelements',2,'p_listelements','parser.py',167),
  ('listelements -> <empty>','listelements',0,'p_listelements','parser.py',168),
  ('optionalconstants -> COMMA constants optionalconstants','optionalconstants',3,'p_optionalconstants','parser.py',171),
  ('optionalconstants -> <empty>','optionalconstants',0,'p_optionalconstants','parser.py',172),
  ('condition -> IF O_PARENTHESIS expression C_PARENTHESIS start_condition block else end_condition','condition',8,'p_condition','parser.py',176),
  ('else -> ELSE else_condition block','else',3,'p_else','parser.py',180),
  ('else -> <empty>','else',0,'p_else','parser.py',181),
  ('start_condition -> <empty>','start_condition',0,'p_start_condition','parser.py',184),
  ('else_condition -> <empty>','else_condition',0,'p_else_condition','parser.py',188),
  ('end_condition -> <empty>','end_condition',0,'p_end_condition','parser.py',192),
  ('expression -> expression2 expressionoptional','expression',2,'p_expression','parser.py',197),
  ('expressionoptional -> logicop expression2 logic_op_quadruple','expressionoptional',3,'p_expressionoptional','parser.py',200),
  ('expressionoptional -> <empty>','expressionoptional',0,'p_expressionoptional','parser.py',201),
  ('expression2 -> exp expression2optional','expression2',2,'p_expression2','parser.py',204),
  ('expression2optional -> relop exp relop_quadruple','expression2optional',3,'p_expression2optional','parser.py',207),
  ('expression2optional -> <empty>','expression2optional',0,'p_expression2optional','parser.py',208),
  ('logicop -> AND','logicop',1,'p_logicop','parser.py',212),
  ('logicop -> OR','logicop',1,'p_logicop','parser.py',213),
  ('logic_op_quadruple -> <empty>','logic_op_quadruple',0,'p_logic_op_quadruple','parser.py',217),
  ('relop -> EQUALITY','relop',1,'p_relop','parser.py',224),
  ('relop -> GREATER','relop',1,'p_relop','parser.py',225),
  ('relop -> GREATER_EQUAL','relop',1,'p_relop','parser.py',226),
  ('relop -> LESS','relop',1,'p_relop','parser.py',227),
  ('relop -> LESS_EQUAL','relop',1,'p_relop','parser.py',228),
  ('relop -> DIFFERENT','relop',1,'p_relop','parser.py',229),
  ('relop_quadruple -> <empty>','relop_quadruple',0,'p_relop_quadruple','parser.py',233),
  ('exp -> term exp_quadruple exploop','exp',3,'p_exp','parser.py',240),
  ('exp_quadruple -> <empty>','exp_quadruple',0,'p_exp_quadruple','parser.py',243),
  ('exploop -> addsub exp','exploop',2,'p_exploop','parser.py',250),
  ('exploop -> <empty>','exploop',0,'p_exploop','parser.py',251),
  ('addsub -> SUM','addsub',1,'p_addsub','parser.py',254),
  ('addsub -> MINUS','addsub',1,'p_addsub','parser.py',255),
  ('term -> fact term_quadruple termloop','term',3,'p_term','parser.py',260),
  ('term_quadruple -> <empty>','term_quadruple',0,'p_term_quadruple','parser.py',263),
  ('termloop -> divmult term','termloop',2,'p_termloop','parser.py',270),
  ('termloop -> <empty>','termloop',0,'p_termloop','parser.py',271),
  ('divmult -> MULTIPLY','divmult',1,'p_divmult','parser.py',275),
  ('divmult -> DIVIDE','divmult',1,'p_divmult','parser.py',276),
  ('divmult -> MOD','divmult',1,'p_divmult','parser.py',277),
  ('fact -> varconst','fact',1,'p_fact','parser.py',282),
  ('fact -> O_PARENTHESIS add_o_parenthesis expression C_PARENTHESIS add_c_parenthesis','fact',5,'p_fact','parser.py',283),
  ('add_o_parenthesis -> <empty>','add_o_parenthesis',0,'p_add_o_parenthesis','parser.py',286),
  ('add_c_parenthesis -> <empty>','add_c_parenthesis',0,'p_add_c_parenthesis','parser.py',290),
  ('var_assign -> ID add_to_stack listaccess','var_assign',3,'p_var_assign','parser.py',294),
  ('var -> ID listaccess','var',2,'p_var','parser.py',306),
  ('listaccess -> O_S_BRACKET INTCONST C_S_BRACKET','listaccess',3,'p_listaccess','parser.py',322),
  ('listaccess -> <empty>','listaccess',0,'p_listaccess','parser.py',323),
  ('varconst -> varconstfunction','varconst',1,'p_varconst','parser.py',327),
  ('varconst -> constants','varconst',1,'p_varconst','parser.py',328),
  ('varconstfunction -> ID functionorlist','varconstfunction',2,'p_varconstfunction','parser.py',331),
  ('add_to_stack -> <empty>','add_to_stack',0,'p_add_to_stack','parser.py',334),
  ('functionorlist -> O_S_BRACKET INTCONST C_S_BRACKET','functionorlist',3,'p_functionorlist','parser.py',338),
  ('functionorlist -> O_PARENTHESIS parametersinput C_PARENTHESIS','functionorlist',3,'p_functionorlist','parser.py',339),
  ('functionorlist -> add_to_stack','functionorlist',1,'p_functionorlist','parser.py',340),
  ('constants -> INTCONST add_int_constant_to_dict','constants',2,'p_constants','parser.py',344),
  ('constants -> FLOATCONST add_float_constant_to_dict','constants',2,'p_constants','parser.py',345),
  ('constants -> STRINGCONST add_string_constant_to_dict','constants',2,'p_constants','parser.py',346),
  ('constants -> booleanconst','constants',1,'p_constants','parser.py',347),
  ('booleanconst -> TRUE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',351),
  ('booleanconst -> FALSE add_bool_constant_to_dict','booleanconst',2,'p_booleanconst','parser.py',352),
  ('add_int_constant_to_dict -> <empty>','add_int_constant_to_dict',0,'p_add_int_constant_to_dict','parser.py',355),
  ('add_float_constant_to_dict -> <empty>','add_float_constant_to_dict',0,'p_add_float_constant_to_dict','parser.py',359),
  ('add_string_constant_to_dict -> <empty>','add_string_constant_to_dict',0,'p_add_string_constant_to_dict','parser.py',363),
  ('add_bool_constant_to_dict -> <empty>','add_bool_constant_to_dict',0,'p_add_bool_constant_to_dict','parser.py',367),
  ('loop -> whileloop','loop',1,'p_loop','parser.py',372),
  ('loop -> timesloop','loop',1,'p_loop','parser.py',373),
  ('whileloop -> WHILE start_while O_PARENTHESIS expression C_PARENTHESIS condition_while block end_while','whileloop',8,'p_whileloop','parser.py',377),
  ('start_while -> <empty>','start_while',0,'p_start_while','parser.py',380),
  ('condition_while -> <empty>','condition_while',0,'p_condition_while','parser.py',384),
  ('end_while -> <empty>','end_while',0,'p_end_while','parser.py',388),
  ('timesloop -> TIMES O_PARENTHESIS expression C_PARENTHESIS start_times block end_times','timesloop',7,'p_timesloop','parser.py',393),
  ('start_times -> <empty>','start_times',0,'p_start_times','parser.py',396),
  ('end_times -> <empty>','end_times',0,'p_end_times','parser.py',400),
  ('functioncall -> ID O_PARENTHESIS parametersinput C_PARENTHESIS SEMICOLON','functioncall',5,'p_functioncall','parser.py',405),
  ('parametersinput -> expression parametersinputloop','parametersinput',2,'p_parametersinput','parser.py',409),
  ('parametersinput -> <empty>','parametersinput',0,'p_parametersinput','parser.py',410),
  ('parametersinputloop -> COMMA expression parametersinputloop','parametersinputloop',3,'p_parametersinputloop','parser.py',414),
  ('parametersinputloop -> <empty>','parametersinputloop',0,'p_parametersinputloop','parser.py',415),
  ('parameters -> parameterinit parametersloop','parameters',2,'p_parameters','parser.py',419),
  ('parameters -> <empty>','parameters',0,'p_parameters','parser.py',420),
  ('parameterinit -> parametertype ID','parameterinit',2,'p_parameterinit','parser.py',423),
  ('parametersloop -> COMMA parameterinit parametersloop','parametersloop',3,'p_parametersloop','parser.py',434),
  ('parametersloop -> <empty>','parametersloop',0,'p_parametersloop','parser.py',435),
]
